/*
 * generated by Xtext 2.28.0
 */
package fr.imta.semafor.serializer;

import com.google.inject.Inject;
import fr.imta.semafor.services.FogDslGrammarAccess;
import java.util.List;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.IGrammarAccess;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.nodemodel.INode;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AbstractElementAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.AlternativeAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.GroupAlias;
import org.eclipse.xtext.serializer.analysis.GrammarAlias.TokenAlias;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynNavigable;
import org.eclipse.xtext.serializer.analysis.ISyntacticSequencerPDAProvider.ISynTransition;
import org.eclipse.xtext.serializer.sequencer.AbstractSyntacticSequencer;

@SuppressWarnings("all")
public class FogDslSyntacticSequencer extends AbstractSyntacticSequencer {

	protected FogDslGrammarAccess grammarAccess;
	protected AbstractElementAlias match_Application_FogResource_NetworkType_PhysicalNodeType_SerivceType___ResourceTypeKeyword_3_2_0_ColonKeyword_3_2_1_PhysicalNodeKeyword_3_2_2___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q_SpecKeyword_1_ColonKeyword_2_PhysicalResourcesKeyword_3_ColonKeyword_4_NetworkLinksKeyword_9_ColonKeyword_10_DownloadLinkKeyword_11_ColonKeyword_12_UploadLinkKeyword_14_ColonKeyword_15___or___ResourceTypeKeyword_3_4_0_ColonKeyword_3_4_1_NetworkKeyword_3_4_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ConstraintsKeyword_8_ColonKeyword_9___or___ResourceTypeKeyword_3_5_0_ColonKeyword_3_5_1_ServiceKeyword_3_5_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_NetworkPortsKeyword_8_1_0_ColonKeyword_8_1_1_HostedOnKeyword_9_ColonKeyword_10___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q___or___ResourceTypeKeyword_3_6_0_ColonKeyword_3_6_1_ApplicationKeyword_3_6_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ServicesKeyword_8_ColonKeyword_9___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a_ConnectorsKeyword_11_ColonKeyword_12__;
	protected AbstractElementAlias match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a;
	protected AbstractElementAlias match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__p;
	protected AbstractElementAlias match_AttributeType___UnitOfMeasurmentKeyword_6_0_ColonKeyword_6_1__q;
	protected AbstractElementAlias match_NetworkLinksType___SourceNetworksKeyword_15_0_ColonKeyword_15_1___HyphenMinusKeyword_15_2_0_EStringParserRuleCall_15_2_1__a__q;
	protected AbstractElementAlias match_NetworkLinksType___SourceNodeKeyword_17_0_ColonKeyword_17_1_EStringParserRuleCall_17_2__q;
	protected AbstractElementAlias match_NetworkLinksType___TargetNetworksKeyword_16_0_ColonKeyword_16_1___HyphenMinusKeyword_16_2_0_EStringParserRuleCall_16_2_1__a__q;
	protected AbstractElementAlias match_NetworkLinksType___TargetNodeKeyword_18_0_ColonKeyword_18_1_EStringParserRuleCall_18_2__q;
	protected AbstractElementAlias match_PhysicalNodeType___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q;
	protected AbstractElementAlias match_SerivceType___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q;
	protected AbstractElementAlias match_VirtualNodeType___FullStopKeyword_9_3_0_IDTerminalRuleCall_9_3_1__a;
	
	@Inject
	protected void init(IGrammarAccess access) {
		grammarAccess = (FogDslGrammarAccess) access;
		match_Application_FogResource_NetworkType_PhysicalNodeType_SerivceType___ResourceTypeKeyword_3_2_0_ColonKeyword_3_2_1_PhysicalNodeKeyword_3_2_2___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q_SpecKeyword_1_ColonKeyword_2_PhysicalResourcesKeyword_3_ColonKeyword_4_NetworkLinksKeyword_9_ColonKeyword_10_DownloadLinkKeyword_11_ColonKeyword_12_UploadLinkKeyword_14_ColonKeyword_15___or___ResourceTypeKeyword_3_4_0_ColonKeyword_3_4_1_NetworkKeyword_3_4_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ConstraintsKeyword_8_ColonKeyword_9___or___ResourceTypeKeyword_3_5_0_ColonKeyword_3_5_1_ServiceKeyword_3_5_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_NetworkPortsKeyword_8_1_0_ColonKeyword_8_1_1_HostedOnKeyword_9_ColonKeyword_10___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q___or___ResourceTypeKeyword_3_6_0_ColonKeyword_3_6_1_ApplicationKeyword_3_6_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ServicesKeyword_8_ColonKeyword_9___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a_ConnectorsKeyword_11_ColonKeyword_12__ = new AlternativeAlias(false, false, new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_2_0()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getColonKeyword_3_2_1()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getPhysicalNodeKeyword_3_2_2()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getMetadataKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getTagsKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_4())), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getSpecKeyword_1()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_2()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getPhysicalResourcesKeyword_3()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_4()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getNetworkLinksKeyword_9()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_10()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getDownloadLinkKeyword_11()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_12()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getUploadLinkKeyword_14()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_15())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_4_0()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getColonKeyword_3_4_1()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getNetworkKeyword_3_4_2()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getMetadataKeyword_0()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getColonKeyword_1()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getTagsKeyword_3()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getColonKeyword_4()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getSpecKeyword_6()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getColonKeyword_7()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getConstraintsKeyword_8()), new TokenAlias(false, false, grammarAccess.getNetworkTypeAccess().getColonKeyword_9())), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_5_0()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getColonKeyword_3_5_1()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getServiceKeyword_3_5_2()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getMetadataKeyword_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_1()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getTagsKeyword_3()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_4()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getSpecKeyword_6()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_7()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getNetworkPortsKeyword_8_1_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_8_1_1()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getHostedOnKeyword_9()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_10()), new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getVirtualNodesKeyword_11_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_11_1()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_2_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_2_1()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_3_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_3_1())))), new GroupAlias(false, false, new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_6_0()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getColonKeyword_3_6_1()), new TokenAlias(false, false, grammarAccess.getFogResourceAccess().getApplicationKeyword_3_6_2()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getMetadataKeyword_0()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_1()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getTagsKeyword_3()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_4()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getSpecKeyword_6()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_7()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getServicesKeyword_8()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_9()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_10_0()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getEStringParserRuleCall_10_1()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_10_2())), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getConnectorsKeyword_11()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_12())));
		match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_10_0()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getEStringParserRuleCall_10_1()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_10_2()));
		match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__p = new GroupAlias(true, false, new TokenAlias(false, false, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_10_0()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getEStringParserRuleCall_10_1()), new TokenAlias(false, false, grammarAccess.getApplicationAccess().getColonKeyword_10_2()));
		match_AttributeType___UnitOfMeasurmentKeyword_6_0_ColonKeyword_6_1__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getAttributeTypeAccess().getUnitOfMeasurmentKeyword_6_0()), new TokenAlias(false, false, grammarAccess.getAttributeTypeAccess().getColonKeyword_6_1()));
		match_NetworkLinksType___SourceNetworksKeyword_15_0_ColonKeyword_15_1___HyphenMinusKeyword_15_2_0_EStringParserRuleCall_15_2_1__a__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getSourceNetworksKeyword_15_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_15_1()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_15_2_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_15_2_1())));
		match_NetworkLinksType___SourceNodeKeyword_17_0_ColonKeyword_17_1_EStringParserRuleCall_17_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getSourceNodeKeyword_17_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_17_1()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_17_2()));
		match_NetworkLinksType___TargetNetworksKeyword_16_0_ColonKeyword_16_1___HyphenMinusKeyword_16_2_0_EStringParserRuleCall_16_2_1__a__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getTargetNetworksKeyword_16_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_16_1()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_16_2_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_16_2_1())));
		match_NetworkLinksType___TargetNodeKeyword_18_0_ColonKeyword_18_1_EStringParserRuleCall_18_2__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getTargetNodeKeyword_18_0()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_18_1()), new TokenAlias(false, false, grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_18_2()));
		match_PhysicalNodeType___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getMetadataKeyword_0_0()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_1()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getTagsKeyword_0_3()), new TokenAlias(false, false, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_4()));
		match_SerivceType___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q = new GroupAlias(false, true, new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getVirtualNodesKeyword_11_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getColonKeyword_11_1()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_2_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_2_1()), new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_3_0()), new TokenAlias(false, false, grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_3_1())));
		match_VirtualNodeType___FullStopKeyword_9_3_0_IDTerminalRuleCall_9_3_1__a = new GroupAlias(true, true, new TokenAlias(false, false, grammarAccess.getVirtualNodeTypeAccess().getFullStopKeyword_9_3_0()), new TokenAlias(false, false, grammarAccess.getVirtualNodeTypeAccess().getIDTerminalRuleCall_9_3_1()));
	}
	
	@Override
	protected String getUnassignedRuleCallToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (ruleCall.getRule() == grammarAccess.getEStringRule())
			return getEStringToken(semanticObject, ruleCall, node);
		else if (ruleCall.getRule() == grammarAccess.getIDRule())
			return getIDToken(semanticObject, ruleCall, node);
		return "";
	}
	
	/**
	 * EString returns ecore::EString:
	 * 	STRING | ID;
	 */
	protected String getEStringToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "\"\"";
	}
	
	/**
	 * terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	 */
	protected String getIDToken(EObject semanticObject, RuleCall ruleCall, INode node) {
		if (node != null)
			return getTokenText(node);
		return "";
	}
	
	@Override
	protected void emitUnassignedTokens(EObject semanticObject, ISynTransition transition, INode fromNode, INode toNode) {
		if (transition.getAmbiguousSyntaxes().isEmpty()) return;
		List<INode> transitionNodes = collectNodes(fromNode, toNode);
		for (AbstractElementAlias syntax : transition.getAmbiguousSyntaxes()) {
			List<INode> syntaxNodes = getNodesFor(transitionNodes, syntax);
			if (match_Application_FogResource_NetworkType_PhysicalNodeType_SerivceType___ResourceTypeKeyword_3_2_0_ColonKeyword_3_2_1_PhysicalNodeKeyword_3_2_2___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q_SpecKeyword_1_ColonKeyword_2_PhysicalResourcesKeyword_3_ColonKeyword_4_NetworkLinksKeyword_9_ColonKeyword_10_DownloadLinkKeyword_11_ColonKeyword_12_UploadLinkKeyword_14_ColonKeyword_15___or___ResourceTypeKeyword_3_4_0_ColonKeyword_3_4_1_NetworkKeyword_3_4_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ConstraintsKeyword_8_ColonKeyword_9___or___ResourceTypeKeyword_3_5_0_ColonKeyword_3_5_1_ServiceKeyword_3_5_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_NetworkPortsKeyword_8_1_0_ColonKeyword_8_1_1_HostedOnKeyword_9_ColonKeyword_10___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q___or___ResourceTypeKeyword_3_6_0_ColonKeyword_3_6_1_ApplicationKeyword_3_6_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ServicesKeyword_8_ColonKeyword_9___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a_ConnectorsKeyword_11_ColonKeyword_12__.equals(syntax))
				emit_Application_FogResource_NetworkType_PhysicalNodeType_SerivceType___ResourceTypeKeyword_3_2_0_ColonKeyword_3_2_1_PhysicalNodeKeyword_3_2_2___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q_SpecKeyword_1_ColonKeyword_2_PhysicalResourcesKeyword_3_ColonKeyword_4_NetworkLinksKeyword_9_ColonKeyword_10_DownloadLinkKeyword_11_ColonKeyword_12_UploadLinkKeyword_14_ColonKeyword_15___or___ResourceTypeKeyword_3_4_0_ColonKeyword_3_4_1_NetworkKeyword_3_4_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ConstraintsKeyword_8_ColonKeyword_9___or___ResourceTypeKeyword_3_5_0_ColonKeyword_3_5_1_ServiceKeyword_3_5_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_NetworkPortsKeyword_8_1_0_ColonKeyword_8_1_1_HostedOnKeyword_9_ColonKeyword_10___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q___or___ResourceTypeKeyword_3_6_0_ColonKeyword_3_6_1_ApplicationKeyword_3_6_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ServicesKeyword_8_ColonKeyword_9___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a_ConnectorsKeyword_11_ColonKeyword_12__(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a.equals(syntax))
				emit_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__p.equals(syntax))
				emit_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__p(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_AttributeType___UnitOfMeasurmentKeyword_6_0_ColonKeyword_6_1__q.equals(syntax))
				emit_AttributeType___UnitOfMeasurmentKeyword_6_0_ColonKeyword_6_1__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NetworkLinksType___SourceNetworksKeyword_15_0_ColonKeyword_15_1___HyphenMinusKeyword_15_2_0_EStringParserRuleCall_15_2_1__a__q.equals(syntax))
				emit_NetworkLinksType___SourceNetworksKeyword_15_0_ColonKeyword_15_1___HyphenMinusKeyword_15_2_0_EStringParserRuleCall_15_2_1__a__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NetworkLinksType___SourceNodeKeyword_17_0_ColonKeyword_17_1_EStringParserRuleCall_17_2__q.equals(syntax))
				emit_NetworkLinksType___SourceNodeKeyword_17_0_ColonKeyword_17_1_EStringParserRuleCall_17_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NetworkLinksType___TargetNetworksKeyword_16_0_ColonKeyword_16_1___HyphenMinusKeyword_16_2_0_EStringParserRuleCall_16_2_1__a__q.equals(syntax))
				emit_NetworkLinksType___TargetNetworksKeyword_16_0_ColonKeyword_16_1___HyphenMinusKeyword_16_2_0_EStringParserRuleCall_16_2_1__a__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_NetworkLinksType___TargetNodeKeyword_18_0_ColonKeyword_18_1_EStringParserRuleCall_18_2__q.equals(syntax))
				emit_NetworkLinksType___TargetNodeKeyword_18_0_ColonKeyword_18_1_EStringParserRuleCall_18_2__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_PhysicalNodeType___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q.equals(syntax))
				emit_PhysicalNodeType___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_SerivceType___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q.equals(syntax))
				emit_SerivceType___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q(semanticObject, getLastNavigableState(), syntaxNodes);
			else if (match_VirtualNodeType___FullStopKeyword_9_3_0_IDTerminalRuleCall_9_3_1__a.equals(syntax))
				emit_VirtualNodeType___FullStopKeyword_9_3_0_IDTerminalRuleCall_9_3_1__a(semanticObject, getLastNavigableState(), syntaxNodes);
			else acceptNodes(getLastNavigableState(), syntaxNodes);
		}
	}

	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     (
	  *         (
	  *             'resourceType' 
	  *             ':' 
	  *             'PhysicalNode' 
	  *             ('metadata' ':' 'tags' ':')? 
	  *             'Spec' 
	  *             ':' 
	  *             'physicalResources' 
	  *             ':' 
	  *             'networkLinks' 
	  *             ':' 
	  *             'downloadLink' 
	  *             ':' 
	  *             'uploadLink' 
	  *             ':'
	  *         ) | 
	  *         (
	  *             'resourceType' 
	  *             ':' 
	  *             'Network' 
	  *             'metadata' 
	  *             ':' 
	  *             'tags' 
	  *             ':' 
	  *             'Spec' 
	  *             ':' 
	  *             'constraints' 
	  *             ':'
	  *         ) | 
	  *         (
	  *             'resourceType' 
	  *             ':' 
	  *             'Service' 
	  *             'metadata' 
	  *             ':' 
	  *             'tags' 
	  *             ':' 
	  *             'Spec' 
	  *             ':' 
	  *             'networkPorts' 
	  *             ':' 
	  *             'hostedOn' 
	  *             ':' 
	  *             ('virtualNodes' ':' '-' EString ('-' EString)*)?
	  *         ) | 
	  *         (
	  *             'resourceType' 
	  *             ':' 
	  *             'Application' 
	  *             'metadata' 
	  *             ':' 
	  *             'tags' 
	  *             ':' 
	  *             'Spec' 
	  *             ':' 
	  *             'services' 
	  *             ':' 
	  *             ('-' EString ':')* 
	  *             'connectors' 
	  *             ':'
	  *         )
	  *     )
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' (ambiguity) (rule start)
	 
	 * </pre>
	 */
	protected void emit_Application_FogResource_NetworkType_PhysicalNodeType_SerivceType___ResourceTypeKeyword_3_2_0_ColonKeyword_3_2_1_PhysicalNodeKeyword_3_2_2___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q_SpecKeyword_1_ColonKeyword_2_PhysicalResourcesKeyword_3_ColonKeyword_4_NetworkLinksKeyword_9_ColonKeyword_10_DownloadLinkKeyword_11_ColonKeyword_12_UploadLinkKeyword_14_ColonKeyword_15___or___ResourceTypeKeyword_3_4_0_ColonKeyword_3_4_1_NetworkKeyword_3_4_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ConstraintsKeyword_8_ColonKeyword_9___or___ResourceTypeKeyword_3_5_0_ColonKeyword_3_5_1_ServiceKeyword_3_5_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_NetworkPortsKeyword_8_1_0_ColonKeyword_8_1_1_HostedOnKeyword_9_ColonKeyword_10___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q___or___ResourceTypeKeyword_3_6_0_ColonKeyword_3_6_1_ApplicationKeyword_3_6_2_MetadataKeyword_0_ColonKeyword_1_TagsKeyword_3_ColonKeyword_4_SpecKeyword_6_ColonKeyword_7_ServicesKeyword_8_ColonKeyword_9___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a_ConnectorsKeyword_11_ColonKeyword_12__(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('-' EString ':')*
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'Application' 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' '-' connectortypes+=ConnectorType
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'Application' 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' (rule start)
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' '-' connectortypes+=ConnectorType
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' (rule start)
	 *     name=ID 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' '-' connectortypes+=ConnectorType
	 *     name=ID 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' (rule end)
	 *     serviceTypes+=SerivceType (ambiguity) 'connectors' ':' '-' connectortypes+=ConnectorType
	 *     serviceTypes+=SerivceType (ambiguity) 'connectors' ':' (rule end)
	 *     tags+=Tag 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' '-' connectortypes+=ConnectorType
	 *     tags+=Tag 'Spec' ':' 'services' ':' (ambiguity) 'connectors' ':' (rule end)
	 
	 * </pre>
	 */
	protected void emit_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('-' EString ':')+
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'Application' 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) serviceTypes+=SerivceType
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) serviceTypes+=SerivceType
	 *     name=ID 'tags' ':' 'Spec' ':' 'services' ':' (ambiguity) serviceTypes+=SerivceType
	 *     serviceTypes+=SerivceType (ambiguity) serviceTypes+=SerivceType
	 *     tags+=Tag 'Spec' ':' 'services' ':' (ambiguity) serviceTypes+=SerivceType
	 
	 * </pre>
	 */
	protected void emit_Application___HyphenMinusKeyword_10_0_EStringParserRuleCall_10_1_ColonKeyword_10_2__p(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('unitOfMeasurment' ':')?
	 *
	 * This ambiguous syntax occurs at:
	 *     valueType=EString (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_AttributeType___UnitOfMeasurmentKeyword_6_0_ColonKeyword_6_1__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('sourceNetworks' ':' ('-' EString)*)?
	 *
	 * This ambiguous syntax occurs at:
	 *     constraints+=Constraint 'networks' ':' (ambiguity) ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     constraints+=networkClassConstraint 'networks' ':' (ambiguity) ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     name=ID 'tags' ':' 'Spec' ':' 'constraints' ':' 'networks' ':' (ambiguity) ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     tags+=Tag 'Spec' ':' 'constraints' ':' 'networks' ':' (ambiguity) ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 
	 * </pre>
	 */
	protected void emit_NetworkLinksType___SourceNetworksKeyword_15_0_ColonKeyword_15_1___HyphenMinusKeyword_15_2_0_EStringParserRuleCall_15_2_1__a__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('sourceNode' ':' EString)?
	 *
	 * This ambiguous syntax occurs at:
	 *     constraints+=Constraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? (ambiguity) ('targetNode' ':' EString)? (rule end)
	 *     constraints+=networkClassConstraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? (ambiguity) ('targetNode' ':' EString)? (rule end)
	 *     name=ID 'tags' ':' 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? (ambiguity) ('targetNode' ':' EString)? (rule end)
	 *     tags+=Tag 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? (ambiguity) ('targetNode' ':' EString)? (rule end)
	 
	 * </pre>
	 */
	protected void emit_NetworkLinksType___SourceNodeKeyword_17_0_ColonKeyword_17_1_EStringParserRuleCall_17_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('targetNetworks' ':' ('-' EString)*)?
	 *
	 * This ambiguous syntax occurs at:
	 *     constraints+=Constraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? (ambiguity) ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     constraints+=networkClassConstraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? (ambiguity) ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     name=ID 'tags' ':' 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? (ambiguity) ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 *     tags+=Tag 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? (ambiguity) ('sourceNode' ':' EString)? ('targetNode' ':' EString)? (rule end)
	 
	 * </pre>
	 */
	protected void emit_NetworkLinksType___TargetNetworksKeyword_16_0_ColonKeyword_16_1___HyphenMinusKeyword_16_2_0_EStringParserRuleCall_16_2_1__a__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('targetNode' ':' EString)?
	 *
	 * This ambiguous syntax occurs at:
	 *     constraints+=Constraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? (ambiguity) (rule end)
	 *     constraints+=networkClassConstraint 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? (ambiguity) (rule end)
	 *     name=ID 'tags' ':' 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? (ambiguity) (rule end)
	 *     tags+=Tag 'Spec' ':' 'constraints' ':' 'networks' ':' ('sourceNetworks' ':' ('-' EString)*)? ('targetNetworks' ':' ('-' EString)*)? ('sourceNode' ':' EString)? (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_NetworkLinksType___TargetNodeKeyword_18_0_ColonKeyword_18_1_EStringParserRuleCall_18_2__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('metadata' ':' 'tags' ':')?
	 *
	 * This ambiguous syntax occurs at:
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' '-' downloadLink+=NetworkLinksType
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' '-' uploadLink+=NetworkLinksType
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' (rule start)
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=Constraint
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=CpuConstraint
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=MemoryConsraint
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'PhysicalNode' (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=diskConstraint
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' '-' downloadLink+=NetworkLinksType
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' '-' uploadLink+=NetworkLinksType
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' (rule start)
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=Constraint
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=CpuConstraint
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=MemoryConsraint
	 *     (rule start) (ambiguity) 'Spec' ':' 'physicalResources' ':' constraints+=diskConstraint
	 
	 * </pre>
	 */
	protected void emit_PhysicalNodeType___MetadataKeyword_0_0_ColonKeyword_0_1_TagsKeyword_0_3_ColonKeyword_0_4__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('virtualNodes' ':' '-' EString ('-' EString)*)?
	 *
	 * This ambiguous syntax occurs at:
	 *     (
	 *         (rule start) 
	 *         'ApiVersion' 
	 *         ':' 
	 *         'v.0.1' 
	 *         'resourceType' 
	 *         ':' 
	 *         'Service' 
	 *         'metadata' 
	 *         ':' 
	 *         'tags' 
	 *         ':' 
	 *         'Spec' 
	 *         ':' 
	 *         'networkPorts' 
	 *         ':' 
	 *         'hostedOn' 
	 *         ':' 
	 *         (ambiguity) 
	 *         'constraints' 
	 *         ':' 
	 *         constraints+=Constraint
	 *     )
	 *     (
	 *         (rule start) 
	 *         'ApiVersion' 
	 *         ':' 
	 *         'v.0.1' 
	 *         'resourceType' 
	 *         ':' 
	 *         'Service' 
	 *         'metadata' 
	 *         ':' 
	 *         'tags' 
	 *         ':' 
	 *         'Spec' 
	 *         ':' 
	 *         'networkPorts' 
	 *         ':' 
	 *         'hostedOn' 
	 *         ':' 
	 *         (ambiguity) 
	 *         'softwarePacakge' 
	 *         ':' 
	 *         '-' 
	 *         implementedBy+=SoftwarePackage
	 *     )
	 *     (rule start) 'ApiVersion' ':' 'v.0.1' 'resourceType' ':' 'Service' 'metadata' ':' 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) (rule start)
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'constraints' ':' constraints+=Constraint
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'softwarePacakge' ':' '-' implementedBy+=SoftwarePackage
	 *     (rule start) 'metadata' ':' 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) (rule start)
	 *     constraints+=PortsConstraint 'hostedOn' ':' (ambiguity) 'constraints' ':' constraints+=Constraint
	 *     constraints+=PortsConstraint 'hostedOn' ':' (ambiguity) 'softwarePacakge' ':' '-' implementedBy+=SoftwarePackage
	 *     constraints+=PortsConstraint 'hostedOn' ':' (ambiguity) (rule end)
	 *     name=ID 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'constraints' ':' constraints+=Constraint
	 *     name=ID 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'softwarePacakge' ':' '-' implementedBy+=SoftwarePackage
	 *     name=ID 'tags' ':' 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) (rule end)
	 *     networkPorts+=NetworkPort 'hostedOn' ':' (ambiguity) 'constraints' ':' constraints+=Constraint
	 *     networkPorts+=NetworkPort 'hostedOn' ':' (ambiguity) 'softwarePacakge' ':' '-' implementedBy+=SoftwarePackage
	 *     networkPorts+=NetworkPort 'hostedOn' ':' (ambiguity) (rule end)
	 *     tags+=Tag 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'constraints' ':' constraints+=Constraint
	 *     tags+=Tag 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) 'softwarePacakge' ':' '-' implementedBy+=SoftwarePackage
	 *     tags+=Tag 'Spec' ':' 'networkPorts' ':' 'hostedOn' ':' (ambiguity) (rule end)
	 
	 * </pre>
	 */
	protected void emit_SerivceType___VirtualNodesKeyword_11_0_ColonKeyword_11_1_HyphenMinusKeyword_11_2_0_EStringParserRuleCall_11_2_1___HyphenMinusKeyword_11_3_0_EStringParserRuleCall_11_3_1__a__q(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
	/**
	 * <pre>
	 * Ambiguous syntax:
	 *     ('.' ID)*
	 *
	 * This ambiguous syntax occurs at:
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' 'hostingNode' ':' hostingNode=VirtualNodeType
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' '-' downloadLink+=NetworkLinksType
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' '-' uploadLink+=NetworkLinksType
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' 'networkLinks' ':' 'downloadLink' ':' 'uploadLink' ':' (rule end)
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' constraints+=Constraint
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' constraints+=CpuConstraint
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' constraints+=MemoryConsraint
	 *     imageRegistry=ID (ambiguity) 'physicalResources' ':' constraints+=diskConstraint
	 *     imageRegistry=ID (ambiguity) replicas+=ReplicasConstraint
	 
	 * </pre>
	 */
	protected void emit_VirtualNodeType___FullStopKeyword_9_3_0_IDTerminalRuleCall_9_3_1__a(EObject semanticObject, ISynNavigable transition, List<INode> nodes) {
		acceptNodes(transition, nodes);
	}
	
}
