/*
 * generated by Xtext 2.28.0
 */
package fr.imta.semafor.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.EnumLiteralDeclaration;
import org.eclipse.xtext.EnumRule;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class FogDslGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class FogResourceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.FogResource");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cApiVersionKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cV01Keyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cResourceTypeKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Keyword cColonKeyword_3_0_1 = (Keyword)cGroup_3_0.eContents().get(1);
		private final Keyword cFogAreaKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final RuleCall cFogAreaParserRuleCall_3_0_3 = (RuleCall)cGroup_3_0.eContents().get(3);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Keyword cResourceTypeKeyword_3_1_0 = (Keyword)cGroup_3_1.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cFogSystemKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final RuleCall cFogSystemParserRuleCall_3_1_3 = (RuleCall)cGroup_3_1.eContents().get(3);
		private final Group cGroup_3_2 = (Group)cAlternatives_3.eContents().get(2);
		private final Keyword cResourceTypeKeyword_3_2_0 = (Keyword)cGroup_3_2.eContents().get(0);
		private final Keyword cColonKeyword_3_2_1 = (Keyword)cGroup_3_2.eContents().get(1);
		private final Keyword cPhysicalNodeKeyword_3_2_2 = (Keyword)cGroup_3_2.eContents().get(2);
		private final Alternatives cAlternatives_3_2_3 = (Alternatives)cGroup_3_2.eContents().get(3);
		private final RuleCall cPhysicalNodeTypeParserRuleCall_3_2_3_0 = (RuleCall)cAlternatives_3_2_3.eContents().get(0);
		private final RuleCall cPhysicalNodeParserRuleCall_3_2_3_1 = (RuleCall)cAlternatives_3_2_3.eContents().get(1);
		private final Group cGroup_3_3 = (Group)cAlternatives_3.eContents().get(3);
		private final Keyword cResourceTypeKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Keyword cColonKeyword_3_3_1 = (Keyword)cGroup_3_3.eContents().get(1);
		private final Keyword cVirtualNodeKeyword_3_3_2 = (Keyword)cGroup_3_3.eContents().get(2);
		private final Alternatives cAlternatives_3_3_3 = (Alternatives)cGroup_3_3.eContents().get(3);
		private final RuleCall cVirtualNodeTypeParserRuleCall_3_3_3_0 = (RuleCall)cAlternatives_3_3_3.eContents().get(0);
		private final RuleCall cVirtualNodeParserRuleCall_3_3_3_1 = (RuleCall)cAlternatives_3_3_3.eContents().get(1);
		private final Group cGroup_3_4 = (Group)cAlternatives_3.eContents().get(4);
		private final Keyword cResourceTypeKeyword_3_4_0 = (Keyword)cGroup_3_4.eContents().get(0);
		private final Keyword cColonKeyword_3_4_1 = (Keyword)cGroup_3_4.eContents().get(1);
		private final Keyword cNetworkKeyword_3_4_2 = (Keyword)cGroup_3_4.eContents().get(2);
		private final RuleCall cNetworkTypeParserRuleCall_3_4_3 = (RuleCall)cGroup_3_4.eContents().get(3);
		private final Group cGroup_3_5 = (Group)cAlternatives_3.eContents().get(5);
		private final Keyword cResourceTypeKeyword_3_5_0 = (Keyword)cGroup_3_5.eContents().get(0);
		private final Keyword cColonKeyword_3_5_1 = (Keyword)cGroup_3_5.eContents().get(1);
		private final Keyword cServiceKeyword_3_5_2 = (Keyword)cGroup_3_5.eContents().get(2);
		private final RuleCall cSerivceTypeParserRuleCall_3_5_3 = (RuleCall)cGroup_3_5.eContents().get(3);
		private final Group cGroup_3_6 = (Group)cAlternatives_3.eContents().get(6);
		private final Keyword cResourceTypeKeyword_3_6_0 = (Keyword)cGroup_3_6.eContents().get(0);
		private final Keyword cColonKeyword_3_6_1 = (Keyword)cGroup_3_6.eContents().get(1);
		private final Keyword cApplicationKeyword_3_6_2 = (Keyword)cGroup_3_6.eContents().get(2);
		private final RuleCall cApplicationParserRuleCall_3_6_3 = (RuleCall)cGroup_3_6.eContents().get(3);
		private final Group cGroup_3_7 = (Group)cAlternatives_3.eContents().get(7);
		private final Keyword cResourceTypeKeyword_3_7_0 = (Keyword)cGroup_3_7.eContents().get(0);
		private final Keyword cColonKeyword_3_7_1 = (Keyword)cGroup_3_7.eContents().get(1);
		private final Keyword cAttributeKeyword_3_7_2 = (Keyword)cGroup_3_7.eContents().get(2);
		private final RuleCall cAttributeTypeParserRuleCall_3_7_3 = (RuleCall)cGroup_3_7.eContents().get(3);
		
		//FogResource returns FogResource:
		//    'ApiVersion' ':' 'v.0.1'
		//    (
		//        (
		//        'resourceType' ':' 'FogArea'
		//            ( fogArea)
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'FogSystem'
		//            ( fogSystem)
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'PhysicalNode'
		//            ( PhysicalNodeType | PhysicalNode)
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'VirtualNode'
		//            ( VirtualNodeType | VirtualNode)
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'Network'
		//            ( NetworkType )
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'Service'
		//            ( SerivceType )
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'Application'
		//            ( Application )
		//        )
		//        |
		//        (
		//        'resourceType' ':' 'Attribute'
		//            ( AttributeType )
		//        )
		//    )
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//'ApiVersion' ':' 'v.0.1'
		//(
		//    (
		//    'resourceType' ':' 'FogArea'
		//        ( fogArea)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'FogSystem'
		//        ( fogSystem)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'PhysicalNode'
		//        ( PhysicalNodeType | PhysicalNode)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'VirtualNode'
		//        ( VirtualNodeType | VirtualNode)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Network'
		//        ( NetworkType )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Service'
		//        ( SerivceType )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Application'
		//        ( Application )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Attribute'
		//        ( AttributeType )
		//    )
		//)
		public Group getGroup() { return cGroup; }
		
		//'ApiVersion'
		public Keyword getApiVersionKeyword_0() { return cApiVersionKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'v.0.1'
		public Keyword getV01Keyword_2() { return cV01Keyword_2; }
		
		//(
		//    (
		//    'resourceType' ':' 'FogArea'
		//        ( fogArea)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'FogSystem'
		//        ( fogSystem)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'PhysicalNode'
		//        ( PhysicalNodeType | PhysicalNode)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'VirtualNode'
		//        ( VirtualNodeType | VirtualNode)
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Network'
		//        ( NetworkType )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Service'
		//        ( SerivceType )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Application'
		//        ( Application )
		//    )
		//    |
		//    (
		//    'resourceType' ':' 'Attribute'
		//        ( AttributeType )
		//    )
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//(
		//'resourceType' ':' 'FogArea'
		//    ( fogArea)
		//)
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_0_0() { return cResourceTypeKeyword_3_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_0_1() { return cColonKeyword_3_0_1; }
		
		//'FogArea'
		public Keyword getFogAreaKeyword_3_0_2() { return cFogAreaKeyword_3_0_2; }
		
		//( fogArea)
		public RuleCall getFogAreaParserRuleCall_3_0_3() { return cFogAreaParserRuleCall_3_0_3; }
		
		//(
		//'resourceType' ':' 'FogSystem'
		//    ( fogSystem)
		//)
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_1_0() { return cResourceTypeKeyword_3_1_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//'FogSystem'
		public Keyword getFogSystemKeyword_3_1_2() { return cFogSystemKeyword_3_1_2; }
		
		//( fogSystem)
		public RuleCall getFogSystemParserRuleCall_3_1_3() { return cFogSystemParserRuleCall_3_1_3; }
		
		//(
		//'resourceType' ':' 'PhysicalNode'
		//    ( PhysicalNodeType | PhysicalNode)
		//)
		public Group getGroup_3_2() { return cGroup_3_2; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_2_0() { return cResourceTypeKeyword_3_2_0; }
		
		//':'
		public Keyword getColonKeyword_3_2_1() { return cColonKeyword_3_2_1; }
		
		//'PhysicalNode'
		public Keyword getPhysicalNodeKeyword_3_2_2() { return cPhysicalNodeKeyword_3_2_2; }
		
		//( PhysicalNodeType | PhysicalNode)
		public Alternatives getAlternatives_3_2_3() { return cAlternatives_3_2_3; }
		
		//PhysicalNodeType
		public RuleCall getPhysicalNodeTypeParserRuleCall_3_2_3_0() { return cPhysicalNodeTypeParserRuleCall_3_2_3_0; }
		
		//PhysicalNode
		public RuleCall getPhysicalNodeParserRuleCall_3_2_3_1() { return cPhysicalNodeParserRuleCall_3_2_3_1; }
		
		//(
		//'resourceType' ':' 'VirtualNode'
		//    ( VirtualNodeType | VirtualNode)
		//)
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_3_0() { return cResourceTypeKeyword_3_3_0; }
		
		//':'
		public Keyword getColonKeyword_3_3_1() { return cColonKeyword_3_3_1; }
		
		//'VirtualNode'
		public Keyword getVirtualNodeKeyword_3_3_2() { return cVirtualNodeKeyword_3_3_2; }
		
		//( VirtualNodeType | VirtualNode)
		public Alternatives getAlternatives_3_3_3() { return cAlternatives_3_3_3; }
		
		//VirtualNodeType
		public RuleCall getVirtualNodeTypeParserRuleCall_3_3_3_0() { return cVirtualNodeTypeParserRuleCall_3_3_3_0; }
		
		//VirtualNode
		public RuleCall getVirtualNodeParserRuleCall_3_3_3_1() { return cVirtualNodeParserRuleCall_3_3_3_1; }
		
		//(
		//'resourceType' ':' 'Network'
		//    ( NetworkType )
		//)
		public Group getGroup_3_4() { return cGroup_3_4; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_4_0() { return cResourceTypeKeyword_3_4_0; }
		
		//':'
		public Keyword getColonKeyword_3_4_1() { return cColonKeyword_3_4_1; }
		
		//'Network'
		public Keyword getNetworkKeyword_3_4_2() { return cNetworkKeyword_3_4_2; }
		
		//( NetworkType )
		public RuleCall getNetworkTypeParserRuleCall_3_4_3() { return cNetworkTypeParserRuleCall_3_4_3; }
		
		//(
		//'resourceType' ':' 'Service'
		//    ( SerivceType )
		//)
		public Group getGroup_3_5() { return cGroup_3_5; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_5_0() { return cResourceTypeKeyword_3_5_0; }
		
		//':'
		public Keyword getColonKeyword_3_5_1() { return cColonKeyword_3_5_1; }
		
		//'Service'
		public Keyword getServiceKeyword_3_5_2() { return cServiceKeyword_3_5_2; }
		
		//( SerivceType )
		public RuleCall getSerivceTypeParserRuleCall_3_5_3() { return cSerivceTypeParserRuleCall_3_5_3; }
		
		//(
		//'resourceType' ':' 'Application'
		//    ( Application )
		//)
		public Group getGroup_3_6() { return cGroup_3_6; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_6_0() { return cResourceTypeKeyword_3_6_0; }
		
		//':'
		public Keyword getColonKeyword_3_6_1() { return cColonKeyword_3_6_1; }
		
		//'Application'
		public Keyword getApplicationKeyword_3_6_2() { return cApplicationKeyword_3_6_2; }
		
		//( Application )
		public RuleCall getApplicationParserRuleCall_3_6_3() { return cApplicationParserRuleCall_3_6_3; }
		
		//(
		//'resourceType' ':' 'Attribute'
		//    ( AttributeType )
		//)
		public Group getGroup_3_7() { return cGroup_3_7; }
		
		//'resourceType'
		public Keyword getResourceTypeKeyword_3_7_0() { return cResourceTypeKeyword_3_7_0; }
		
		//':'
		public Keyword getColonKeyword_3_7_1() { return cColonKeyword_3_7_1; }
		
		//'Attribute'
		public Keyword getAttributeKeyword_3_7_2() { return cAttributeKeyword_3_7_2; }
		
		//( AttributeType )
		public RuleCall getAttributeTypeParserRuleCall_3_7_3() { return cAttributeTypeParserRuleCall_3_7_3; }
	}
	public class VirtualNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.VirtualNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_0 = (RuleCall)cTagsAssignment_5_1.eContents().get(0);
		private final Keyword cInstanceOfKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Assignment cIsInstanceOfAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final CrossReference cIsInstanceOfVirtualNodeSpecificationCrossReference_8_0 = (CrossReference)cIsInstanceOfAssignment_8.eContents().get(0);
		private final RuleCall cIsInstanceOfVirtualNodeSpecificationIDTerminalRuleCall_8_0_1 = (RuleCall)cIsInstanceOfVirtualNodeSpecificationCrossReference_8_0.eContents().get(1);
		private final Keyword cStatusKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cHostedOnKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cHostingNodeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final CrossReference cHostingNodeNodeCrossReference_13_0 = (CrossReference)cHostingNodeAssignment_13.eContents().get(0);
		private final RuleCall cHostingNodeNodeIDTerminalRuleCall_13_0_1 = (RuleCall)cHostingNodeNodeCrossReference_13_0.eContents().get(1);
		private final Keyword cHostsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cHyphenMinusKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cHostedVirtualNodesAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cHostedVirtualNodesVirtualNodeCrossReference_16_1_0 = (CrossReference)cHostedVirtualNodesAssignment_16_1.eContents().get(0);
		private final RuleCall cHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1 = (RuleCall)cHostedVirtualNodesVirtualNodeCrossReference_16_1_0.eContents().get(1);
		private final Assignment cAttributesAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cAttributesAttributeValueUnitParserRuleCall_17_0 = (RuleCall)cAttributesAssignment_17.eContents().get(0);
		
		//VirtualNode returns VirtualNode:
		//        'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//        'instanceOf' ':' isInstanceOf=[VirtualNodeSpecification]
		//        'status' ':'
		//        'hostedOn' ':' hostingNode=[Node]
		//        'hosts' ':'
		//            ('-' hostedVirtualNodes+=[VirtualNode])*
		//        (attributes +=AttributeValueUnit)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata' ':'
		//('id' ':' name=ID)?
		//'tags' ':'
		//    ('-' tags+=Tag)*
		//'instanceOf' ':' isInstanceOf=[VirtualNodeSpecification]
		//'status' ':'
		//'hostedOn' ':' hostingNode=[Node]
		//'hosts' ':'
		//    ('-' hostedVirtualNodes+=[VirtualNode])*
		//(attributes +=AttributeValueUnit)*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_3() { return cTagsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_0() { return cTagsTagParserRuleCall_5_1_0; }
		
		//'instanceOf'
		public Keyword getInstanceOfKeyword_6() { return cInstanceOfKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//isInstanceOf=[VirtualNodeSpecification]
		public Assignment getIsInstanceOfAssignment_8() { return cIsInstanceOfAssignment_8; }
		
		//[VirtualNodeSpecification]
		public CrossReference getIsInstanceOfVirtualNodeSpecificationCrossReference_8_0() { return cIsInstanceOfVirtualNodeSpecificationCrossReference_8_0; }
		
		//ID
		public RuleCall getIsInstanceOfVirtualNodeSpecificationIDTerminalRuleCall_8_0_1() { return cIsInstanceOfVirtualNodeSpecificationIDTerminalRuleCall_8_0_1; }
		
		//'status'
		public Keyword getStatusKeyword_9() { return cStatusKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//'hostedOn'
		public Keyword getHostedOnKeyword_11() { return cHostedOnKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//hostingNode=[Node]
		public Assignment getHostingNodeAssignment_13() { return cHostingNodeAssignment_13; }
		
		//[Node]
		public CrossReference getHostingNodeNodeCrossReference_13_0() { return cHostingNodeNodeCrossReference_13_0; }
		
		//ID
		public RuleCall getHostingNodeNodeIDTerminalRuleCall_13_0_1() { return cHostingNodeNodeIDTerminalRuleCall_13_0_1; }
		
		//'hosts'
		public Keyword getHostsKeyword_14() { return cHostsKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//('-' hostedVirtualNodes+=[VirtualNode])*
		public Group getGroup_16() { return cGroup_16; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_16_0() { return cHyphenMinusKeyword_16_0; }
		
		//hostedVirtualNodes+=[VirtualNode]
		public Assignment getHostedVirtualNodesAssignment_16_1() { return cHostedVirtualNodesAssignment_16_1; }
		
		//[VirtualNode]
		public CrossReference getHostedVirtualNodesVirtualNodeCrossReference_16_1_0() { return cHostedVirtualNodesVirtualNodeCrossReference_16_1_0; }
		
		//ID
		public RuleCall getHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1() { return cHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1; }
		
		//(attributes +=AttributeValueUnit)*
		public Assignment getAttributesAssignment_17() { return cAttributesAssignment_17; }
		
		//AttributeValueUnit
		public RuleCall getAttributesAttributeValueUnitParserRuleCall_17_0() { return cAttributesAttributeValueUnitParserRuleCall_17_0; }
	}
	public class FogSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.fogSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//fogSystem returns FogSystem:
		//    'name' ':' name=EString
		////    'fogAreas' ':'
		////    ('-' fogareas+=fogArea)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' ':' name=EString
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
	}
	public class FogAreaElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.fogArea");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cFogSystemKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFogsystemAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFogsystemFogSystemCrossReference_5_0 = (CrossReference)cFogsystemAssignment_5.eContents().get(0);
		private final RuleCall cFogsystemFogSystemIDTerminalRuleCall_5_0_1 = (RuleCall)cFogsystemFogSystemCrossReference_5_0.eContents().get(1);
		
		//fogArea returns FogArea:
		//        'name' ':' name=EString
		//        'fogSystem' ':' fogsystem=[FogSystem]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' ':' name=EString
		//'fogSystem' ':' fogsystem=[FogSystem]
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'fogSystem'
		public Keyword getFogSystemKeyword_3() { return cFogSystemKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//fogsystem=[FogSystem]
		public Assignment getFogsystemAssignment_5() { return cFogsystemAssignment_5; }
		
		//[FogSystem]
		public CrossReference getFogsystemFogSystemCrossReference_5_0() { return cFogsystemFogSystemCrossReference_5_0; }
		
		//ID
		public RuleCall getFogsystemFogSystemIDTerminalRuleCall_5_0_1() { return cFogsystemFogSystemIDTerminalRuleCall_5_0_1; }
	}
	public class AttributeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.AttributeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNameKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cTypeKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueTypeAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueTypeEStringParserRuleCall_5_0 = (RuleCall)cValueTypeAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cUnitOfMeasurmentKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cColonKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Group cGroup_6_2 = (Group)cGroup_6.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_6_2_0 = (Keyword)cGroup_6_2.eContents().get(0);
		private final Assignment cUnitofmeasurmentAssignment_6_2_1 = (Assignment)cGroup_6_2.eContents().get(1);
		private final CrossReference cUnitofmeasurmentUnitOfMeasurmentCrossReference_6_2_1_0 = (CrossReference)cUnitofmeasurmentAssignment_6_2_1.eContents().get(0);
		private final RuleCall cUnitofmeasurmentUnitOfMeasurmentIDTerminalRuleCall_6_2_1_0_1 = (RuleCall)cUnitofmeasurmentUnitOfMeasurmentCrossReference_6_2_1_0.eContents().get(1);
		
		//AttributeType returns AttributeType:
		//    'name' ':' name=EString
		//    'type' ':' valueType=EString
		//    ('unitOfMeasurment' ':'
		//        ('-'unitofmeasurment+=[UnitOfMeasurment])*
		//    )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'name' ':' name=EString
		//'type' ':' valueType=EString
		//('unitOfMeasurment' ':'
		//    ('-'unitofmeasurment+=[UnitOfMeasurment])*
		//)?
		public Group getGroup() { return cGroup; }
		
		//'name'
		public Keyword getNameKeyword_0() { return cNameKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//name=EString
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_0() { return cNameEStringParserRuleCall_2_0; }
		
		//'type'
		public Keyword getTypeKeyword_3() { return cTypeKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//valueType=EString
		public Assignment getValueTypeAssignment_5() { return cValueTypeAssignment_5; }
		
		//EString
		public RuleCall getValueTypeEStringParserRuleCall_5_0() { return cValueTypeEStringParserRuleCall_5_0; }
		
		//('unitOfMeasurment' ':'
		//    ('-'unitofmeasurment+=[UnitOfMeasurment])*
		//)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'unitOfMeasurment'
		public Keyword getUnitOfMeasurmentKeyword_6_0() { return cUnitOfMeasurmentKeyword_6_0; }
		
		//':'
		public Keyword getColonKeyword_6_1() { return cColonKeyword_6_1; }
		
		//('-'unitofmeasurment+=[UnitOfMeasurment])*
		public Group getGroup_6_2() { return cGroup_6_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_6_2_0() { return cHyphenMinusKeyword_6_2_0; }
		
		//unitofmeasurment+=[UnitOfMeasurment]
		public Assignment getUnitofmeasurmentAssignment_6_2_1() { return cUnitofmeasurmentAssignment_6_2_1; }
		
		//[UnitOfMeasurment]
		public CrossReference getUnitofmeasurmentUnitOfMeasurmentCrossReference_6_2_1_0() { return cUnitofmeasurmentUnitOfMeasurmentCrossReference_6_2_1_0; }
		
		//ID
		public RuleCall getUnitofmeasurmentUnitOfMeasurmentIDTerminalRuleCall_6_2_1_0_1() { return cUnitofmeasurmentUnitOfMeasurmentIDTerminalRuleCall_6_2_1_0_1; }
	}
	public class PhysicalNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.PhysicalNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cFogAreaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cFogareaAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final CrossReference cFogareaFogAreaCrossReference_5_0 = (CrossReference)cFogareaAssignment_5.eContents().get(0);
		private final RuleCall cFogareaFogAreaIDTerminalRuleCall_5_0_1 = (RuleCall)cFogareaFogAreaCrossReference_5_0.eContents().get(1);
		private final Keyword cTagsKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cHyphenMinusKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Assignment cTagsAssignment_8_1 = (Assignment)cGroup_8.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_8_1_0 = (RuleCall)cTagsAssignment_8_1.eContents().get(0);
		private final Keyword cInstanceOfKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cIsInstanceOfAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final CrossReference cIsInstanceOfPhysicalNodeSpecificationCrossReference_11_0 = (CrossReference)cIsInstanceOfAssignment_11.eContents().get(0);
		private final RuleCall cIsInstanceOfPhysicalNodeSpecificationIDTerminalRuleCall_11_0_1 = (RuleCall)cIsInstanceOfPhysicalNodeSpecificationCrossReference_11_0.eContents().get(1);
		private final Keyword cStatusKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cColonKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cHostsKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cHyphenMinusKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cHostedVirtualNodesAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final CrossReference cHostedVirtualNodesVirtualNodeCrossReference_16_1_0 = (CrossReference)cHostedVirtualNodesAssignment_16_1.eContents().get(0);
		private final RuleCall cHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1 = (RuleCall)cHostedVirtualNodesVirtualNodeCrossReference_16_1_0.eContents().get(1);
		private final Assignment cAttributesAssignment_17 = (Assignment)cGroup.eContents().get(17);
		private final RuleCall cAttributesAttributeValueUnitParserRuleCall_17_0 = (RuleCall)cAttributesAssignment_17.eContents().get(0);
		
		//PhysicalNode returns PhysicalNode:
		//        'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'fogArea' ':' fogarea=[FogArea]
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//        'instanceOf' ':' isInstanceOf=[PhysicalNodeSpecification]
		//        'status' ':'
		//        'hosts' ':'
		//            ('-' hostedVirtualNodes+=[VirtualNode])*
		//        (attributes +=AttributeValueUnit)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata' ':'
		//('id' ':' name=ID)?
		//'fogArea' ':' fogarea=[FogArea]
		//'tags' ':'
		//    ('-' tags+=Tag)*
		//'instanceOf' ':' isInstanceOf=[PhysicalNodeSpecification]
		//'status' ':'
		//'hosts' ':'
		//    ('-' hostedVirtualNodes+=[VirtualNode])*
		//(attributes +=AttributeValueUnit)*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//'fogArea'
		public Keyword getFogAreaKeyword_3() { return cFogAreaKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//fogarea=[FogArea]
		public Assignment getFogareaAssignment_5() { return cFogareaAssignment_5; }
		
		//[FogArea]
		public CrossReference getFogareaFogAreaCrossReference_5_0() { return cFogareaFogAreaCrossReference_5_0; }
		
		//ID
		public RuleCall getFogareaFogAreaIDTerminalRuleCall_5_0_1() { return cFogareaFogAreaIDTerminalRuleCall_5_0_1; }
		
		//'tags'
		public Keyword getTagsKeyword_6() { return cTagsKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//('-' tags+=Tag)*
		public Group getGroup_8() { return cGroup_8; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_8_0() { return cHyphenMinusKeyword_8_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_8_1() { return cTagsAssignment_8_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_8_1_0() { return cTagsTagParserRuleCall_8_1_0; }
		
		//'instanceOf'
		public Keyword getInstanceOfKeyword_9() { return cInstanceOfKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//isInstanceOf=[PhysicalNodeSpecification]
		public Assignment getIsInstanceOfAssignment_11() { return cIsInstanceOfAssignment_11; }
		
		//[PhysicalNodeSpecification]
		public CrossReference getIsInstanceOfPhysicalNodeSpecificationCrossReference_11_0() { return cIsInstanceOfPhysicalNodeSpecificationCrossReference_11_0; }
		
		//ID
		public RuleCall getIsInstanceOfPhysicalNodeSpecificationIDTerminalRuleCall_11_0_1() { return cIsInstanceOfPhysicalNodeSpecificationIDTerminalRuleCall_11_0_1; }
		
		//'status'
		public Keyword getStatusKeyword_12() { return cStatusKeyword_12; }
		
		//':'
		public Keyword getColonKeyword_13() { return cColonKeyword_13; }
		
		//'hosts'
		public Keyword getHostsKeyword_14() { return cHostsKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//('-' hostedVirtualNodes+=[VirtualNode])*
		public Group getGroup_16() { return cGroup_16; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_16_0() { return cHyphenMinusKeyword_16_0; }
		
		//hostedVirtualNodes+=[VirtualNode]
		public Assignment getHostedVirtualNodesAssignment_16_1() { return cHostedVirtualNodesAssignment_16_1; }
		
		//[VirtualNode]
		public CrossReference getHostedVirtualNodesVirtualNodeCrossReference_16_1_0() { return cHostedVirtualNodesVirtualNodeCrossReference_16_1_0; }
		
		//ID
		public RuleCall getHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1() { return cHostedVirtualNodesVirtualNodeIDTerminalRuleCall_16_1_0_1; }
		
		//(attributes +=AttributeValueUnit)*
		public Assignment getAttributesAssignment_17() { return cAttributesAssignment_17; }
		
		//AttributeValueUnit
		public RuleCall getAttributesAttributeValueUnitParserRuleCall_17_0() { return cAttributesAttributeValueUnitParserRuleCall_17_0; }
	}
	public class AttributeValueUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.AttributeValueUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cInstanceOfAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final CrossReference cInstanceOfAttributeTypeCrossReference_0_0 = (CrossReference)cInstanceOfAssignment_0.eContents().get(0);
		private final RuleCall cInstanceOfAttributeTypeIDTerminalRuleCall_0_0_1 = (RuleCall)cInstanceOfAttributeTypeCrossReference_0_0.eContents().get(1);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//AttributeValueUnit returns Attribute:
		//    instanceOf=[AttributeType] ':' value=Value    //unitofmeasurment=[UnitOfMeasurment]
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//instanceOf=[AttributeType] ':' value=Value
		public Group getGroup() { return cGroup; }
		
		//instanceOf=[AttributeType]
		public Assignment getInstanceOfAssignment_0() { return cInstanceOfAssignment_0; }
		
		//[AttributeType]
		public CrossReference getInstanceOfAttributeTypeCrossReference_0_0() { return cInstanceOfAttributeTypeCrossReference_0_0; }
		
		//ID
		public RuleCall getInstanceOfAttributeTypeIDTerminalRuleCall_0_0_1() { return cInstanceOfAttributeTypeIDTerminalRuleCall_0_0_1; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=Value
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//Value
		public RuleCall getValueValueParserRuleCall_2_0() { return cValueValueParserRuleCall_2_0; }
	}
	public class ApplicationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.Application");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_0 = (RuleCall)cTagsAssignment_5_1.eContents().get(0);
		private final Keyword cSpecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cServicesKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cHyphenMinusKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_10_1 = (RuleCall)cGroup_10.eContents().get(1);
		private final Keyword cColonKeyword_10_2 = (Keyword)cGroup_10.eContents().get(2);
		private final Assignment cServiceTypesAssignment_10_3 = (Assignment)cGroup_10.eContents().get(3);
		private final RuleCall cServiceTypesSerivceTypeParserRuleCall_10_3_0 = (RuleCall)cServiceTypesAssignment_10_3.eContents().get(0);
		private final Keyword cConnectorsKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cHyphenMinusKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cConnectortypesAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cConnectortypesConnectorTypeParserRuleCall_13_1_0 = (RuleCall)cConnectortypesAssignment_13_1.eContents().get(0);
		
		//Application returns Application:
		//    'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//    'Spec' ':'
		//        'services' ':'
		//            ('-' EString ':'
		//                (serviceTypes+=SerivceType)?
		//            )*
		//        'connectors' ':'
		//            ('-'
		//                connectortypes+=ConnectorType
		//            )*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata' ':'
		//    ('id' ':' name=ID)?
		//    'tags' ':'
		//        ('-' tags+=Tag)*
		//'Spec' ':'
		//    'services' ':'
		//        ('-' EString ':'
		//            (serviceTypes+=SerivceType)?
		//        )*
		//    'connectors' ':'
		//        ('-'
		//            connectortypes+=ConnectorType
		//        )*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_3() { return cTagsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_0() { return cTagsTagParserRuleCall_5_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_6() { return cSpecKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//'services'
		public Keyword getServicesKeyword_8() { return cServicesKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//('-' EString ':'
		//    (serviceTypes+=SerivceType)?
		//)*
		public Group getGroup_10() { return cGroup_10; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_10_0() { return cHyphenMinusKeyword_10_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_10_1() { return cEStringParserRuleCall_10_1; }
		
		//':'
		public Keyword getColonKeyword_10_2() { return cColonKeyword_10_2; }
		
		//(serviceTypes+=SerivceType)?
		public Assignment getServiceTypesAssignment_10_3() { return cServiceTypesAssignment_10_3; }
		
		//SerivceType
		public RuleCall getServiceTypesSerivceTypeParserRuleCall_10_3_0() { return cServiceTypesSerivceTypeParserRuleCall_10_3_0; }
		
		//'connectors'
		public Keyword getConnectorsKeyword_11() { return cConnectorsKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//('-'
		//    connectortypes+=ConnectorType
		//)*
		public Group getGroup_13() { return cGroup_13; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_13_0() { return cHyphenMinusKeyword_13_0; }
		
		//connectortypes+=ConnectorType
		public Assignment getConnectortypesAssignment_13_1() { return cConnectortypesAssignment_13_1; }
		
		//ConnectorType
		public RuleCall getConnectortypesConnectorTypeParserRuleCall_13_1_0() { return cConnectortypesConnectorTypeParserRuleCall_13_1_0; }
	}
	public class ConnectorTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ConnectorType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cSourceServicesKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSourceServicesAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final CrossReference cSourceServicesServiceTypeCrossReference_4_1_0 = (CrossReference)cSourceServicesAssignment_4_1.eContents().get(0);
		private final RuleCall cSourceServicesServiceTypeIDTerminalRuleCall_4_1_0_1 = (RuleCall)cSourceServicesServiceTypeCrossReference_4_1_0.eContents().get(1);
		private final Keyword cTargetServicesKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTargetServicesAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final CrossReference cTargetServicesServiceTypeCrossReference_7_1_0 = (CrossReference)cTargetServicesAssignment_7_1.eContents().get(0);
		private final RuleCall cTargetServicesServiceTypeIDTerminalRuleCall_7_1_0_1 = (RuleCall)cTargetServicesServiceTypeCrossReference_7_1_0.eContents().get(1);
		private final Keyword cConstraintsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cHyphenMinusKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cConstraintsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final RuleCall cConstraintsConstraintParserRuleCall_10_1_0 = (RuleCall)cConstraintsAssignment_10_1.eContents().get(0);
		
		//ConnectorType returns ConnectorType:
		//    name=ID ':'
		////    'importServices' ':'
		////    ('-' importedNamespace=EString)
		//    'sourceServices' ':'
		//    ('-' sourceServices+=[ServiceType|ID])*
		//    'targetServices' ':'
		//    ('-' targetServices+=[ServiceType|ID])*
		//    'constraints' ':'
		//        ('-' constraints+=Constraint)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//    name=ID ':'
		////    'importServices' ':'
		////    ('-' importedNamespace=EString)
		//    'sourceServices' ':'
		//    ('-' sourceServices+=[ServiceType|ID])*
		//    'targetServices' ':'
		//    ('-' targetServices+=[ServiceType|ID])*
		//    'constraints' ':'
		//        ('-' constraints+=Constraint)*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		////    'importServices' ':'
		////    ('-' importedNamespace=EString)
		//    'sourceServices'
		public Keyword getSourceServicesKeyword_2() { return cSourceServicesKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//('-' sourceServices+=[ServiceType|ID])*
		public Group getGroup_4() { return cGroup_4; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_4_0() { return cHyphenMinusKeyword_4_0; }
		
		//sourceServices+=[ServiceType|ID]
		public Assignment getSourceServicesAssignment_4_1() { return cSourceServicesAssignment_4_1; }
		
		//[ServiceType|ID]
		public CrossReference getSourceServicesServiceTypeCrossReference_4_1_0() { return cSourceServicesServiceTypeCrossReference_4_1_0; }
		
		//ID
		public RuleCall getSourceServicesServiceTypeIDTerminalRuleCall_4_1_0_1() { return cSourceServicesServiceTypeIDTerminalRuleCall_4_1_0_1; }
		
		//'targetServices'
		public Keyword getTargetServicesKeyword_5() { return cTargetServicesKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//('-' targetServices+=[ServiceType|ID])*
		public Group getGroup_7() { return cGroup_7; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_7_0() { return cHyphenMinusKeyword_7_0; }
		
		//targetServices+=[ServiceType|ID]
		public Assignment getTargetServicesAssignment_7_1() { return cTargetServicesAssignment_7_1; }
		
		//[ServiceType|ID]
		public CrossReference getTargetServicesServiceTypeCrossReference_7_1_0() { return cTargetServicesServiceTypeCrossReference_7_1_0; }
		
		//ID
		public RuleCall getTargetServicesServiceTypeIDTerminalRuleCall_7_1_0_1() { return cTargetServicesServiceTypeIDTerminalRuleCall_7_1_0_1; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_8() { return cConstraintsKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//('-' constraints+=Constraint)*
		public Group getGroup_10() { return cGroup_10; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_10_0() { return cHyphenMinusKeyword_10_0; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_10_1() { return cConstraintsAssignment_10_1; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_10_1_0() { return cConstraintsConstraintParserRuleCall_10_1_0; }
	}
	public class SerivceTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.SerivceType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_0 = (RuleCall)cTagsAssignment_5_1.eContents().get(0);
		private final Keyword cSpecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Alternatives cAlternatives_8 = (Alternatives)cGroup.eContents().get(8);
		private final Group cGroup_8_0 = (Group)cAlternatives_8.eContents().get(0);
		private final Assignment cConstraintsAssignment_8_0_0 = (Assignment)cGroup_8_0.eContents().get(0);
		private final RuleCall cConstraintsPortsConstraintParserRuleCall_8_0_0_0 = (RuleCall)cConstraintsAssignment_8_0_0.eContents().get(0);
		private final Group cGroup_8_0_1 = (Group)cGroup_8_0.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_8_0_1_0 = (Keyword)cGroup_8_0_1.eContents().get(0);
		private final Assignment cNetworkPortsAssignment_8_0_1_1 = (Assignment)cGroup_8_0_1.eContents().get(1);
		private final RuleCall cNetworkPortsNetworkPortParserRuleCall_8_0_1_1_0 = (RuleCall)cNetworkPortsAssignment_8_0_1_1.eContents().get(0);
		private final Group cGroup_8_1 = (Group)cAlternatives_8.eContents().get(1);
		private final Keyword cNetworkPortsKeyword_8_1_0 = (Keyword)cGroup_8_1.eContents().get(0);
		private final Keyword cColonKeyword_8_1_1 = (Keyword)cGroup_8_1.eContents().get(1);
		private final Group cGroup_8_1_2 = (Group)cGroup_8_1.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_8_1_2_0 = (Keyword)cGroup_8_1_2.eContents().get(0);
		private final Assignment cNetworkPortsAssignment_8_1_2_1 = (Assignment)cGroup_8_1_2.eContents().get(1);
		private final RuleCall cNetworkPortsNetworkPortParserRuleCall_8_1_2_1_0 = (RuleCall)cNetworkPortsAssignment_8_1_2_1.eContents().get(0);
		private final Keyword cHostedOnKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Group cGroup_11 = (Group)cGroup.eContents().get(11);
		private final Keyword cVirtualNodesKeyword_11_0 = (Keyword)cGroup_11.eContents().get(0);
		private final Keyword cColonKeyword_11_1 = (Keyword)cGroup_11.eContents().get(1);
		private final Group cGroup_11_2 = (Group)cGroup_11.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_11_2_0 = (Keyword)cGroup_11_2.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_11_2_1 = (RuleCall)cGroup_11_2.eContents().get(1);
		private final Group cGroup_11_3 = (Group)cGroup_11.eContents().get(3);
		private final Keyword cHyphenMinusKeyword_11_3_0 = (Keyword)cGroup_11_3.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_11_3_1 = (RuleCall)cGroup_11_3.eContents().get(1);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cSoftwarePacakgeKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Keyword cColonKeyword_12_1 = (Keyword)cGroup_12.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_12_2 = (Keyword)cGroup_12.eContents().get(2);
		private final Assignment cImplementedByAssignment_12_3 = (Assignment)cGroup_12.eContents().get(3);
		private final RuleCall cImplementedBySoftwarePackageParserRuleCall_12_3_0 = (RuleCall)cImplementedByAssignment_12_3.eContents().get(0);
		private final Group cGroup_12_4 = (Group)cGroup_12.eContents().get(4);
		private final Keyword cHyphenMinusKeyword_12_4_0 = (Keyword)cGroup_12_4.eContents().get(0);
		private final Assignment cImplementedByAssignment_12_4_1 = (Assignment)cGroup_12_4.eContents().get(1);
		private final RuleCall cImplementedBySoftwarePackageParserRuleCall_12_4_1_0 = (RuleCall)cImplementedByAssignment_12_4_1.eContents().get(0);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cConstraintsKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Keyword cColonKeyword_13_1 = (Keyword)cGroup_13.eContents().get(1);
		private final Assignment cConstraintsAssignment_13_2 = (Assignment)cGroup_13.eContents().get(2);
		private final RuleCall cConstraintsConstraintParserRuleCall_13_2_0 = (RuleCall)cConstraintsAssignment_13_2.eContents().get(0);
		
		//SerivceType returns ServiceType:
		//    'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//    'Spec' ':'
		////        'ports' ':'
		//            ((constraints+=PortsConstraint //specify allOf, anyOf or ExculsivelyOneOf
		//                ('-' networkPorts+=NetworkPort)*
		//            )  |
		//            ('networkPorts' ':'
		//                ('-' networkPorts+=NetworkPort)*    //Default is allOf
		//            ))
		////
		//        'hostedOn' ':'
		//            ('virtualNodes' ':'
		//            ('-' EString)
		//            ('-' EString)*)?
		//            ('softwarePacakge' ':'
		//                '-' implementedBy+=SoftwarePackage
		//                ('-' implementedBy+=SoftwarePackage)*)?
		//        ('constraints' ':' constraints+=Constraint)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//    'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//    'Spec' ':'
		////        'ports' ':'
		//            ((constraints+=PortsConstraint //specify allOf, anyOf or ExculsivelyOneOf
		//                ('-' networkPorts+=NetworkPort)*
		//            )  |
		//            ('networkPorts' ':'
		//                ('-' networkPorts+=NetworkPort)*    //Default is allOf
		//            ))
		////
		//        'hostedOn' ':'
		//            ('virtualNodes' ':'
		//            ('-' EString)
		//            ('-' EString)*)?
		//            ('softwarePacakge' ':'
		//                '-' implementedBy+=SoftwarePackage
		//                ('-' implementedBy+=SoftwarePackage)*)?
		//        ('constraints' ':' constraints+=Constraint)*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_3() { return cTagsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_0() { return cTagsTagParserRuleCall_5_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_6() { return cSpecKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		////        'ports' ':'
		//            ((constraints+=PortsConstraint //specify allOf, anyOf or ExculsivelyOneOf
		//                ('-' networkPorts+=NetworkPort)*
		//            )  |
		//            ('networkPorts' ':'
		//                ('-' networkPorts+=NetworkPort)*    //Default is allOf
		//            ))
		public Alternatives getAlternatives_8() { return cAlternatives_8; }
		
		//(constraints+=PortsConstraint //specify allOf, anyOf or ExculsivelyOneOf
		//                ('-' networkPorts+=NetworkPort)*
		//            )
		public Group getGroup_8_0() { return cGroup_8_0; }
		
		//constraints+=PortsConstraint
		public Assignment getConstraintsAssignment_8_0_0() { return cConstraintsAssignment_8_0_0; }
		
		//PortsConstraint
		public RuleCall getConstraintsPortsConstraintParserRuleCall_8_0_0_0() { return cConstraintsPortsConstraintParserRuleCall_8_0_0_0; }
		
		////specify allOf, anyOf or ExculsivelyOneOf
		//               ('-' networkPorts+=NetworkPort)*
		public Group getGroup_8_0_1() { return cGroup_8_0_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_8_0_1_0() { return cHyphenMinusKeyword_8_0_1_0; }
		
		//networkPorts+=NetworkPort
		public Assignment getNetworkPortsAssignment_8_0_1_1() { return cNetworkPortsAssignment_8_0_1_1; }
		
		//NetworkPort
		public RuleCall getNetworkPortsNetworkPortParserRuleCall_8_0_1_1_0() { return cNetworkPortsNetworkPortParserRuleCall_8_0_1_1_0; }
		
		//('networkPorts' ':'
		//    ('-' networkPorts+=NetworkPort)*    //Default is allOf
		//)
		public Group getGroup_8_1() { return cGroup_8_1; }
		
		//'networkPorts'
		public Keyword getNetworkPortsKeyword_8_1_0() { return cNetworkPortsKeyword_8_1_0; }
		
		//':'
		public Keyword getColonKeyword_8_1_1() { return cColonKeyword_8_1_1; }
		
		//('-' networkPorts+=NetworkPort)*
		public Group getGroup_8_1_2() { return cGroup_8_1_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_8_1_2_0() { return cHyphenMinusKeyword_8_1_2_0; }
		
		//networkPorts+=NetworkPort
		public Assignment getNetworkPortsAssignment_8_1_2_1() { return cNetworkPortsAssignment_8_1_2_1; }
		
		//NetworkPort
		public RuleCall getNetworkPortsNetworkPortParserRuleCall_8_1_2_1_0() { return cNetworkPortsNetworkPortParserRuleCall_8_1_2_1_0; }
		
		////
		//        'hostedOn'
		public Keyword getHostedOnKeyword_9() { return cHostedOnKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//('virtualNodes' ':'
		//('-' EString)
		//('-' EString)*)?
		public Group getGroup_11() { return cGroup_11; }
		
		//'virtualNodes'
		public Keyword getVirtualNodesKeyword_11_0() { return cVirtualNodesKeyword_11_0; }
		
		//':'
		public Keyword getColonKeyword_11_1() { return cColonKeyword_11_1; }
		
		//('-' EString)
		public Group getGroup_11_2() { return cGroup_11_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_2_0() { return cHyphenMinusKeyword_11_2_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_11_2_1() { return cEStringParserRuleCall_11_2_1; }
		
		//('-' EString)*
		public Group getGroup_11_3() { return cGroup_11_3; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_11_3_0() { return cHyphenMinusKeyword_11_3_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_11_3_1() { return cEStringParserRuleCall_11_3_1; }
		
		//('softwarePacakge' ':'
		//    '-' implementedBy+=SoftwarePackage
		//    ('-' implementedBy+=SoftwarePackage)*)?
		public Group getGroup_12() { return cGroup_12; }
		
		//'softwarePacakge'
		public Keyword getSoftwarePacakgeKeyword_12_0() { return cSoftwarePacakgeKeyword_12_0; }
		
		//':'
		public Keyword getColonKeyword_12_1() { return cColonKeyword_12_1; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_2() { return cHyphenMinusKeyword_12_2; }
		
		//implementedBy+=SoftwarePackage
		public Assignment getImplementedByAssignment_12_3() { return cImplementedByAssignment_12_3; }
		
		//SoftwarePackage
		public RuleCall getImplementedBySoftwarePackageParserRuleCall_12_3_0() { return cImplementedBySoftwarePackageParserRuleCall_12_3_0; }
		
		//('-' implementedBy+=SoftwarePackage)*
		public Group getGroup_12_4() { return cGroup_12_4; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_4_0() { return cHyphenMinusKeyword_12_4_0; }
		
		//implementedBy+=SoftwarePackage
		public Assignment getImplementedByAssignment_12_4_1() { return cImplementedByAssignment_12_4_1; }
		
		//SoftwarePackage
		public RuleCall getImplementedBySoftwarePackageParserRuleCall_12_4_1_0() { return cImplementedBySoftwarePackageParserRuleCall_12_4_1_0; }
		
		//('constraints' ':' constraints+=Constraint)*
		public Group getGroup_13() { return cGroup_13; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_13_0() { return cConstraintsKeyword_13_0; }
		
		//':'
		public Keyword getColonKeyword_13_1() { return cColonKeyword_13_1; }
		
		//constraints+=Constraint
		public Assignment getConstraintsAssignment_13_2() { return cConstraintsAssignment_13_2; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_13_2_0() { return cConstraintsConstraintParserRuleCall_13_2_0; }
	}
	public class SoftwarePackageElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.SoftwarePackage");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameIDTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cCommandKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cInstallStartScriptAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cInstallStartScriptEStringParserRuleCall_4_0 = (RuleCall)cInstallStartScriptAssignment_4.eContents().get(0);
		private final Keyword cConstraintsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cConstraintsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cConstraintsReplicasConstraintParserRuleCall_7_1_0 = (RuleCall)cConstraintsAssignment_7_1.eContents().get(0);
		
		//SoftwarePackage returns SoftwarePackage:
		//    name=ID ':'
		//    'command' ':' installStartScript=EString
		//    'constraints' ':'
		//    ('-' constraints += ReplicasConstraint)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//name=ID ':'
		//'command' ':' installStartScript=EString
		//'constraints' ':'
		//('-' constraints += ReplicasConstraint)*
		public Group getGroup() { return cGroup; }
		
		//name=ID
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_0_0() { return cNameIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'command'
		public Keyword getCommandKeyword_2() { return cCommandKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//installStartScript=EString
		public Assignment getInstallStartScriptAssignment_4() { return cInstallStartScriptAssignment_4; }
		
		//EString
		public RuleCall getInstallStartScriptEStringParserRuleCall_4_0() { return cInstallStartScriptEStringParserRuleCall_4_0; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_5() { return cConstraintsKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//('-' constraints += ReplicasConstraint)*
		public Group getGroup_7() { return cGroup_7; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_7_0() { return cHyphenMinusKeyword_7_0; }
		
		//constraints += ReplicasConstraint
		public Assignment getConstraintsAssignment_7_1() { return cConstraintsAssignment_7_1; }
		
		//ReplicasConstraint
		public RuleCall getConstraintsReplicasConstraintParserRuleCall_7_1_0() { return cConstraintsReplicasConstraintParserRuleCall_7_1_0; }
	}
	public class PortsConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.PortsConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionPortsExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cExpressionAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cExpressionMultiplicityExpressionParserRuleCall_3_0 = (RuleCall)cExpressionAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PortsConstraint returns Constraint:
		//    {Constraint}
		//    expression+=portsExpression ':'
		//    expression+=MultiplicityExpression ':'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		//expression+=portsExpression ':'
		//expression+=MultiplicityExpression ':'
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		//expression+=portsExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//portsExpression
		public RuleCall getExpressionPortsExpressionParserRuleCall_1_0() { return cExpressionPortsExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//expression+=MultiplicityExpression
		public Assignment getExpressionAssignment_3() { return cExpressionAssignment_3; }
		
		//MultiplicityExpression
		public RuleCall getExpressionMultiplicityExpressionParserRuleCall_3_0() { return cExpressionMultiplicityExpressionParserRuleCall_3_0; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
	}
	public class MultiplicityExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.MultiplicityExpression");
		private final Assignment cMultiplicityOperatorAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cMultiplicityOperatorMultiplicityOperatorEnumRuleCall_0 = (RuleCall)cMultiplicityOperatorAssignment.eContents().get(0);
		
		//MultiplicityExpression returns MultiplicityExpression:
		//    multiplicityOperator=MultiplicityOperator
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//multiplicityOperator=MultiplicityOperator
		public Assignment getMultiplicityOperatorAssignment() { return cMultiplicityOperatorAssignment; }
		
		//MultiplicityOperator
		public RuleCall getMultiplicityOperatorMultiplicityOperatorEnumRuleCall_0() { return cMultiplicityOperatorMultiplicityOperatorEnumRuleCall_0; }
	}
	public class PortsExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.portsExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameNetworkPortKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//portsExpression returns AttributeExpression:
		//    attributeName='networkPort'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='networkPort'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'networkPort'
		public Keyword getAttributeNameNetworkPortKeyword_0() { return cAttributeNameNetworkPortKeyword_0; }
	}
	public class NetworkPortElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkPort");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cPortNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cPortNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cPortNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cProtocolKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cProtocolAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cProtocolTransportProtocolEnumRuleCall_4_0 = (RuleCall)cProtocolAssignment_4.eContents().get(0);
		private final Keyword cPortNumberKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cPortNumberAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cPortNumberINTTerminalRuleCall_7_0 = (RuleCall)cPortNumberAssignment_7.eContents().get(0);
		private final Keyword cHostPortKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Assignment cHostPortAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cHostPortINTTerminalRuleCall_10_0 = (RuleCall)cHostPortAssignment_10.eContents().get(0);
		
		//NetworkPort returns NetworkPort:
		//    portName=STRING ':'
		//    'protocol' ':' protocol=TransportProtocol
		//    'portNumber' ':' portNumber=INT
		//    'hostPort' ':' hostPort=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//portName=STRING ':'
		//'protocol' ':' protocol=TransportProtocol
		//'portNumber' ':' portNumber=INT
		//'hostPort' ':' hostPort=INT
		public Group getGroup() { return cGroup; }
		
		//portName=STRING
		public Assignment getPortNameAssignment_0() { return cPortNameAssignment_0; }
		
		//STRING
		public RuleCall getPortNameSTRINGTerminalRuleCall_0_0() { return cPortNameSTRINGTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'protocol'
		public Keyword getProtocolKeyword_2() { return cProtocolKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//protocol=TransportProtocol
		public Assignment getProtocolAssignment_4() { return cProtocolAssignment_4; }
		
		//TransportProtocol
		public RuleCall getProtocolTransportProtocolEnumRuleCall_4_0() { return cProtocolTransportProtocolEnumRuleCall_4_0; }
		
		//'portNumber'
		public Keyword getPortNumberKeyword_5() { return cPortNumberKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//portNumber=INT
		public Assignment getPortNumberAssignment_7() { return cPortNumberAssignment_7; }
		
		//INT
		public RuleCall getPortNumberINTTerminalRuleCall_7_0() { return cPortNumberINTTerminalRuleCall_7_0; }
		
		//'hostPort'
		public Keyword getHostPortKeyword_8() { return cHostPortKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//hostPort=INT
		public Assignment getHostPortAssignment_10() { return cHostPortAssignment_10; }
		
		//INT
		public RuleCall getHostPortINTTerminalRuleCall_10_0() { return cHostPortINTTerminalRuleCall_10_0; }
	}
	public class NetworkTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameIDTerminalRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_0 = (RuleCall)cTagsAssignment_5_1.eContents().get(0);
		private final Keyword cSpecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cConstraintsKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Group cGroup_10 = (Group)cGroup.eContents().get(10);
		private final Keyword cHyphenMinusKeyword_10_0 = (Keyword)cGroup_10.eContents().get(0);
		private final Assignment cConstraintsAssignment_10_1 = (Assignment)cGroup_10.eContents().get(1);
		private final Alternatives cConstraintsAlternatives_10_1_0 = (Alternatives)cConstraintsAssignment_10_1.eContents().get(0);
		private final RuleCall cConstraintsConstraintParserRuleCall_10_1_0_0 = (RuleCall)cConstraintsAlternatives_10_1_0.eContents().get(0);
		private final RuleCall cConstraintsNetworkClassConstraintParserRuleCall_10_1_0_1 = (RuleCall)cConstraintsAlternatives_10_1_0.eContents().get(1);
		
		//NetworkType returns NetworkType:
		//    'metadata' ':'
		//        ('id' ':' name=ID)?
		//        'tags' ':'
		//            ('-' tags+=Tag)*
		//    'Spec' ':'
		//        'constraints' ':'
		//            ('-' constraints += (Constraint | networkClassConstraint) )*
		////    ('ipRange' ':' ipRange+=ipRangeConstraint)?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata' ':'
		//    ('id' ':' name=ID)?
		//    'tags' ':'
		//        ('-' tags+=Tag)*
		//'Spec' ':'
		//    'constraints' ':'
		//        ('-' constraints += (Constraint | networkClassConstraint) )*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=ID)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=ID
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_2_2_0() { return cNameIDTerminalRuleCall_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_3() { return cTagsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_0() { return cTagsTagParserRuleCall_5_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_6() { return cSpecKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_8() { return cConstraintsKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//('-' constraints += (Constraint | networkClassConstraint) )*
		public Group getGroup_10() { return cGroup_10; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_10_0() { return cHyphenMinusKeyword_10_0; }
		
		//constraints += (Constraint | networkClassConstraint)
		public Assignment getConstraintsAssignment_10_1() { return cConstraintsAssignment_10_1; }
		
		//(Constraint | networkClassConstraint)
		public Alternatives getConstraintsAlternatives_10_1_0() { return cConstraintsAlternatives_10_1_0; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_10_1_0_0() { return cConstraintsConstraintParserRuleCall_10_1_0_0; }
		
		//networkClassConstraint
		public RuleCall getConstraintsNetworkClassConstraintParserRuleCall_10_1_0_1() { return cConstraintsNetworkClassConstraintParserRuleCall_10_1_0_1; }
	}
	public class ConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.Constraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final Alternatives cExpressionAlternatives_3_0_0 = (Alternatives)cExpressionAssignment_3_0.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_0_0_0 = (RuleCall)cExpressionAlternatives_3_0_0.eContents().get(0);
		private final RuleCall cExpressionAttributeExpressionParserRuleCall_3_0_0_1 = (RuleCall)cExpressionAlternatives_3_0_0.eContents().get(1);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cExpressionAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final Alternatives cExpressionAlternatives_3_1_2_0 = (Alternatives)cExpressionAssignment_3_1_2.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0_0 = (RuleCall)cExpressionAlternatives_3_1_2_0.eContents().get(0);
		private final RuleCall cExpressionAttributeExpressionParserRuleCall_3_1_2_0_1 = (RuleCall)cExpressionAlternatives_3_1_2_0.eContents().get(1);
		
		//Constraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=AttributeExpression ':'
		//    (
		//        expression+=(IntegerValueExpression | AttributeExpression) |
		//        operator=ComparaisonOperator ':' expression+=(IntegerValueExpression | AttributeExpression)
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=AttributeExpression ':'
		//(
		//    expression+=(IntegerValueExpression | AttributeExpression) |
		//    operator=ComparaisonOperator ':' expression+=(IntegerValueExpression | AttributeExpression)
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=AttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//AttributeExpression
		public RuleCall getExpressionAttributeExpressionParserRuleCall_1_0() { return cExpressionAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    expression+=(IntegerValueExpression | AttributeExpression) |
		//    operator=ComparaisonOperator ':' expression+=(IntegerValueExpression | AttributeExpression)
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//expression+=(IntegerValueExpression | AttributeExpression)
		public Assignment getExpressionAssignment_3_0() { return cExpressionAssignment_3_0; }
		
		//(IntegerValueExpression | AttributeExpression)
		public Alternatives getExpressionAlternatives_3_0_0() { return cExpressionAlternatives_3_0_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_0_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_0_0_0; }
		
		//AttributeExpression
		public RuleCall getExpressionAttributeExpressionParserRuleCall_3_0_0_1() { return cExpressionAttributeExpressionParserRuleCall_3_0_0_1; }
		
		//operator=ComparaisonOperator ':' expression+=(IntegerValueExpression | AttributeExpression)
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//expression+=(IntegerValueExpression | AttributeExpression)
		public Assignment getExpressionAssignment_3_1_2() { return cExpressionAssignment_3_1_2; }
		
		//(IntegerValueExpression | AttributeExpression)
		public Alternatives getExpressionAlternatives_3_1_2_0() { return cExpressionAlternatives_3_1_2_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0_0; }
		
		//AttributeExpression
		public RuleCall getExpressionAttributeExpressionParserRuleCall_3_1_2_0_1() { return cExpressionAttributeExpressionParserRuleCall_3_1_2_0_1; }
	}
	public class AttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.AttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cAttributeNameEStringParserRuleCall_0 = (RuleCall)cAttributeNameAssignment.eContents().get(0);
		
		//AttributeExpression returns AttributeExpression:
		//    //'attributeName' ':'
		//     attributeName=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		////'attributeName' ':'
		// attributeName=EString
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//EString
		public RuleCall getAttributeNameEStringParserRuleCall_0() { return cAttributeNameEStringParserRuleCall_0; }
	}
	public class NetworkLinksTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkLinksType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cIdKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cColonKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cNameAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cNameIDTerminalRuleCall_4_0 = (RuleCall)cNameAssignment_4.eContents().get(0);
		private final Keyword cTagsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cColonKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cHyphenMinusKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Assignment cTagsAssignment_7_1 = (Assignment)cGroup_7.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_7_1_0 = (RuleCall)cTagsAssignment_7_1.eContents().get(0);
		private final Keyword cSpecKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cColonKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cConstraintsKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cColonKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Group cGroup_12 = (Group)cGroup.eContents().get(12);
		private final Keyword cHyphenMinusKeyword_12_0 = (Keyword)cGroup_12.eContents().get(0);
		private final Assignment cConstraintsAssignment_12_1 = (Assignment)cGroup_12.eContents().get(1);
		private final Alternatives cConstraintsAlternatives_12_1_0 = (Alternatives)cConstraintsAssignment_12_1.eContents().get(0);
		private final RuleCall cConstraintsConstraintParserRuleCall_12_1_0_0 = (RuleCall)cConstraintsAlternatives_12_1_0.eContents().get(0);
		private final RuleCall cConstraintsNetworkClassConstraintParserRuleCall_12_1_0_1 = (RuleCall)cConstraintsAlternatives_12_1_0.eContents().get(1);
		private final Keyword cNetworksKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Keyword cColonKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cSourceNetworksKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cColonKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Group cGroup_15_2 = (Group)cGroup_15.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_15_2_0 = (Keyword)cGroup_15_2.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_15_2_1 = (RuleCall)cGroup_15_2.eContents().get(1);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cTargetNetworksKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Keyword cColonKeyword_16_1 = (Keyword)cGroup_16.eContents().get(1);
		private final Group cGroup_16_2 = (Group)cGroup_16.eContents().get(2);
		private final Keyword cHyphenMinusKeyword_16_2_0 = (Keyword)cGroup_16_2.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_16_2_1 = (RuleCall)cGroup_16_2.eContents().get(1);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cSourceNodeKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cColonKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_17_2 = (RuleCall)cGroup_17.eContents().get(2);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cTargetNodeKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cColonKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final RuleCall cEStringParserRuleCall_18_2 = (RuleCall)cGroup_18.eContents().get(2);
		
		//NetworkLinksType returns NetworkLinkType:
		//            ('metadata' ':'
		//                'id' ':' name=ID
		//                'tags' ':'
		//                ('-' tags+=Tag)*
		//                'Spec' ':'
		//                    'constraints' ':'
		//                    ('-' constraints += (Constraint | networkClassConstraint) )*
		//                    'networks' ':'
		//                        ('sourceNetworks' ':'
		//                        ('-' EString)*)?
		//                        ('targetNetworks' ':'
		//                        ('-' EString)*)?
		//                        ('sourceNode' ':' EString)?
		//                        ('targetNode' ':' EString)?
		//            )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//('metadata' ':'
		//    'id' ':' name=ID
		//    'tags' ':'
		//    ('-' tags+=Tag)*
		//    'Spec' ':'
		//        'constraints' ':'
		//        ('-' constraints += (Constraint | networkClassConstraint) )*
		//        'networks' ':'
		//            ('sourceNetworks' ':'
		//            ('-' EString)*)?
		//            ('targetNetworks' ':'
		//            ('-' EString)*)?
		//            ('sourceNode' ':' EString)?
		//            ('targetNode' ':' EString)?
		//)
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//'id'
		public Keyword getIdKeyword_2() { return cIdKeyword_2; }
		
		//':'
		public Keyword getColonKeyword_3() { return cColonKeyword_3; }
		
		//name=ID
		public Assignment getNameAssignment_4() { return cNameAssignment_4; }
		
		//ID
		public RuleCall getNameIDTerminalRuleCall_4_0() { return cNameIDTerminalRuleCall_4_0; }
		
		//'tags'
		public Keyword getTagsKeyword_5() { return cTagsKeyword_5; }
		
		//':'
		public Keyword getColonKeyword_6() { return cColonKeyword_6; }
		
		//('-' tags+=Tag)*
		public Group getGroup_7() { return cGroup_7; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_7_0() { return cHyphenMinusKeyword_7_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_7_1() { return cTagsAssignment_7_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_7_1_0() { return cTagsTagParserRuleCall_7_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_8() { return cSpecKeyword_8; }
		
		//':'
		public Keyword getColonKeyword_9() { return cColonKeyword_9; }
		
		//'constraints'
		public Keyword getConstraintsKeyword_10() { return cConstraintsKeyword_10; }
		
		//':'
		public Keyword getColonKeyword_11() { return cColonKeyword_11; }
		
		//('-' constraints += (Constraint | networkClassConstraint) )*
		public Group getGroup_12() { return cGroup_12; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_12_0() { return cHyphenMinusKeyword_12_0; }
		
		//constraints += (Constraint | networkClassConstraint)
		public Assignment getConstraintsAssignment_12_1() { return cConstraintsAssignment_12_1; }
		
		//(Constraint | networkClassConstraint)
		public Alternatives getConstraintsAlternatives_12_1_0() { return cConstraintsAlternatives_12_1_0; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_12_1_0_0() { return cConstraintsConstraintParserRuleCall_12_1_0_0; }
		
		//networkClassConstraint
		public RuleCall getConstraintsNetworkClassConstraintParserRuleCall_12_1_0_1() { return cConstraintsNetworkClassConstraintParserRuleCall_12_1_0_1; }
		
		//'networks'
		public Keyword getNetworksKeyword_13() { return cNetworksKeyword_13; }
		
		//':'
		public Keyword getColonKeyword_14() { return cColonKeyword_14; }
		
		//('sourceNetworks' ':'
		//('-' EString)*)?
		public Group getGroup_15() { return cGroup_15; }
		
		//'sourceNetworks'
		public Keyword getSourceNetworksKeyword_15_0() { return cSourceNetworksKeyword_15_0; }
		
		//':'
		public Keyword getColonKeyword_15_1() { return cColonKeyword_15_1; }
		
		//('-' EString)*
		public Group getGroup_15_2() { return cGroup_15_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_15_2_0() { return cHyphenMinusKeyword_15_2_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_15_2_1() { return cEStringParserRuleCall_15_2_1; }
		
		//('targetNetworks' ':'
		//('-' EString)*)?
		public Group getGroup_16() { return cGroup_16; }
		
		//'targetNetworks'
		public Keyword getTargetNetworksKeyword_16_0() { return cTargetNetworksKeyword_16_0; }
		
		//':'
		public Keyword getColonKeyword_16_1() { return cColonKeyword_16_1; }
		
		//('-' EString)*
		public Group getGroup_16_2() { return cGroup_16_2; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_16_2_0() { return cHyphenMinusKeyword_16_2_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_16_2_1() { return cEStringParserRuleCall_16_2_1; }
		
		//('sourceNode' ':' EString)?
		public Group getGroup_17() { return cGroup_17; }
		
		//'sourceNode'
		public Keyword getSourceNodeKeyword_17_0() { return cSourceNodeKeyword_17_0; }
		
		//':'
		public Keyword getColonKeyword_17_1() { return cColonKeyword_17_1; }
		
		//EString
		public RuleCall getEStringParserRuleCall_17_2() { return cEStringParserRuleCall_17_2; }
		
		//('targetNode' ':' EString)?
		public Group getGroup_18() { return cGroup_18; }
		
		//'targetNode'
		public Keyword getTargetNodeKeyword_18_0() { return cTargetNodeKeyword_18_0; }
		
		//':'
		public Keyword getColonKeyword_18_1() { return cColonKeyword_18_1; }
		
		//EString
		public RuleCall getEStringParserRuleCall_18_2() { return cEStringParserRuleCall_18_2; }
	}
	public class NetworkClassConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.networkClassConstraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cExpressionAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cExpressionNetworkClassExpressionParserRuleCall_0_0_0 = (RuleCall)cExpressionAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Assignment cExpressionAssignment_0_2 = (Assignment)cGroup_0.eContents().get(2);
		private final RuleCall cExpressionNetworkClassEnumExpressionParserRuleCall_0_2_0 = (RuleCall)cExpressionAssignment_0_2.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOperatorAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_1_0_0 = (RuleCall)cOperatorAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpressionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_1_2_0 = (RuleCall)cExpressionAssignment_1_2.eContents().get(0);
		
		//networkClassConstraint returns Constraint:
		//    expression+=NetworkClassExpression  ':'
		//    (expression+=NetworkClassEnumExpression) | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expression+=NetworkClassExpression  ':'
		//(expression+=NetworkClassEnumExpression) | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//expression+=NetworkClassExpression  ':'
		//(expression+=NetworkClassEnumExpression)
		public Group getGroup_0() { return cGroup_0; }
		
		//expression+=NetworkClassExpression
		public Assignment getExpressionAssignment_0_0() { return cExpressionAssignment_0_0; }
		
		//NetworkClassExpression
		public RuleCall getExpressionNetworkClassExpressionParserRuleCall_0_0_0() { return cExpressionNetworkClassExpressionParserRuleCall_0_0_0; }
		
		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//(expression+=NetworkClassEnumExpression)
		public Assignment getExpressionAssignment_0_2() { return cExpressionAssignment_0_2; }
		
		//NetworkClassEnumExpression
		public RuleCall getExpressionNetworkClassEnumExpressionParserRuleCall_0_2_0() { return cExpressionNetworkClassEnumExpressionParserRuleCall_0_2_0; }
		
		//(operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		public Group getGroup_1() { return cGroup_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_1_0() { return cOperatorAssignment_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_1_2() { return cExpressionAssignment_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_1_2_0; }
	}
	public class NetworkClassEnumExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkClassEnumExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueNetworkClassEnumEnumRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NetworkClassEnumExpression returns NetworkClassExpression:
		//    value=NetworkClassEnum
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=NetworkClassEnum
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//NetworkClassEnum
		public RuleCall getValueNetworkClassEnumEnumRuleCall_0() { return cValueNetworkClassEnumEnumRuleCall_0; }
	}
	public class NetworkClassExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkClassExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameNetworkClassKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//NetworkClassExpression returns AttributeExpression:
		//    attributeName='networkClass'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='networkClass'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'networkClass'
		public Keyword getAttributeNameNetworkClassKeyword_0() { return cAttributeNameNetworkClassKeyword_0; }
	}
	public class BandwidthConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.BandwidthConstraint");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cAlternatives.eContents().get(0);
		private final Assignment cExpressionAssignment_0_0 = (Assignment)cGroup_0.eContents().get(0);
		private final RuleCall cExpressionBandwidthExpressionParserRuleCall_0_0_0 = (RuleCall)cExpressionAssignment_0_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Assignment cExpressionAssignment_0_2_0 = (Assignment)cGroup_0_2.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_0_2_0_0 = (RuleCall)cExpressionAssignment_0_2_0.eContents().get(0);
		private final Keyword cMbsKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final Assignment cOperatorAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_1_0_0 = (RuleCall)cOperatorAssignment_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final Assignment cExpressionAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_1_2_0 = (RuleCall)cExpressionAssignment_1_2.eContents().get(0);
		
		//BandwidthConstraint returns Constraint:
		//    expression+=bandwidthExpression ':'
		//    (expression+=IntegerValueExpression 'Mbs') | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expression+=bandwidthExpression ':'
		//(expression+=IntegerValueExpression 'Mbs') | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//expression+=bandwidthExpression ':'
		//(expression+=IntegerValueExpression 'Mbs')
		public Group getGroup_0() { return cGroup_0; }
		
		//expression+=bandwidthExpression
		public Assignment getExpressionAssignment_0_0() { return cExpressionAssignment_0_0; }
		
		//bandwidthExpression
		public RuleCall getExpressionBandwidthExpressionParserRuleCall_0_0_0() { return cExpressionBandwidthExpressionParserRuleCall_0_0_0; }
		
		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//(expression+=IntegerValueExpression 'Mbs')
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_0_2_0() { return cExpressionAssignment_0_2_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_0_2_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_0_2_0_0; }
		
		//'Mbs'
		public Keyword getMbsKeyword_0_2_1() { return cMbsKeyword_0_2_1; }
		
		//(operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
		public Group getGroup_1() { return cGroup_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_1_0() { return cOperatorAssignment_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_1_1() { return cColonKeyword_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_1_2() { return cExpressionAssignment_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_1_2_0; }
	}
	public class BandwidthExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.bandwidthExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameBandwidthKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//bandwidthExpression returns AttributeExpression:
		//    attributeName='bandwidth'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='bandwidth'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'bandwidth'
		public Keyword getAttributeNameBandwidthKeyword_0() { return cAttributeNameBandwidthKeyword_0; }
	}
	public class IpRangeConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ipRangeConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cExpressionAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cExpressionIpRangeExpressionParserRuleCall_0_0 = (RuleCall)cExpressionAssignment_0.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionRangeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		
		//ipRangeConstraint returns Constraint:
		//    expression+=ipRangeExpression expression+=rangeExpression
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expression+=ipRangeExpression expression+=rangeExpression
		public Group getGroup() { return cGroup; }
		
		//expression+=ipRangeExpression
		public Assignment getExpressionAssignment_0() { return cExpressionAssignment_0; }
		
		//ipRangeExpression
		public RuleCall getExpressionIpRangeExpressionParserRuleCall_0_0() { return cExpressionIpRangeExpressionParserRuleCall_0_0; }
		
		//expression+=rangeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//rangeExpression
		public RuleCall getExpressionRangeExpressionParserRuleCall_1_0() { return cExpressionRangeExpressionParserRuleCall_1_0; }
	}
	public class RangeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.rangeExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cColonKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final Keyword cExpressionLeftSquareBracketKeyword_1_0 = (Keyword)cExpressionAssignment_1.eContents().get(0);
		private final RuleCall cEStringParserRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cCommaKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cEStringParserRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Keyword cRightSquareBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//rangeExpression returns CustomExpression:
		//    ':' expression='[' EString ',' EString ']'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//':' expression='[' EString ',' EString ']'
		public Group getGroup() { return cGroup; }
		
		//':'
		public Keyword getColonKeyword_0() { return cColonKeyword_0; }
		
		//expression='['
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//'['
		public Keyword getExpressionLeftSquareBracketKeyword_1_0() { return cExpressionLeftSquareBracketKeyword_1_0; }
		
		//EString
		public RuleCall getEStringParserRuleCall_2() { return cEStringParserRuleCall_2; }
		
		//','
		public Keyword getCommaKeyword_3() { return cCommaKeyword_3; }
		
		//EString
		public RuleCall getEStringParserRuleCall_4() { return cEStringParserRuleCall_4; }
		
		//']'
		public Keyword getRightSquareBracketKeyword_5() { return cRightSquareBracketKeyword_5; }
	}
	public class IpRangeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ipRangeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameIpRangeKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//ipRangeExpression returns AttributeExpression:
		//    attributeName='ipRange'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='ipRange'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'ipRange'
		public Keyword getAttributeNameIpRangeKeyword_0() { return cAttributeNameIpRangeKeyword_0; }
	}
	public class IpAddressElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.IpAddress");
		private final RuleCall cEStringParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		//IpAddress returns IntegerValueExpression:
		//    EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//EString
		public RuleCall getEStringParserRuleCall() { return cEStringParserRuleCall; }
	}
	public class VirtualNodeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.VirtualNodeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cMetadataKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cIdKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Keyword cColonKeyword_2_1 = (Keyword)cGroup_2.eContents().get(1);
		private final Assignment cNameAssignment_2_2 = (Assignment)cGroup_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_2_2_0 = (RuleCall)cNameAssignment_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTagsAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_5_1_0 = (RuleCall)cTagsAssignment_5_1.eContents().get(0);
		private final Keyword cSpecKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Keyword cColonKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Group cGroup_8 = (Group)cGroup.eContents().get(8);
		private final Keyword cImageKeyword_8_0 = (Keyword)cGroup_8.eContents().get(0);
		private final Keyword cColonKeyword_8_1 = (Keyword)cGroup_8.eContents().get(1);
		private final Assignment cImageNameAssignment_8_2 = (Assignment)cGroup_8.eContents().get(2);
		private final RuleCall cImageNameIDTerminalRuleCall_8_2_0 = (RuleCall)cImageNameAssignment_8_2.eContents().get(0);
		private final Group cGroup_9 = (Group)cGroup.eContents().get(9);
		private final Keyword cImageRegistryKeyword_9_0 = (Keyword)cGroup_9.eContents().get(0);
		private final Keyword cColonKeyword_9_1 = (Keyword)cGroup_9.eContents().get(1);
		private final Assignment cImageRegistryAssignment_9_2 = (Assignment)cGroup_9.eContents().get(2);
		private final RuleCall cImageRegistryIDTerminalRuleCall_9_2_0 = (RuleCall)cImageRegistryAssignment_9_2.eContents().get(0);
		private final Group cGroup_9_3 = (Group)cGroup_9.eContents().get(3);
		private final Keyword cFullStopKeyword_9_3_0 = (Keyword)cGroup_9_3.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_9_3_1 = (RuleCall)cGroup_9_3.eContents().get(1);
		private final Assignment cReplicasAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cReplicasReplicasConstraintParserRuleCall_10_0 = (RuleCall)cReplicasAssignment_10.eContents().get(0);
		private final Keyword cPhysicalResourcesKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cConstraintsAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cConstraintsCpuConstraintParserRuleCall_13_0 = (RuleCall)cConstraintsAssignment_13.eContents().get(0);
		private final Assignment cConstraintsAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cConstraintsMemoryConsraintParserRuleCall_14_0 = (RuleCall)cConstraintsAssignment_14.eContents().get(0);
		private final Assignment cConstraintsAssignment_15 = (Assignment)cGroup.eContents().get(15);
		private final RuleCall cConstraintsDiskConstraintParserRuleCall_15_0 = (RuleCall)cConstraintsAssignment_15.eContents().get(0);
		private final Assignment cConstraintsAssignment_16 = (Assignment)cGroup.eContents().get(16);
		private final RuleCall cConstraintsConstraintParserRuleCall_16_0 = (RuleCall)cConstraintsAssignment_16.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cHostingNodeKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Keyword cColonKeyword_17_1 = (Keyword)cGroup_17.eContents().get(1);
		private final Assignment cHostingNodeAssignment_17_2 = (Assignment)cGroup_17.eContents().get(2);
		private final RuleCall cHostingNodeVirtualNodeTypeParserRuleCall_17_2_0 = (RuleCall)cHostingNodeAssignment_17_2.eContents().get(0);
		private final Keyword cNetworkLinksKeyword_18 = (Keyword)cGroup.eContents().get(18);
		private final Keyword cColonKeyword_19 = (Keyword)cGroup.eContents().get(19);
		private final Keyword cDownloadLinkKeyword_20 = (Keyword)cGroup.eContents().get(20);
		private final Keyword cColonKeyword_21 = (Keyword)cGroup.eContents().get(21);
		private final Group cGroup_22 = (Group)cGroup.eContents().get(22);
		private final Keyword cHyphenMinusKeyword_22_0 = (Keyword)cGroup_22.eContents().get(0);
		private final Assignment cDownloadLinkAssignment_22_1 = (Assignment)cGroup_22.eContents().get(1);
		private final RuleCall cDownloadLinkNetworkLinksTypeParserRuleCall_22_1_0 = (RuleCall)cDownloadLinkAssignment_22_1.eContents().get(0);
		private final Keyword cUploadLinkKeyword_23 = (Keyword)cGroup.eContents().get(23);
		private final Keyword cColonKeyword_24 = (Keyword)cGroup.eContents().get(24);
		private final Group cGroup_25 = (Group)cGroup.eContents().get(25);
		private final Keyword cHyphenMinusKeyword_25_0 = (Keyword)cGroup_25.eContents().get(0);
		private final Assignment cUploadLinkAssignment_25_1 = (Assignment)cGroup_25.eContents().get(1);
		private final RuleCall cUploadLinkNetworkLinksTypeParserRuleCall_25_1_0 = (RuleCall)cUploadLinkAssignment_25_1.eContents().get(0);
		
		//VirtualNodeType returns VirtualNodeSpecification:
		//    'metadata' ':'
		//        ('id' ':' name=EString)?
		//        'tags' ':'
		//        ('-' tags+=Tag)*
		//    'Spec' ':'
		//        ('image' ':' imageName=ID)
		//        ('imageRegistry' ':' imageRegistry=ID ('.' ID)* )
		//        (replicas+=ReplicasConstraint)*
		//        'physicalResources' ':'
		//        (constraints+=CpuConstraint)*
		//        (constraints+=MemoryConsraint)*
		//        (constraints+=diskConstraint)*
		//        (constraints+=Constraint)*
		//        ('hostingNode' ':'
		//          hostingNode=VirtualNodeType)?
		//        'networkLinks' ':'
		//            'downloadLink' ':'
		//                ('-' downloadLink += NetworkLinksType)*
		//            'uploadLink' ':'
		//                ('-' uploadLink += NetworkLinksType)*
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//'metadata' ':'
		//    ('id' ':' name=EString)?
		//    'tags' ':'
		//    ('-' tags+=Tag)*
		//'Spec' ':'
		//    ('image' ':' imageName=ID)
		//    ('imageRegistry' ':' imageRegistry=ID ('.' ID)* )
		//    (replicas+=ReplicasConstraint)*
		//    'physicalResources' ':'
		//    (constraints+=CpuConstraint)*
		//    (constraints+=MemoryConsraint)*
		//    (constraints+=diskConstraint)*
		//    (constraints+=Constraint)*
		//    ('hostingNode' ':'
		//      hostingNode=VirtualNodeType)?
		//    'networkLinks' ':'
		//        'downloadLink' ':'
		//            ('-' downloadLink += NetworkLinksType)*
		//        'uploadLink' ':'
		//            ('-' uploadLink += NetworkLinksType)*
		public Group getGroup() { return cGroup; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0() { return cMetadataKeyword_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//('id' ':' name=EString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'id'
		public Keyword getIdKeyword_2_0() { return cIdKeyword_2_0; }
		
		//':'
		public Keyword getColonKeyword_2_1() { return cColonKeyword_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_2_2() { return cNameAssignment_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_2_2_0() { return cNameEStringParserRuleCall_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_3() { return cTagsKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_5() { return cGroup_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_5_0() { return cHyphenMinusKeyword_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_5_1() { return cTagsAssignment_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_5_1_0() { return cTagsTagParserRuleCall_5_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_6() { return cSpecKeyword_6; }
		
		//':'
		public Keyword getColonKeyword_7() { return cColonKeyword_7; }
		
		//('image' ':' imageName=ID)
		public Group getGroup_8() { return cGroup_8; }
		
		//'image'
		public Keyword getImageKeyword_8_0() { return cImageKeyword_8_0; }
		
		//':'
		public Keyword getColonKeyword_8_1() { return cColonKeyword_8_1; }
		
		//imageName=ID
		public Assignment getImageNameAssignment_8_2() { return cImageNameAssignment_8_2; }
		
		//ID
		public RuleCall getImageNameIDTerminalRuleCall_8_2_0() { return cImageNameIDTerminalRuleCall_8_2_0; }
		
		//('imageRegistry' ':' imageRegistry=ID ('.' ID)* )
		public Group getGroup_9() { return cGroup_9; }
		
		//'imageRegistry'
		public Keyword getImageRegistryKeyword_9_0() { return cImageRegistryKeyword_9_0; }
		
		//':'
		public Keyword getColonKeyword_9_1() { return cColonKeyword_9_1; }
		
		//imageRegistry=ID
		public Assignment getImageRegistryAssignment_9_2() { return cImageRegistryAssignment_9_2; }
		
		//ID
		public RuleCall getImageRegistryIDTerminalRuleCall_9_2_0() { return cImageRegistryIDTerminalRuleCall_9_2_0; }
		
		//('.' ID)*
		public Group getGroup_9_3() { return cGroup_9_3; }
		
		//'.'
		public Keyword getFullStopKeyword_9_3_0() { return cFullStopKeyword_9_3_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_9_3_1() { return cIDTerminalRuleCall_9_3_1; }
		
		//(replicas+=ReplicasConstraint)*
		public Assignment getReplicasAssignment_10() { return cReplicasAssignment_10; }
		
		//ReplicasConstraint
		public RuleCall getReplicasReplicasConstraintParserRuleCall_10_0() { return cReplicasReplicasConstraintParserRuleCall_10_0; }
		
		//'physicalResources'
		public Keyword getPhysicalResourcesKeyword_11() { return cPhysicalResourcesKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//(constraints+=CpuConstraint)*
		public Assignment getConstraintsAssignment_13() { return cConstraintsAssignment_13; }
		
		//CpuConstraint
		public RuleCall getConstraintsCpuConstraintParserRuleCall_13_0() { return cConstraintsCpuConstraintParserRuleCall_13_0; }
		
		//(constraints+=MemoryConsraint)*
		public Assignment getConstraintsAssignment_14() { return cConstraintsAssignment_14; }
		
		//MemoryConsraint
		public RuleCall getConstraintsMemoryConsraintParserRuleCall_14_0() { return cConstraintsMemoryConsraintParserRuleCall_14_0; }
		
		//(constraints+=diskConstraint)*
		public Assignment getConstraintsAssignment_15() { return cConstraintsAssignment_15; }
		
		//diskConstraint
		public RuleCall getConstraintsDiskConstraintParserRuleCall_15_0() { return cConstraintsDiskConstraintParserRuleCall_15_0; }
		
		//(constraints+=Constraint)*
		public Assignment getConstraintsAssignment_16() { return cConstraintsAssignment_16; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_16_0() { return cConstraintsConstraintParserRuleCall_16_0; }
		
		//('hostingNode' ':'
		//  hostingNode=VirtualNodeType)?
		public Group getGroup_17() { return cGroup_17; }
		
		//'hostingNode'
		public Keyword getHostingNodeKeyword_17_0() { return cHostingNodeKeyword_17_0; }
		
		//':'
		public Keyword getColonKeyword_17_1() { return cColonKeyword_17_1; }
		
		//hostingNode=VirtualNodeType
		public Assignment getHostingNodeAssignment_17_2() { return cHostingNodeAssignment_17_2; }
		
		//VirtualNodeType
		public RuleCall getHostingNodeVirtualNodeTypeParserRuleCall_17_2_0() { return cHostingNodeVirtualNodeTypeParserRuleCall_17_2_0; }
		
		//'networkLinks'
		public Keyword getNetworkLinksKeyword_18() { return cNetworkLinksKeyword_18; }
		
		//':'
		public Keyword getColonKeyword_19() { return cColonKeyword_19; }
		
		//'downloadLink'
		public Keyword getDownloadLinkKeyword_20() { return cDownloadLinkKeyword_20; }
		
		//':'
		public Keyword getColonKeyword_21() { return cColonKeyword_21; }
		
		//('-' downloadLink += NetworkLinksType)*
		public Group getGroup_22() { return cGroup_22; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_22_0() { return cHyphenMinusKeyword_22_0; }
		
		//downloadLink += NetworkLinksType
		public Assignment getDownloadLinkAssignment_22_1() { return cDownloadLinkAssignment_22_1; }
		
		//NetworkLinksType
		public RuleCall getDownloadLinkNetworkLinksTypeParserRuleCall_22_1_0() { return cDownloadLinkNetworkLinksTypeParserRuleCall_22_1_0; }
		
		//'uploadLink'
		public Keyword getUploadLinkKeyword_23() { return cUploadLinkKeyword_23; }
		
		//':'
		public Keyword getColonKeyword_24() { return cColonKeyword_24; }
		
		//('-' uploadLink += NetworkLinksType)*
		public Group getGroup_25() { return cGroup_25; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_25_0() { return cHyphenMinusKeyword_25_0; }
		
		//uploadLink += NetworkLinksType
		public Assignment getUploadLinkAssignment_25_1() { return cUploadLinkAssignment_25_1; }
		
		//NetworkLinksType
		public RuleCall getUploadLinkNetworkLinksTypeParserRuleCall_25_1_0() { return cUploadLinkNetworkLinksTypeParserRuleCall_25_1_0; }
	}
	public class PhysicalNodeTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.PhysicalNodeType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Group cGroup_0 = (Group)cGroup.eContents().get(0);
		private final Keyword cMetadataKeyword_0_0 = (Keyword)cGroup_0.eContents().get(0);
		private final Keyword cColonKeyword_0_1 = (Keyword)cGroup_0.eContents().get(1);
		private final Group cGroup_0_2 = (Group)cGroup_0.eContents().get(2);
		private final Keyword cIdKeyword_0_2_0 = (Keyword)cGroup_0_2.eContents().get(0);
		private final Keyword cColonKeyword_0_2_1 = (Keyword)cGroup_0_2.eContents().get(1);
		private final Assignment cNameAssignment_0_2_2 = (Assignment)cGroup_0_2.eContents().get(2);
		private final RuleCall cNameEStringParserRuleCall_0_2_2_0 = (RuleCall)cNameAssignment_0_2_2.eContents().get(0);
		private final Keyword cTagsKeyword_0_3 = (Keyword)cGroup_0.eContents().get(3);
		private final Keyword cColonKeyword_0_4 = (Keyword)cGroup_0.eContents().get(4);
		private final Group cGroup_0_5 = (Group)cGroup_0.eContents().get(5);
		private final Keyword cHyphenMinusKeyword_0_5_0 = (Keyword)cGroup_0_5.eContents().get(0);
		private final Assignment cTagsAssignment_0_5_1 = (Assignment)cGroup_0_5.eContents().get(1);
		private final RuleCall cTagsTagParserRuleCall_0_5_1_0 = (RuleCall)cTagsAssignment_0_5_1.eContents().get(0);
		private final Keyword cSpecKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cPhysicalResourcesKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cConstraintsAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cConstraintsCpuConstraintParserRuleCall_5_0 = (RuleCall)cConstraintsAssignment_5.eContents().get(0);
		private final Assignment cConstraintsAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cConstraintsMemoryConsraintParserRuleCall_6_0 = (RuleCall)cConstraintsAssignment_6.eContents().get(0);
		private final Assignment cConstraintsAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cConstraintsDiskConstraintParserRuleCall_7_0 = (RuleCall)cConstraintsAssignment_7.eContents().get(0);
		private final Assignment cConstraintsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cConstraintsConstraintParserRuleCall_8_0 = (RuleCall)cConstraintsAssignment_8.eContents().get(0);
		private final Keyword cNetworkLinksKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cColonKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cDownloadLinkKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cColonKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Group cGroup_13 = (Group)cGroup.eContents().get(13);
		private final Keyword cHyphenMinusKeyword_13_0 = (Keyword)cGroup_13.eContents().get(0);
		private final Assignment cDownloadLinkAssignment_13_1 = (Assignment)cGroup_13.eContents().get(1);
		private final RuleCall cDownloadLinkNetworkLinksTypeParserRuleCall_13_1_0 = (RuleCall)cDownloadLinkAssignment_13_1.eContents().get(0);
		private final Keyword cUploadLinkKeyword_14 = (Keyword)cGroup.eContents().get(14);
		private final Keyword cColonKeyword_15 = (Keyword)cGroup.eContents().get(15);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cHyphenMinusKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cUploadLinkAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cUploadLinkNetworkLinksTypeParserRuleCall_16_1_0 = (RuleCall)cUploadLinkAssignment_16_1.eContents().get(0);
		
		//PhysicalNodeType returns PhysicalNodeSpecification:
		//    ('metadata' ':'
		//        ('id' ':' name=EString)?
		//        'tags' ':'
		//        ('-' tags+=Tag)*)?
		//    'Spec' ':'
		//        'physicalResources' ':'
		//        (constraints+=CpuConstraint)*
		//        (constraints+=MemoryConsraint)*
		//        (constraints+=diskConstraint)*
		//        (constraints+=Constraint)*
		//        'networkLinks' ':'
		//            'downloadLink' ':'
		//                ('-' downloadLink += NetworkLinksType)*
		//            'uploadLink' ':'
		//                ('-' uploadLink += NetworkLinksType)*
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//('metadata' ':'
		//    ('id' ':' name=EString)?
		//    'tags' ':'
		//    ('-' tags+=Tag)*)?
		//'Spec' ':'
		//    'physicalResources' ':'
		//    (constraints+=CpuConstraint)*
		//    (constraints+=MemoryConsraint)*
		//    (constraints+=diskConstraint)*
		//    (constraints+=Constraint)*
		//    'networkLinks' ':'
		//        'downloadLink' ':'
		//            ('-' downloadLink += NetworkLinksType)*
		//        'uploadLink' ':'
		//            ('-' uploadLink += NetworkLinksType)*
		public Group getGroup() { return cGroup; }
		
		//('metadata' ':'
		//    ('id' ':' name=EString)?
		//    'tags' ':'
		//    ('-' tags+=Tag)*)?
		public Group getGroup_0() { return cGroup_0; }
		
		//'metadata'
		public Keyword getMetadataKeyword_0_0() { return cMetadataKeyword_0_0; }
		
		//':'
		public Keyword getColonKeyword_0_1() { return cColonKeyword_0_1; }
		
		//('id' ':' name=EString)?
		public Group getGroup_0_2() { return cGroup_0_2; }
		
		//'id'
		public Keyword getIdKeyword_0_2_0() { return cIdKeyword_0_2_0; }
		
		//':'
		public Keyword getColonKeyword_0_2_1() { return cColonKeyword_0_2_1; }
		
		//name=EString
		public Assignment getNameAssignment_0_2_2() { return cNameAssignment_0_2_2; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_2_2_0() { return cNameEStringParserRuleCall_0_2_2_0; }
		
		//'tags'
		public Keyword getTagsKeyword_0_3() { return cTagsKeyword_0_3; }
		
		//':'
		public Keyword getColonKeyword_0_4() { return cColonKeyword_0_4; }
		
		//('-' tags+=Tag)*
		public Group getGroup_0_5() { return cGroup_0_5; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_0_5_0() { return cHyphenMinusKeyword_0_5_0; }
		
		//tags+=Tag
		public Assignment getTagsAssignment_0_5_1() { return cTagsAssignment_0_5_1; }
		
		//Tag
		public RuleCall getTagsTagParserRuleCall_0_5_1_0() { return cTagsTagParserRuleCall_0_5_1_0; }
		
		//'Spec'
		public Keyword getSpecKeyword_1() { return cSpecKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//'physicalResources'
		public Keyword getPhysicalResourcesKeyword_3() { return cPhysicalResourcesKeyword_3; }
		
		//':'
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }
		
		//(constraints+=CpuConstraint)*
		public Assignment getConstraintsAssignment_5() { return cConstraintsAssignment_5; }
		
		//CpuConstraint
		public RuleCall getConstraintsCpuConstraintParserRuleCall_5_0() { return cConstraintsCpuConstraintParserRuleCall_5_0; }
		
		//(constraints+=MemoryConsraint)*
		public Assignment getConstraintsAssignment_6() { return cConstraintsAssignment_6; }
		
		//MemoryConsraint
		public RuleCall getConstraintsMemoryConsraintParserRuleCall_6_0() { return cConstraintsMemoryConsraintParserRuleCall_6_0; }
		
		//(constraints+=diskConstraint)*
		public Assignment getConstraintsAssignment_7() { return cConstraintsAssignment_7; }
		
		//diskConstraint
		public RuleCall getConstraintsDiskConstraintParserRuleCall_7_0() { return cConstraintsDiskConstraintParserRuleCall_7_0; }
		
		//(constraints+=Constraint)*
		public Assignment getConstraintsAssignment_8() { return cConstraintsAssignment_8; }
		
		//Constraint
		public RuleCall getConstraintsConstraintParserRuleCall_8_0() { return cConstraintsConstraintParserRuleCall_8_0; }
		
		//'networkLinks'
		public Keyword getNetworkLinksKeyword_9() { return cNetworkLinksKeyword_9; }
		
		//':'
		public Keyword getColonKeyword_10() { return cColonKeyword_10; }
		
		//'downloadLink'
		public Keyword getDownloadLinkKeyword_11() { return cDownloadLinkKeyword_11; }
		
		//':'
		public Keyword getColonKeyword_12() { return cColonKeyword_12; }
		
		//('-' downloadLink += NetworkLinksType)*
		public Group getGroup_13() { return cGroup_13; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_13_0() { return cHyphenMinusKeyword_13_0; }
		
		//downloadLink += NetworkLinksType
		public Assignment getDownloadLinkAssignment_13_1() { return cDownloadLinkAssignment_13_1; }
		
		//NetworkLinksType
		public RuleCall getDownloadLinkNetworkLinksTypeParserRuleCall_13_1_0() { return cDownloadLinkNetworkLinksTypeParserRuleCall_13_1_0; }
		
		//'uploadLink'
		public Keyword getUploadLinkKeyword_14() { return cUploadLinkKeyword_14; }
		
		//':'
		public Keyword getColonKeyword_15() { return cColonKeyword_15; }
		
		//('-' uploadLink += NetworkLinksType)*
		public Group getGroup_16() { return cGroup_16; }
		
		//'-'
		public Keyword getHyphenMinusKeyword_16_0() { return cHyphenMinusKeyword_16_0; }
		
		//uploadLink += NetworkLinksType
		public Assignment getUploadLinkAssignment_16_1() { return cUploadLinkAssignment_16_1; }
		
		//NetworkLinksType
		public RuleCall getUploadLinkNetworkLinksTypeParserRuleCall_16_1_0() { return cUploadLinkNetworkLinksTypeParserRuleCall_16_1_0; }
	}
	public class ReplicasConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ReplicasConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionReplicasAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_0_0 = (RuleCall)cExpressionAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cExpressionAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0 = (RuleCall)cExpressionAssignment_3_1_2.eContents().get(0);
		
		//ReplicasConstraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=ReplicasAttributeExpression ':'
		//    (
		//        expression+=IntegerValueExpression |
		//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=ReplicasAttributeExpression ':'
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=ReplicasAttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//ReplicasAttributeExpression
		public RuleCall getExpressionReplicasAttributeExpressionParserRuleCall_1_0() { return cExpressionReplicasAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_0() { return cExpressionAssignment_3_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_0_0; }
		
		//operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_1_2() { return cExpressionAssignment_3_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0; }
	}
	public class RuntimesConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.RuntimesConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionRuntimesAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Group cGroup_3_0 = (Group)cAlternatives_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_0_0 = (Keyword)cGroup_3_0.eContents().get(0);
		private final Assignment cExpressionAssignment_3_0_1 = (Assignment)cGroup_3_0.eContents().get(1);
		private final RuleCall cExpressionCustomExpressionParserRuleCall_3_0_1_0 = (RuleCall)cExpressionAssignment_3_0_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_0_2 = (Keyword)cGroup_3_0.eContents().get(2);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_3_1_2 = (Keyword)cGroup_3_1.eContents().get(2);
		private final Assignment cExpressionAssignment_3_1_3 = (Assignment)cGroup_3_1.eContents().get(3);
		private final RuleCall cExpressionCustomExpressionParserRuleCall_3_1_3_0 = (RuleCall)cExpressionAssignment_3_1_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_1_4 = (Keyword)cGroup_3_1.eContents().get(4);
		
		//RuntimesConstraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=RuntimesAttributeExpression ':'
		//    (
		//        '{' expression+=CustomExpression '}' |
		//        operator=ComparaisonOperator ':' '{' expression+=CustomExpression '}'
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=RuntimesAttributeExpression ':'
		//(
		//    '{' expression+=CustomExpression '}' |
		//    operator=ComparaisonOperator ':' '{' expression+=CustomExpression '}'
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=RuntimesAttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//RuntimesAttributeExpression
		public RuleCall getExpressionRuntimesAttributeExpressionParserRuleCall_1_0() { return cExpressionRuntimesAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    '{' expression+=CustomExpression '}' |
		//    operator=ComparaisonOperator ':' '{' expression+=CustomExpression '}'
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//'{' expression+=CustomExpression '}'
		public Group getGroup_3_0() { return cGroup_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_0_0() { return cLeftCurlyBracketKeyword_3_0_0; }
		
		//expression+=CustomExpression
		public Assignment getExpressionAssignment_3_0_1() { return cExpressionAssignment_3_0_1; }
		
		//CustomExpression
		public RuleCall getExpressionCustomExpressionParserRuleCall_3_0_1_0() { return cExpressionCustomExpressionParserRuleCall_3_0_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_0_2() { return cRightCurlyBracketKeyword_3_0_2; }
		
		//operator=ComparaisonOperator ':' '{' expression+=CustomExpression '}'
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1_2() { return cLeftCurlyBracketKeyword_3_1_2; }
		
		//expression+=CustomExpression
		public Assignment getExpressionAssignment_3_1_3() { return cExpressionAssignment_3_1_3; }
		
		//CustomExpression
		public RuleCall getExpressionCustomExpressionParserRuleCall_3_1_3_0() { return cExpressionCustomExpressionParserRuleCall_3_1_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_1_4() { return cRightCurlyBracketKeyword_3_1_4; }
	}
	public class CustomExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.CustomExpression");
		private final Assignment cExpressionAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cExpressionSTRINGTerminalRuleCall_0 = (RuleCall)cExpressionAssignment.eContents().get(0);
		
		//CustomExpression returns CustomExpression:
		//    expression=STRING
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//expression=STRING
		public Assignment getExpressionAssignment() { return cExpressionAssignment; }
		
		//STRING
		public RuleCall getExpressionSTRINGTerminalRuleCall_0() { return cExpressionSTRINGTerminalRuleCall_0; }
	}
	public class DiskConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.diskConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionDiskAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_0_0 = (RuleCall)cExpressionAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cExpressionAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0 = (RuleCall)cExpressionAssignment_3_1_2.eContents().get(0);
		
		//diskConstraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=DiskAttributeExpression ':'
		//    (
		//        expression+=IntegerValueExpression |
		//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=DiskAttributeExpression ':'
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=DiskAttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//DiskAttributeExpression
		public RuleCall getExpressionDiskAttributeExpressionParserRuleCall_1_0() { return cExpressionDiskAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_0() { return cExpressionAssignment_3_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_0_0; }
		
		//operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_1_2() { return cExpressionAssignment_3_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0; }
	}
	public class MemoryConsraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.MemoryConsraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionMemoryAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_0_0 = (RuleCall)cExpressionAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cExpressionAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0 = (RuleCall)cExpressionAssignment_3_1_2.eContents().get(0);
		
		//MemoryConsraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=MemoryAttributeExpression ':'
		//    (
		//        expression+=IntegerValueExpression |
		//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=MemoryAttributeExpression ':'
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=MemoryAttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//MemoryAttributeExpression
		public RuleCall getExpressionMemoryAttributeExpressionParserRuleCall_1_0() { return cExpressionMemoryAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_0() { return cExpressionAssignment_3_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_0_0; }
		
		//operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_1_2() { return cExpressionAssignment_3_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0; }
	}
	public class CpuConstraintElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.CpuConstraint");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cConstraintAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cExpressionAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cExpressionCpuAttributeExpressionParserRuleCall_1_0 = (RuleCall)cExpressionAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Alternatives cAlternatives_3 = (Alternatives)cGroup.eContents().get(3);
		private final Assignment cExpressionAssignment_3_0 = (Assignment)cAlternatives_3.eContents().get(0);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_0_0 = (RuleCall)cExpressionAssignment_3_0.eContents().get(0);
		private final Group cGroup_3_1 = (Group)cAlternatives_3.eContents().get(1);
		private final Assignment cOperatorAssignment_3_1_0 = (Assignment)cGroup_3_1.eContents().get(0);
		private final RuleCall cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0 = (RuleCall)cOperatorAssignment_3_1_0.eContents().get(0);
		private final Keyword cColonKeyword_3_1_1 = (Keyword)cGroup_3_1.eContents().get(1);
		private final Assignment cExpressionAssignment_3_1_2 = (Assignment)cGroup_3_1.eContents().get(2);
		private final RuleCall cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0 = (RuleCall)cExpressionAssignment_3_1_2.eContents().get(0);
		
		//CpuConstraint returns Constraint:
		//    {Constraint}
		//    //operator='Lesser' because is defined as default in the ecore model
		//    expression+=CpuAttributeExpression ':'
		//    (
		//        expression+=IntegerValueExpression |
		//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//    )
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{Constraint}
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=CpuAttributeExpression ':'
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Group getGroup() { return cGroup; }
		
		//{Constraint}
		public Action getConstraintAction_0() { return cConstraintAction_0; }
		
		////operator='Lesser' because is defined as default in the ecore model
		//expression+=CpuAttributeExpression
		public Assignment getExpressionAssignment_1() { return cExpressionAssignment_1; }
		
		//CpuAttributeExpression
		public RuleCall getExpressionCpuAttributeExpressionParserRuleCall_1_0() { return cExpressionCpuAttributeExpressionParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//(
		//    expression+=IntegerValueExpression |
		//    operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		//)
		public Alternatives getAlternatives_3() { return cAlternatives_3; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_0() { return cExpressionAssignment_3_0; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_0_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_0_0; }
		
		//operator=ComparaisonOperator ':' expression+=IntegerValueExpression
		public Group getGroup_3_1() { return cGroup_3_1; }
		
		//operator=ComparaisonOperator
		public Assignment getOperatorAssignment_3_1_0() { return cOperatorAssignment_3_1_0; }
		
		//ComparaisonOperator
		public RuleCall getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0() { return cOperatorComparaisonOperatorEnumRuleCall_3_1_0_0; }
		
		//':'
		public Keyword getColonKeyword_3_1_1() { return cColonKeyword_3_1_1; }
		
		//expression+=IntegerValueExpression
		public Assignment getExpressionAssignment_3_1_2() { return cExpressionAssignment_3_1_2; }
		
		//IntegerValueExpression
		public RuleCall getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0() { return cExpressionIntegerValueExpressionParserRuleCall_3_1_2_0; }
	}
	public class IntegerValueExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.IntegerValueExpression");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueINTTerminalRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//IntegerValueExpression returns IntegerValueExpression:
		//    value=INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=INT
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//INT
		public RuleCall getValueINTTerminalRuleCall_0() { return cValueINTTerminalRuleCall_0; }
	}
	public class ReplicasAttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ReplicasAttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameReplicasKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//ReplicasAttributeExpression returns AttributeExpression:
		//    attributeName='replicas'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='replicas'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'replicas'
		public Keyword getAttributeNameReplicasKeyword_0() { return cAttributeNameReplicasKeyword_0; }
	}
	public class RuntimesAttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.RuntimesAttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameRuntimesKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//RuntimesAttributeExpression returns AttributeExpression:
		//    attributeName='runtimes'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='runtimes'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'runtimes'
		public Keyword getAttributeNameRuntimesKeyword_0() { return cAttributeNameRuntimesKeyword_0; }
	}
	public class DiskAttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.DiskAttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameDiskStorageKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//DiskAttributeExpression returns AttributeExpression:
		//    attributeName='diskStorage'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='diskStorage'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'diskStorage'
		public Keyword getAttributeNameDiskStorageKeyword_0() { return cAttributeNameDiskStorageKeyword_0; }
	}
	public class MemoryAttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.MemoryAttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameMemoryKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//MemoryAttributeExpression returns AttributeExpression:
		//    attributeName='memory'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='memory'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'memory'
		public Keyword getAttributeNameMemoryKeyword_0() { return cAttributeNameMemoryKeyword_0; }
	}
	public class CpuAttributeExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.CpuAttributeExpression");
		private final Assignment cAttributeNameAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cAttributeNameCpuCoresKeyword_0 = (Keyword)cAttributeNameAssignment.eContents().get(0);
		
		//CpuAttributeExpression returns AttributeExpression:
		//    attributeName='CpuCores'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//attributeName='CpuCores'
		public Assignment getAttributeNameAssignment() { return cAttributeNameAssignment; }
		
		//'CpuCores'
		public Keyword getAttributeNameCpuCoresKeyword_0() { return cAttributeNameCpuCoresKeyword_0; }
	}
	public class ValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.Value");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cINTTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//Value:
		//    STRING | INT
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | INT
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//INT
		public RuleCall getINTTerminalRuleCall_1() { return cINTTerminalRuleCall_1; }
	}
	public class TagElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.Tag");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cKeyAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cKeyIDTerminalRuleCall_0_0 = (RuleCall)cKeyAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueIDTerminalRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		
		//Tag returns Tag:
		//    key=ID ':' value=ID
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//key=ID ':' value=ID
		public Group getGroup() { return cGroup; }
		
		//key=ID
		public Assignment getKeyAssignment_0() { return cKeyAssignment_0; }
		
		//ID
		public RuleCall getKeyIDTerminalRuleCall_0_0() { return cKeyIDTerminalRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//value=ID
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//ID
		public RuleCall getValueIDTerminalRuleCall_2_0() { return cValueIDTerminalRuleCall_2_0; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	
	public class MultiplicityOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.MultiplicityOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cAllOfEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cAllOfAllOfKeyword_0_0 = (Keyword)cAllOfEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cAllOfEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cAllOfAnyOfKeyword_1_0 = (Keyword)cAllOfEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cExclusivelyOneOfEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cExclusivelyOneOfExclusivelyOneOfKeyword_2_0 = (Keyword)cExclusivelyOneOfEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum MultiplicityOperator returns MultiplicityOperator:
		//    AllOf='allOf' |  AllOf='anyOf' | ExclusivelyOneOf='exclusivelyOneOf'
		//;
		public EnumRule getRule() { return rule; }
		
		//AllOf='allOf' |  AllOf='anyOf' | ExclusivelyOneOf='exclusivelyOneOf'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//AllOf='allOf'
		public EnumLiteralDeclaration getAllOfEnumLiteralDeclaration_0() { return cAllOfEnumLiteralDeclaration_0; }
		
		//'allOf'
		public Keyword getAllOfAllOfKeyword_0_0() { return cAllOfAllOfKeyword_0_0; }
		
		//AllOf='anyOf'
		public EnumLiteralDeclaration getAllOfEnumLiteralDeclaration_1() { return cAllOfEnumLiteralDeclaration_1; }
		
		//'anyOf'
		public Keyword getAllOfAnyOfKeyword_1_0() { return cAllOfAnyOfKeyword_1_0; }
		
		//ExclusivelyOneOf='exclusivelyOneOf'
		public EnumLiteralDeclaration getExclusivelyOneOfEnumLiteralDeclaration_2() { return cExclusivelyOneOfEnumLiteralDeclaration_2; }
		
		//'exclusivelyOneOf'
		public Keyword getExclusivelyOneOfExclusivelyOneOfKeyword_2_0() { return cExclusivelyOneOfExclusivelyOneOfKeyword_2_0; }
	}
	public class TransportProtocolElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.TransportProtocol");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cTCPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cTCPTCPKeyword_0_0 = (Keyword)cTCPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cUDPEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cUDPUDPKeyword_1_0 = (Keyword)cUDPEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum TransportProtocol returns TransportProtocol:
		//    TCP='TCP' | UDP='UDP'
		//;
		public EnumRule getRule() { return rule; }
		
		//TCP='TCP' | UDP='UDP'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//TCP='TCP'
		public EnumLiteralDeclaration getTCPEnumLiteralDeclaration_0() { return cTCPEnumLiteralDeclaration_0; }
		
		//'TCP'
		public Keyword getTCPTCPKeyword_0_0() { return cTCPTCPKeyword_0_0; }
		
		//UDP='UDP'
		public EnumLiteralDeclaration getUDPEnumLiteralDeclaration_1() { return cUDPEnumLiteralDeclaration_1; }
		
		//'UDP'
		public Keyword getUDPUDPKeyword_1_0() { return cUDPUDPKeyword_1_0; }
	}
	public class NetworkClassEnumElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.NetworkClassEnum");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cEthernetEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cEthernetEthernetKeyword_0_0 = (Keyword)cEthernetEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cWifiEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cWifiWifiKeyword_1_0 = (Keyword)cWifiEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cBluetoothEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cBluetoothBluetoothKeyword_2_0 = (Keyword)cBluetoothEnumLiteralDeclaration_2.eContents().get(0);
		
		//enum NetworkClassEnum returns NetworkClass:
		//    Ethernet='Ethernet' | Wifi='Wifi' | Bluetooth='Bluetooth'
		//;
		public EnumRule getRule() { return rule; }
		
		//Ethernet='Ethernet' | Wifi='Wifi' | Bluetooth='Bluetooth'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Ethernet='Ethernet'
		public EnumLiteralDeclaration getEthernetEnumLiteralDeclaration_0() { return cEthernetEnumLiteralDeclaration_0; }
		
		//'Ethernet'
		public Keyword getEthernetEthernetKeyword_0_0() { return cEthernetEthernetKeyword_0_0; }
		
		//Wifi='Wifi'
		public EnumLiteralDeclaration getWifiEnumLiteralDeclaration_1() { return cWifiEnumLiteralDeclaration_1; }
		
		//'Wifi'
		public Keyword getWifiWifiKeyword_1_0() { return cWifiWifiKeyword_1_0; }
		
		//Bluetooth='Bluetooth'
		public EnumLiteralDeclaration getBluetoothEnumLiteralDeclaration_2() { return cBluetoothEnumLiteralDeclaration_2; }
		
		//'Bluetooth'
		public Keyword getBluetoothBluetoothKeyword_2_0() { return cBluetoothBluetoothKeyword_2_0; }
	}
	public class HealthStatusElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.HealthStatus");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cUPEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cUPUpKeyword_0_0 = (Keyword)cUPEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cDOWNEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cDOWNDownKeyword_1_0 = (Keyword)cDOWNEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum HealthStatus returns HealthStatus:
		//    UP='up' | DOWN='down'
		//;
		public EnumRule getRule() { return rule; }
		
		//UP='up' | DOWN='down'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//UP='up'
		public EnumLiteralDeclaration getUPEnumLiteralDeclaration_0() { return cUPEnumLiteralDeclaration_0; }
		
		//'up'
		public Keyword getUPUpKeyword_0_0() { return cUPUpKeyword_0_0; }
		
		//DOWN='down'
		public EnumLiteralDeclaration getDOWNEnumLiteralDeclaration_1() { return cDOWNEnumLiteralDeclaration_1; }
		
		//'down'
		public Keyword getDOWNDownKeyword_1_0() { return cDOWNDownKeyword_1_0; }
	}
	public class CpuArchitectureElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.CpuArchitecture");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cIntelEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cIntelIntelKeyword_0_0 = (Keyword)cIntelEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cARMEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cARMARMKeyword_1_0 = (Keyword)cARMEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum CpuArchitecture returns CPUArchitecture:
		//    Intel='Intel' | ARM='ARM'
		//;
		public EnumRule getRule() { return rule; }
		
		//Intel='Intel' | ARM='ARM'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Intel='Intel'
		public EnumLiteralDeclaration getIntelEnumLiteralDeclaration_0() { return cIntelEnumLiteralDeclaration_0; }
		
		//'Intel'
		public Keyword getIntelIntelKeyword_0_0() { return cIntelIntelKeyword_0_0; }
		
		//ARM='ARM'
		public EnumLiteralDeclaration getARMEnumLiteralDeclaration_1() { return cARMEnumLiteralDeclaration_1; }
		
		//'ARM'
		public Keyword getARMARMKeyword_1_0() { return cARMARMKeyword_1_0; }
	}
	public class ComparaisonOperatorElements extends AbstractElementFinder.AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "fr.imta.semafor.FogDsl.ComparaisonOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLesserEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLesserLesserKeyword_0_0 = (Keyword)cLesserEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cGreaterGreaterKeyword_1_0 = (Keyword)cGreaterEnumLiteralDeclaration_1.eContents().get(0);
		private final EnumLiteralDeclaration cEqualEnumLiteralDeclaration_2 = (EnumLiteralDeclaration)cAlternatives.eContents().get(2);
		private final Keyword cEqualEqualKeyword_2_0 = (Keyword)cEqualEnumLiteralDeclaration_2.eContents().get(0);
		private final EnumLiteralDeclaration cLesserOrEqualEnumLiteralDeclaration_3 = (EnumLiteralDeclaration)cAlternatives.eContents().get(3);
		private final Keyword cLesserOrEqualLesserOrEqualKeyword_3_0 = (Keyword)cLesserOrEqualEnumLiteralDeclaration_3.eContents().get(0);
		private final EnumLiteralDeclaration cGreaterOrEqualEnumLiteralDeclaration_4 = (EnumLiteralDeclaration)cAlternatives.eContents().get(4);
		private final Keyword cGreaterOrEqualGreaterOrEqualKeyword_4_0 = (Keyword)cGreaterOrEqualEnumLiteralDeclaration_4.eContents().get(0);
		
		//enum ComparaisonOperator:
		//    Lesser='Lesser' | Greater='Greater' | Equal='Equal' | LesserOrEqual = 'LesserOrEqual' | GreaterOrEqual='GreaterOrEqual'
		//;
		public EnumRule getRule() { return rule; }
		
		//Lesser='Lesser' | Greater='Greater' | Equal='Equal' | LesserOrEqual = 'LesserOrEqual' | GreaterOrEqual='GreaterOrEqual'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//Lesser='Lesser'
		public EnumLiteralDeclaration getLesserEnumLiteralDeclaration_0() { return cLesserEnumLiteralDeclaration_0; }
		
		//'Lesser'
		public Keyword getLesserLesserKeyword_0_0() { return cLesserLesserKeyword_0_0; }
		
		//Greater='Greater'
		public EnumLiteralDeclaration getGreaterEnumLiteralDeclaration_1() { return cGreaterEnumLiteralDeclaration_1; }
		
		//'Greater'
		public Keyword getGreaterGreaterKeyword_1_0() { return cGreaterGreaterKeyword_1_0; }
		
		//Equal='Equal'
		public EnumLiteralDeclaration getEqualEnumLiteralDeclaration_2() { return cEqualEnumLiteralDeclaration_2; }
		
		//'Equal'
		public Keyword getEqualEqualKeyword_2_0() { return cEqualEqualKeyword_2_0; }
		
		//LesserOrEqual = 'LesserOrEqual'
		public EnumLiteralDeclaration getLesserOrEqualEnumLiteralDeclaration_3() { return cLesserOrEqualEnumLiteralDeclaration_3; }
		
		//'LesserOrEqual'
		public Keyword getLesserOrEqualLesserOrEqualKeyword_3_0() { return cLesserOrEqualLesserOrEqualKeyword_3_0; }
		
		//GreaterOrEqual='GreaterOrEqual'
		public EnumLiteralDeclaration getGreaterOrEqualEnumLiteralDeclaration_4() { return cGreaterOrEqualEnumLiteralDeclaration_4; }
		
		//'GreaterOrEqual'
		public Keyword getGreaterOrEqualGreaterOrEqualKeyword_4_0() { return cGreaterOrEqualGreaterOrEqualKeyword_4_0; }
	}
	
	private final FogResourceElements pFogResource;
	private final VirtualNodeElements pVirtualNode;
	private final FogSystemElements pFogSystem;
	private final FogAreaElements pFogArea;
	private final AttributeTypeElements pAttributeType;
	private final PhysicalNodeElements pPhysicalNode;
	private final AttributeValueUnitElements pAttributeValueUnit;
	private final ApplicationElements pApplication;
	private final ConnectorTypeElements pConnectorType;
	private final SerivceTypeElements pSerivceType;
	private final SoftwarePackageElements pSoftwarePackage;
	private final PortsConstraintElements pPortsConstraint;
	private final MultiplicityExpressionElements pMultiplicityExpression;
	private final MultiplicityOperatorElements eMultiplicityOperator;
	private final PortsExpressionElements pPortsExpression;
	private final NetworkPortElements pNetworkPort;
	private final TransportProtocolElements eTransportProtocol;
	private final NetworkTypeElements pNetworkType;
	private final ConstraintElements pConstraint;
	private final AttributeExpressionElements pAttributeExpression;
	private final NetworkLinksTypeElements pNetworkLinksType;
	private final NetworkClassConstraintElements pNetworkClassConstraint;
	private final NetworkClassEnumExpressionElements pNetworkClassEnumExpression;
	private final NetworkClassEnumElements eNetworkClassEnum;
	private final NetworkClassExpressionElements pNetworkClassExpression;
	private final BandwidthConstraintElements pBandwidthConstraint;
	private final BandwidthExpressionElements pBandwidthExpression;
	private final IpRangeConstraintElements pIpRangeConstraint;
	private final RangeExpressionElements pRangeExpression;
	private final IpRangeExpressionElements pIpRangeExpression;
	private final IpAddressElements pIpAddress;
	private final VirtualNodeTypeElements pVirtualNodeType;
	private final HealthStatusElements eHealthStatus;
	private final CpuArchitectureElements eCpuArchitecture;
	private final PhysicalNodeTypeElements pPhysicalNodeType;
	private final ReplicasConstraintElements pReplicasConstraint;
	private final RuntimesConstraintElements pRuntimesConstraint;
	private final CustomExpressionElements pCustomExpression;
	private final DiskConstraintElements pDiskConstraint;
	private final MemoryConsraintElements pMemoryConsraint;
	private final CpuConstraintElements pCpuConstraint;
	private final IntegerValueExpressionElements pIntegerValueExpression;
	private final ReplicasAttributeExpressionElements pReplicasAttributeExpression;
	private final RuntimesAttributeExpressionElements pRuntimesAttributeExpression;
	private final DiskAttributeExpressionElements pDiskAttributeExpression;
	private final MemoryAttributeExpressionElements pMemoryAttributeExpression;
	private final CpuAttributeExpressionElements pCpuAttributeExpression;
	private final ComparaisonOperatorElements eComparaisonOperator;
	private final ValueElements pValue;
	private final TagElements pTag;
	private final EStringElements pEString;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public FogDslGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pFogResource = new FogResourceElements();
		this.pVirtualNode = new VirtualNodeElements();
		this.pFogSystem = new FogSystemElements();
		this.pFogArea = new FogAreaElements();
		this.pAttributeType = new AttributeTypeElements();
		this.pPhysicalNode = new PhysicalNodeElements();
		this.pAttributeValueUnit = new AttributeValueUnitElements();
		this.pApplication = new ApplicationElements();
		this.pConnectorType = new ConnectorTypeElements();
		this.pSerivceType = new SerivceTypeElements();
		this.pSoftwarePackage = new SoftwarePackageElements();
		this.pPortsConstraint = new PortsConstraintElements();
		this.pMultiplicityExpression = new MultiplicityExpressionElements();
		this.eMultiplicityOperator = new MultiplicityOperatorElements();
		this.pPortsExpression = new PortsExpressionElements();
		this.pNetworkPort = new NetworkPortElements();
		this.eTransportProtocol = new TransportProtocolElements();
		this.pNetworkType = new NetworkTypeElements();
		this.pConstraint = new ConstraintElements();
		this.pAttributeExpression = new AttributeExpressionElements();
		this.pNetworkLinksType = new NetworkLinksTypeElements();
		this.pNetworkClassConstraint = new NetworkClassConstraintElements();
		this.pNetworkClassEnumExpression = new NetworkClassEnumExpressionElements();
		this.eNetworkClassEnum = new NetworkClassEnumElements();
		this.pNetworkClassExpression = new NetworkClassExpressionElements();
		this.pBandwidthConstraint = new BandwidthConstraintElements();
		this.pBandwidthExpression = new BandwidthExpressionElements();
		this.pIpRangeConstraint = new IpRangeConstraintElements();
		this.pRangeExpression = new RangeExpressionElements();
		this.pIpRangeExpression = new IpRangeExpressionElements();
		this.pIpAddress = new IpAddressElements();
		this.pVirtualNodeType = new VirtualNodeTypeElements();
		this.eHealthStatus = new HealthStatusElements();
		this.eCpuArchitecture = new CpuArchitectureElements();
		this.pPhysicalNodeType = new PhysicalNodeTypeElements();
		this.pReplicasConstraint = new ReplicasConstraintElements();
		this.pRuntimesConstraint = new RuntimesConstraintElements();
		this.pCustomExpression = new CustomExpressionElements();
		this.pDiskConstraint = new DiskConstraintElements();
		this.pMemoryConsraint = new MemoryConsraintElements();
		this.pCpuConstraint = new CpuConstraintElements();
		this.pIntegerValueExpression = new IntegerValueExpressionElements();
		this.pReplicasAttributeExpression = new ReplicasAttributeExpressionElements();
		this.pRuntimesAttributeExpression = new RuntimesAttributeExpressionElements();
		this.pDiskAttributeExpression = new DiskAttributeExpressionElements();
		this.pMemoryAttributeExpression = new MemoryAttributeExpressionElements();
		this.pCpuAttributeExpression = new CpuAttributeExpressionElements();
		this.eComparaisonOperator = new ComparaisonOperatorElements();
		this.pValue = new ValueElements();
		this.pTag = new TagElements();
		this.pEString = new EStringElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("fr.imta.semafor.FogDsl".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//FogResource returns FogResource:
	//    'ApiVersion' ':' 'v.0.1'
	//    (
	//        (
	//        'resourceType' ':' 'FogArea'
	//            ( fogArea)
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'FogSystem'
	//            ( fogSystem)
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'PhysicalNode'
	//            ( PhysicalNodeType | PhysicalNode)
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'VirtualNode'
	//            ( VirtualNodeType | VirtualNode)
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'Network'
	//            ( NetworkType )
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'Service'
	//            ( SerivceType )
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'Application'
	//            ( Application )
	//        )
	//        |
	//        (
	//        'resourceType' ':' 'Attribute'
	//            ( AttributeType )
	//        )
	//    )
	//    ;
	public FogResourceElements getFogResourceAccess() {
		return pFogResource;
	}
	
	public ParserRule getFogResourceRule() {
		return getFogResourceAccess().getRule();
	}
	
	//VirtualNode returns VirtualNode:
	//        'metadata' ':'
	//        ('id' ':' name=ID)?
	//        'tags' ':'
	//            ('-' tags+=Tag)*
	//        'instanceOf' ':' isInstanceOf=[VirtualNodeSpecification]
	//        'status' ':'
	//        'hostedOn' ':' hostingNode=[Node]
	//        'hosts' ':'
	//            ('-' hostedVirtualNodes+=[VirtualNode])*
	//        (attributes +=AttributeValueUnit)*
	//;
	public VirtualNodeElements getVirtualNodeAccess() {
		return pVirtualNode;
	}
	
	public ParserRule getVirtualNodeRule() {
		return getVirtualNodeAccess().getRule();
	}
	
	//fogSystem returns FogSystem:
	//    'name' ':' name=EString
	////    'fogAreas' ':'
	////    ('-' fogareas+=fogArea)
	//;
	public FogSystemElements getFogSystemAccess() {
		return pFogSystem;
	}
	
	public ParserRule getFogSystemRule() {
		return getFogSystemAccess().getRule();
	}
	
	//fogArea returns FogArea:
	//        'name' ':' name=EString
	//        'fogSystem' ':' fogsystem=[FogSystem]
	//;
	public FogAreaElements getFogAreaAccess() {
		return pFogArea;
	}
	
	public ParserRule getFogAreaRule() {
		return getFogAreaAccess().getRule();
	}
	
	//AttributeType returns AttributeType:
	//    'name' ':' name=EString
	//    'type' ':' valueType=EString
	//    ('unitOfMeasurment' ':'
	//        ('-'unitofmeasurment+=[UnitOfMeasurment])*
	//    )?
	//;
	public AttributeTypeElements getAttributeTypeAccess() {
		return pAttributeType;
	}
	
	public ParserRule getAttributeTypeRule() {
		return getAttributeTypeAccess().getRule();
	}
	
	//PhysicalNode returns PhysicalNode:
	//        'metadata' ':'
	//        ('id' ':' name=ID)?
	//        'fogArea' ':' fogarea=[FogArea]
	//        'tags' ':'
	//            ('-' tags+=Tag)*
	//        'instanceOf' ':' isInstanceOf=[PhysicalNodeSpecification]
	//        'status' ':'
	//        'hosts' ':'
	//            ('-' hostedVirtualNodes+=[VirtualNode])*
	//        (attributes +=AttributeValueUnit)*
	//;
	public PhysicalNodeElements getPhysicalNodeAccess() {
		return pPhysicalNode;
	}
	
	public ParserRule getPhysicalNodeRule() {
		return getPhysicalNodeAccess().getRule();
	}
	
	//AttributeValueUnit returns Attribute:
	//    instanceOf=[AttributeType] ':' value=Value    //unitofmeasurment=[UnitOfMeasurment]
	//;
	public AttributeValueUnitElements getAttributeValueUnitAccess() {
		return pAttributeValueUnit;
	}
	
	public ParserRule getAttributeValueUnitRule() {
		return getAttributeValueUnitAccess().getRule();
	}
	
	//Application returns Application:
	//    'metadata' ':'
	//        ('id' ':' name=ID)?
	//        'tags' ':'
	//            ('-' tags+=Tag)*
	//    'Spec' ':'
	//        'services' ':'
	//            ('-' EString ':'
	//                (serviceTypes+=SerivceType)?
	//            )*
	//        'connectors' ':'
	//            ('-'
	//                connectortypes+=ConnectorType
	//            )*
	//;
	public ApplicationElements getApplicationAccess() {
		return pApplication;
	}
	
	public ParserRule getApplicationRule() {
		return getApplicationAccess().getRule();
	}
	
	//ConnectorType returns ConnectorType:
	//    name=ID ':'
	////    'importServices' ':'
	////    ('-' importedNamespace=EString)
	//    'sourceServices' ':'
	//    ('-' sourceServices+=[ServiceType|ID])*
	//    'targetServices' ':'
	//    ('-' targetServices+=[ServiceType|ID])*
	//    'constraints' ':'
	//        ('-' constraints+=Constraint)*
	//;
	public ConnectorTypeElements getConnectorTypeAccess() {
		return pConnectorType;
	}
	
	public ParserRule getConnectorTypeRule() {
		return getConnectorTypeAccess().getRule();
	}
	
	//SerivceType returns ServiceType:
	//    'metadata' ':'
	//        ('id' ':' name=ID)?
	//        'tags' ':'
	//            ('-' tags+=Tag)*
	//    'Spec' ':'
	////        'ports' ':'
	//            ((constraints+=PortsConstraint //specify allOf, anyOf or ExculsivelyOneOf
	//                ('-' networkPorts+=NetworkPort)*
	//            )  |
	//            ('networkPorts' ':'
	//                ('-' networkPorts+=NetworkPort)*    //Default is allOf
	//            ))
	////
	//        'hostedOn' ':'
	//            ('virtualNodes' ':'
	//            ('-' EString)
	//            ('-' EString)*)?
	//            ('softwarePacakge' ':'
	//                '-' implementedBy+=SoftwarePackage
	//                ('-' implementedBy+=SoftwarePackage)*)?
	//        ('constraints' ':' constraints+=Constraint)*
	//;
	public SerivceTypeElements getSerivceTypeAccess() {
		return pSerivceType;
	}
	
	public ParserRule getSerivceTypeRule() {
		return getSerivceTypeAccess().getRule();
	}
	
	//SoftwarePackage returns SoftwarePackage:
	//    name=ID ':'
	//    'command' ':' installStartScript=EString
	//    'constraints' ':'
	//    ('-' constraints += ReplicasConstraint)*
	//;
	public SoftwarePackageElements getSoftwarePackageAccess() {
		return pSoftwarePackage;
	}
	
	public ParserRule getSoftwarePackageRule() {
		return getSoftwarePackageAccess().getRule();
	}
	
	//PortsConstraint returns Constraint:
	//    {Constraint}
	//    expression+=portsExpression ':'
	//    expression+=MultiplicityExpression ':'
	//;
	public PortsConstraintElements getPortsConstraintAccess() {
		return pPortsConstraint;
	}
	
	public ParserRule getPortsConstraintRule() {
		return getPortsConstraintAccess().getRule();
	}
	
	//MultiplicityExpression returns MultiplicityExpression:
	//    multiplicityOperator=MultiplicityOperator
	//;
	public MultiplicityExpressionElements getMultiplicityExpressionAccess() {
		return pMultiplicityExpression;
	}
	
	public ParserRule getMultiplicityExpressionRule() {
		return getMultiplicityExpressionAccess().getRule();
	}
	
	//enum MultiplicityOperator returns MultiplicityOperator:
	//    AllOf='allOf' |  AllOf='anyOf' | ExclusivelyOneOf='exclusivelyOneOf'
	//;
	public MultiplicityOperatorElements getMultiplicityOperatorAccess() {
		return eMultiplicityOperator;
	}
	
	public EnumRule getMultiplicityOperatorRule() {
		return getMultiplicityOperatorAccess().getRule();
	}
	
	//portsExpression returns AttributeExpression:
	//    attributeName='networkPort'
	//;
	public PortsExpressionElements getPortsExpressionAccess() {
		return pPortsExpression;
	}
	
	public ParserRule getPortsExpressionRule() {
		return getPortsExpressionAccess().getRule();
	}
	
	//NetworkPort returns NetworkPort:
	//    portName=STRING ':'
	//    'protocol' ':' protocol=TransportProtocol
	//    'portNumber' ':' portNumber=INT
	//    'hostPort' ':' hostPort=INT
	//;
	public NetworkPortElements getNetworkPortAccess() {
		return pNetworkPort;
	}
	
	public ParserRule getNetworkPortRule() {
		return getNetworkPortAccess().getRule();
	}
	
	//enum TransportProtocol returns TransportProtocol:
	//    TCP='TCP' | UDP='UDP'
	//;
	public TransportProtocolElements getTransportProtocolAccess() {
		return eTransportProtocol;
	}
	
	public EnumRule getTransportProtocolRule() {
		return getTransportProtocolAccess().getRule();
	}
	
	//NetworkType returns NetworkType:
	//    'metadata' ':'
	//        ('id' ':' name=ID)?
	//        'tags' ':'
	//            ('-' tags+=Tag)*
	//    'Spec' ':'
	//        'constraints' ':'
	//            ('-' constraints += (Constraint | networkClassConstraint) )*
	////    ('ipRange' ':' ipRange+=ipRangeConstraint)?
	//;
	public NetworkTypeElements getNetworkTypeAccess() {
		return pNetworkType;
	}
	
	public ParserRule getNetworkTypeRule() {
		return getNetworkTypeAccess().getRule();
	}
	
	//Constraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=AttributeExpression ':'
	//    (
	//        expression+=(IntegerValueExpression | AttributeExpression) |
	//        operator=ComparaisonOperator ':' expression+=(IntegerValueExpression | AttributeExpression)
	//    )
	//;
	public ConstraintElements getConstraintAccess() {
		return pConstraint;
	}
	
	public ParserRule getConstraintRule() {
		return getConstraintAccess().getRule();
	}
	
	//AttributeExpression returns AttributeExpression:
	//    //'attributeName' ':'
	//     attributeName=EString
	//;
	public AttributeExpressionElements getAttributeExpressionAccess() {
		return pAttributeExpression;
	}
	
	public ParserRule getAttributeExpressionRule() {
		return getAttributeExpressionAccess().getRule();
	}
	
	//NetworkLinksType returns NetworkLinkType:
	//            ('metadata' ':'
	//                'id' ':' name=ID
	//                'tags' ':'
	//                ('-' tags+=Tag)*
	//                'Spec' ':'
	//                    'constraints' ':'
	//                    ('-' constraints += (Constraint | networkClassConstraint) )*
	//                    'networks' ':'
	//                        ('sourceNetworks' ':'
	//                        ('-' EString)*)?
	//                        ('targetNetworks' ':'
	//                        ('-' EString)*)?
	//                        ('sourceNode' ':' EString)?
	//                        ('targetNode' ':' EString)?
	//            )
	//;
	public NetworkLinksTypeElements getNetworkLinksTypeAccess() {
		return pNetworkLinksType;
	}
	
	public ParserRule getNetworkLinksTypeRule() {
		return getNetworkLinksTypeAccess().getRule();
	}
	
	//networkClassConstraint returns Constraint:
	//    expression+=NetworkClassExpression  ':'
	//    (expression+=NetworkClassEnumExpression) | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
	//;
	public NetworkClassConstraintElements getNetworkClassConstraintAccess() {
		return pNetworkClassConstraint;
	}
	
	public ParserRule getNetworkClassConstraintRule() {
		return getNetworkClassConstraintAccess().getRule();
	}
	
	//NetworkClassEnumExpression returns NetworkClassExpression:
	//    value=NetworkClassEnum
	//;
	public NetworkClassEnumExpressionElements getNetworkClassEnumExpressionAccess() {
		return pNetworkClassEnumExpression;
	}
	
	public ParserRule getNetworkClassEnumExpressionRule() {
		return getNetworkClassEnumExpressionAccess().getRule();
	}
	
	//enum NetworkClassEnum returns NetworkClass:
	//    Ethernet='Ethernet' | Wifi='Wifi' | Bluetooth='Bluetooth'
	//;
	public NetworkClassEnumElements getNetworkClassEnumAccess() {
		return eNetworkClassEnum;
	}
	
	public EnumRule getNetworkClassEnumRule() {
		return getNetworkClassEnumAccess().getRule();
	}
	
	//NetworkClassExpression returns AttributeExpression:
	//    attributeName='networkClass'
	//;
	public NetworkClassExpressionElements getNetworkClassExpressionAccess() {
		return pNetworkClassExpression;
	}
	
	public ParserRule getNetworkClassExpressionRule() {
		return getNetworkClassExpressionAccess().getRule();
	}
	
	//BandwidthConstraint returns Constraint:
	//    expression+=bandwidthExpression ':'
	//    (expression+=IntegerValueExpression 'Mbs') | (operator=ComparaisonOperator ':' expression+=IntegerValueExpression)
	//;
	public BandwidthConstraintElements getBandwidthConstraintAccess() {
		return pBandwidthConstraint;
	}
	
	public ParserRule getBandwidthConstraintRule() {
		return getBandwidthConstraintAccess().getRule();
	}
	
	//bandwidthExpression returns AttributeExpression:
	//    attributeName='bandwidth'
	//;
	public BandwidthExpressionElements getBandwidthExpressionAccess() {
		return pBandwidthExpression;
	}
	
	public ParserRule getBandwidthExpressionRule() {
		return getBandwidthExpressionAccess().getRule();
	}
	
	//ipRangeConstraint returns Constraint:
	//    expression+=ipRangeExpression expression+=rangeExpression
	//;
	public IpRangeConstraintElements getIpRangeConstraintAccess() {
		return pIpRangeConstraint;
	}
	
	public ParserRule getIpRangeConstraintRule() {
		return getIpRangeConstraintAccess().getRule();
	}
	
	//rangeExpression returns CustomExpression:
	//    ':' expression='[' EString ',' EString ']'
	//;
	public RangeExpressionElements getRangeExpressionAccess() {
		return pRangeExpression;
	}
	
	public ParserRule getRangeExpressionRule() {
		return getRangeExpressionAccess().getRule();
	}
	
	//ipRangeExpression returns AttributeExpression:
	//    attributeName='ipRange'
	//;
	public IpRangeExpressionElements getIpRangeExpressionAccess() {
		return pIpRangeExpression;
	}
	
	public ParserRule getIpRangeExpressionRule() {
		return getIpRangeExpressionAccess().getRule();
	}
	
	//IpAddress returns IntegerValueExpression:
	//    EString
	//;
	public IpAddressElements getIpAddressAccess() {
		return pIpAddress;
	}
	
	public ParserRule getIpAddressRule() {
		return getIpAddressAccess().getRule();
	}
	
	//VirtualNodeType returns VirtualNodeSpecification:
	//    'metadata' ':'
	//        ('id' ':' name=EString)?
	//        'tags' ':'
	//        ('-' tags+=Tag)*
	//    'Spec' ':'
	//        ('image' ':' imageName=ID)
	//        ('imageRegistry' ':' imageRegistry=ID ('.' ID)* )
	//        (replicas+=ReplicasConstraint)*
	//        'physicalResources' ':'
	//        (constraints+=CpuConstraint)*
	//        (constraints+=MemoryConsraint)*
	//        (constraints+=diskConstraint)*
	//        (constraints+=Constraint)*
	//        ('hostingNode' ':'
	//          hostingNode=VirtualNodeType)?
	//        'networkLinks' ':'
	//            'downloadLink' ':'
	//                ('-' downloadLink += NetworkLinksType)*
	//            'uploadLink' ':'
	//                ('-' uploadLink += NetworkLinksType)*
	//;
	public VirtualNodeTypeElements getVirtualNodeTypeAccess() {
		return pVirtualNodeType;
	}
	
	public ParserRule getVirtualNodeTypeRule() {
		return getVirtualNodeTypeAccess().getRule();
	}
	
	//enum HealthStatus returns HealthStatus:
	//    UP='up' | DOWN='down'
	//;
	public HealthStatusElements getHealthStatusAccess() {
		return eHealthStatus;
	}
	
	public EnumRule getHealthStatusRule() {
		return getHealthStatusAccess().getRule();
	}
	
	//enum CpuArchitecture returns CPUArchitecture:
	//    Intel='Intel' | ARM='ARM'
	//;
	public CpuArchitectureElements getCpuArchitectureAccess() {
		return eCpuArchitecture;
	}
	
	public EnumRule getCpuArchitectureRule() {
		return getCpuArchitectureAccess().getRule();
	}
	
	//PhysicalNodeType returns PhysicalNodeSpecification:
	//    ('metadata' ':'
	//        ('id' ':' name=EString)?
	//        'tags' ':'
	//        ('-' tags+=Tag)*)?
	//    'Spec' ':'
	//        'physicalResources' ':'
	//        (constraints+=CpuConstraint)*
	//        (constraints+=MemoryConsraint)*
	//        (constraints+=diskConstraint)*
	//        (constraints+=Constraint)*
	//        'networkLinks' ':'
	//            'downloadLink' ':'
	//                ('-' downloadLink += NetworkLinksType)*
	//            'uploadLink' ':'
	//                ('-' uploadLink += NetworkLinksType)*
	//    ;
	public PhysicalNodeTypeElements getPhysicalNodeTypeAccess() {
		return pPhysicalNodeType;
	}
	
	public ParserRule getPhysicalNodeTypeRule() {
		return getPhysicalNodeTypeAccess().getRule();
	}
	
	//ReplicasConstraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=ReplicasAttributeExpression ':'
	//    (
	//        expression+=IntegerValueExpression |
	//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
	//    )
	//;
	public ReplicasConstraintElements getReplicasConstraintAccess() {
		return pReplicasConstraint;
	}
	
	public ParserRule getReplicasConstraintRule() {
		return getReplicasConstraintAccess().getRule();
	}
	
	//RuntimesConstraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=RuntimesAttributeExpression ':'
	//    (
	//        '{' expression+=CustomExpression '}' |
	//        operator=ComparaisonOperator ':' '{' expression+=CustomExpression '}'
	//    )
	//;
	public RuntimesConstraintElements getRuntimesConstraintAccess() {
		return pRuntimesConstraint;
	}
	
	public ParserRule getRuntimesConstraintRule() {
		return getRuntimesConstraintAccess().getRule();
	}
	
	//CustomExpression returns CustomExpression:
	//    expression=STRING
	//;
	public CustomExpressionElements getCustomExpressionAccess() {
		return pCustomExpression;
	}
	
	public ParserRule getCustomExpressionRule() {
		return getCustomExpressionAccess().getRule();
	}
	
	//diskConstraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=DiskAttributeExpression ':'
	//    (
	//        expression+=IntegerValueExpression |
	//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
	//    )
	//;
	public DiskConstraintElements getDiskConstraintAccess() {
		return pDiskConstraint;
	}
	
	public ParserRule getDiskConstraintRule() {
		return getDiskConstraintAccess().getRule();
	}
	
	//MemoryConsraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=MemoryAttributeExpression ':'
	//    (
	//        expression+=IntegerValueExpression |
	//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
	//    )
	//;
	public MemoryConsraintElements getMemoryConsraintAccess() {
		return pMemoryConsraint;
	}
	
	public ParserRule getMemoryConsraintRule() {
		return getMemoryConsraintAccess().getRule();
	}
	
	//CpuConstraint returns Constraint:
	//    {Constraint}
	//    //operator='Lesser' because is defined as default in the ecore model
	//    expression+=CpuAttributeExpression ':'
	//    (
	//        expression+=IntegerValueExpression |
	//        operator=ComparaisonOperator ':' expression+=IntegerValueExpression
	//    )
	//;
	public CpuConstraintElements getCpuConstraintAccess() {
		return pCpuConstraint;
	}
	
	public ParserRule getCpuConstraintRule() {
		return getCpuConstraintAccess().getRule();
	}
	
	//IntegerValueExpression returns IntegerValueExpression:
	//    value=INT
	//;
	public IntegerValueExpressionElements getIntegerValueExpressionAccess() {
		return pIntegerValueExpression;
	}
	
	public ParserRule getIntegerValueExpressionRule() {
		return getIntegerValueExpressionAccess().getRule();
	}
	
	//ReplicasAttributeExpression returns AttributeExpression:
	//    attributeName='replicas'
	//;
	public ReplicasAttributeExpressionElements getReplicasAttributeExpressionAccess() {
		return pReplicasAttributeExpression;
	}
	
	public ParserRule getReplicasAttributeExpressionRule() {
		return getReplicasAttributeExpressionAccess().getRule();
	}
	
	//RuntimesAttributeExpression returns AttributeExpression:
	//    attributeName='runtimes'
	//;
	public RuntimesAttributeExpressionElements getRuntimesAttributeExpressionAccess() {
		return pRuntimesAttributeExpression;
	}
	
	public ParserRule getRuntimesAttributeExpressionRule() {
		return getRuntimesAttributeExpressionAccess().getRule();
	}
	
	//DiskAttributeExpression returns AttributeExpression:
	//    attributeName='diskStorage'
	//;
	public DiskAttributeExpressionElements getDiskAttributeExpressionAccess() {
		return pDiskAttributeExpression;
	}
	
	public ParserRule getDiskAttributeExpressionRule() {
		return getDiskAttributeExpressionAccess().getRule();
	}
	
	//MemoryAttributeExpression returns AttributeExpression:
	//    attributeName='memory'
	//;
	public MemoryAttributeExpressionElements getMemoryAttributeExpressionAccess() {
		return pMemoryAttributeExpression;
	}
	
	public ParserRule getMemoryAttributeExpressionRule() {
		return getMemoryAttributeExpressionAccess().getRule();
	}
	
	//CpuAttributeExpression returns AttributeExpression:
	//    attributeName='CpuCores'
	//;
	public CpuAttributeExpressionElements getCpuAttributeExpressionAccess() {
		return pCpuAttributeExpression;
	}
	
	public ParserRule getCpuAttributeExpressionRule() {
		return getCpuAttributeExpressionAccess().getRule();
	}
	
	//enum ComparaisonOperator:
	//    Lesser='Lesser' | Greater='Greater' | Equal='Equal' | LesserOrEqual = 'LesserOrEqual' | GreaterOrEqual='GreaterOrEqual'
	//;
	public ComparaisonOperatorElements getComparaisonOperatorAccess() {
		return eComparaisonOperator;
	}
	
	public EnumRule getComparaisonOperatorRule() {
		return getComparaisonOperatorAccess().getRule();
	}
	
	//Value:
	//    STRING | INT
	//;
	public ValueElements getValueAccess() {
		return pValue;
	}
	
	public ParserRule getValueRule() {
		return getValueAccess().getRule();
	}
	
	//Tag returns Tag:
	//    key=ID ':' value=ID
	//;
	public TagElements getTagAccess() {
		return pTag;
	}
	
	public ParserRule getTagRule() {
		return getTagAccess().getRule();
	}
	
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT : '//' !('\n'|'\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
