/*
 * generated by Xtext 2.28.0
 */
grammar InternalFogDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.imta.semafor.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.imta.semafor.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.imta.semafor.services.FogDslGrammarAccess;

}

@parser::members {

 	private FogDslGrammarAccess grammarAccess;

    public InternalFogDslParser(TokenStream input, FogDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "FogResource";
   	}

   	@Override
   	protected FogDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFogResource
entryRuleFogResource returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFogResourceRule()); }
	iv_ruleFogResource=ruleFogResource
	{ $current=$iv_ruleFogResource.current; }
	EOF;

// Rule FogResource
ruleFogResource returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='ApiVersion'
		{
			newLeafNode(otherlv_0, grammarAccess.getFogResourceAccess().getApiVersionKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFogResourceAccess().getColonKeyword_1());
		}
		otherlv_2='v.0.1'
		{
			newLeafNode(otherlv_2, grammarAccess.getFogResourceAccess().getV01Keyword_2());
		}
		(
			(
				otherlv_3='resourceType'
				{
					newLeafNode(otherlv_3, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_0_0());
				}
				otherlv_4=':'
				{
					newLeafNode(otherlv_4, grammarAccess.getFogResourceAccess().getColonKeyword_3_0_1());
				}
				otherlv_5='FogArea'
				{
					newLeafNode(otherlv_5, grammarAccess.getFogResourceAccess().getFogAreaKeyword_3_0_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getFogAreaParserRuleCall_3_0_3());
				}
				this_fogArea_6=rulefogArea
				{
					$current = $this_fogArea_6.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_7='resourceType'
				{
					newLeafNode(otherlv_7, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_1_0());
				}
				otherlv_8=':'
				{
					newLeafNode(otherlv_8, grammarAccess.getFogResourceAccess().getColonKeyword_3_1_1());
				}
				otherlv_9='FogSystem'
				{
					newLeafNode(otherlv_9, grammarAccess.getFogResourceAccess().getFogSystemKeyword_3_1_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getFogSystemParserRuleCall_3_1_3());
				}
				this_fogSystem_10=rulefogSystem
				{
					$current = $this_fogSystem_10.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_11='resourceType'
				{
					newLeafNode(otherlv_11, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_2_0());
				}
				otherlv_12=':'
				{
					newLeafNode(otherlv_12, grammarAccess.getFogResourceAccess().getColonKeyword_3_2_1());
				}
				otherlv_13='PhysicalNode'
				{
					newLeafNode(otherlv_13, grammarAccess.getFogResourceAccess().getPhysicalNodeKeyword_3_2_2());
				}
				(
					{
						newCompositeNode(grammarAccess.getFogResourceAccess().getPhysicalNodeTypeParserRuleCall_3_2_3_0());
					}
					this_PhysicalNodeType_14=rulePhysicalNodeType
					{
						$current = $this_PhysicalNodeType_14.current;
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFogResourceAccess().getPhysicalNodeParserRuleCall_3_2_3_1());
					}
					this_PhysicalNode_15=rulePhysicalNode
					{
						$current = $this_PhysicalNode_15.current;
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_16='resourceType'
				{
					newLeafNode(otherlv_16, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_3_0());
				}
				otherlv_17=':'
				{
					newLeafNode(otherlv_17, grammarAccess.getFogResourceAccess().getColonKeyword_3_3_1());
				}
				otherlv_18='VirtualNode'
				{
					newLeafNode(otherlv_18, grammarAccess.getFogResourceAccess().getVirtualNodeKeyword_3_3_2());
				}
				(
					{
						newCompositeNode(grammarAccess.getFogResourceAccess().getVirtualNodeTypeParserRuleCall_3_3_3_0());
					}
					this_VirtualNodeType_19=ruleVirtualNodeType
					{
						$current = $this_VirtualNodeType_19.current;
						afterParserOrEnumRuleCall();
					}
					    |
					{
						newCompositeNode(grammarAccess.getFogResourceAccess().getVirtualNodeParserRuleCall_3_3_3_1());
					}
					this_VirtualNode_20=ruleVirtualNode
					{
						$current = $this_VirtualNode_20.current;
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				otherlv_21='resourceType'
				{
					newLeafNode(otherlv_21, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_4_0());
				}
				otherlv_22=':'
				{
					newLeafNode(otherlv_22, grammarAccess.getFogResourceAccess().getColonKeyword_3_4_1());
				}
				otherlv_23='Network'
				{
					newLeafNode(otherlv_23, grammarAccess.getFogResourceAccess().getNetworkKeyword_3_4_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getNetworkTypeParserRuleCall_3_4_3());
				}
				this_NetworkType_24=ruleNetworkType
				{
					$current = $this_NetworkType_24.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_25='resourceType'
				{
					newLeafNode(otherlv_25, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_5_0());
				}
				otherlv_26=':'
				{
					newLeafNode(otherlv_26, grammarAccess.getFogResourceAccess().getColonKeyword_3_5_1());
				}
				otherlv_27='Service'
				{
					newLeafNode(otherlv_27, grammarAccess.getFogResourceAccess().getServiceKeyword_3_5_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getSerivceTypeParserRuleCall_3_5_3());
				}
				this_SerivceType_28=ruleSerivceType
				{
					$current = $this_SerivceType_28.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_29='resourceType'
				{
					newLeafNode(otherlv_29, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_6_0());
				}
				otherlv_30=':'
				{
					newLeafNode(otherlv_30, grammarAccess.getFogResourceAccess().getColonKeyword_3_6_1());
				}
				otherlv_31='Application'
				{
					newLeafNode(otherlv_31, grammarAccess.getFogResourceAccess().getApplicationKeyword_3_6_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getApplicationParserRuleCall_3_6_3());
				}
				this_Application_32=ruleApplication
				{
					$current = $this_Application_32.current;
					afterParserOrEnumRuleCall();
				}
			)
			    |
			(
				otherlv_33='resourceType'
				{
					newLeafNode(otherlv_33, grammarAccess.getFogResourceAccess().getResourceTypeKeyword_3_7_0());
				}
				otherlv_34=':'
				{
					newLeafNode(otherlv_34, grammarAccess.getFogResourceAccess().getColonKeyword_3_7_1());
				}
				otherlv_35='Attribute'
				{
					newLeafNode(otherlv_35, grammarAccess.getFogResourceAccess().getAttributeKeyword_3_7_2());
				}
				{
					newCompositeNode(grammarAccess.getFogResourceAccess().getAttributeTypeParserRuleCall_3_7_3());
				}
				this_AttributeType_36=ruleAttributeType
				{
					$current = $this_AttributeType_36.current;
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVirtualNode
entryRuleVirtualNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVirtualNodeRule()); }
	iv_ruleVirtualNode=ruleVirtualNode
	{ $current=$iv_ruleVirtualNode.current; }
	EOF;

// Rule VirtualNode
ruleVirtualNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getVirtualNodeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVirtualNodeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getVirtualNodeAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getVirtualNodeAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getVirtualNodeAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVirtualNodeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getVirtualNodeAccess().getTagsKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getVirtualNodeAccess().getColonKeyword_4());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getVirtualNodeAccess().getHyphenMinusKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeAccess().getTagsTagParserRuleCall_5_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='instanceOf'
		{
			newLeafNode(otherlv_9, grammarAccess.getVirtualNodeAccess().getInstanceOfKeyword_6());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getVirtualNodeAccess().getColonKeyword_7());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVirtualNodeRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getVirtualNodeAccess().getIsInstanceOfVirtualNodeSpecificationCrossReference_8_0());
				}
			)
		)
		otherlv_12='status'
		{
			newLeafNode(otherlv_12, grammarAccess.getVirtualNodeAccess().getStatusKeyword_9());
		}
		otherlv_13=':'
		{
			newLeafNode(otherlv_13, grammarAccess.getVirtualNodeAccess().getColonKeyword_10());
		}
		otherlv_14='hostedOn'
		{
			newLeafNode(otherlv_14, grammarAccess.getVirtualNodeAccess().getHostedOnKeyword_11());
		}
		otherlv_15=':'
		{
			newLeafNode(otherlv_15, grammarAccess.getVirtualNodeAccess().getColonKeyword_12());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVirtualNodeRule());
					}
				}
				otherlv_16=RULE_ID
				{
					newLeafNode(otherlv_16, grammarAccess.getVirtualNodeAccess().getHostingNodeNodeCrossReference_13_0());
				}
			)
		)
		otherlv_17='hosts'
		{
			newLeafNode(otherlv_17, grammarAccess.getVirtualNodeAccess().getHostsKeyword_14());
		}
		otherlv_18=':'
		{
			newLeafNode(otherlv_18, grammarAccess.getVirtualNodeAccess().getColonKeyword_15());
		}
		(
			otherlv_19='-'
			{
				newLeafNode(otherlv_19, grammarAccess.getVirtualNodeAccess().getHyphenMinusKeyword_16_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVirtualNodeRule());
						}
					}
					otherlv_20=RULE_ID
					{
						newLeafNode(otherlv_20, grammarAccess.getVirtualNodeAccess().getHostedVirtualNodesVirtualNodeCrossReference_16_1_0());
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeAccess().getAttributesAttributeValueUnitParserRuleCall_17_0());
				}
				lv_attributes_21_0=ruleAttributeValueUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_21_0,
						"fr.imta.semafor.FogDsl.AttributeValueUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRulefogSystem
entryRulefogSystem returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFogSystemRule()); }
	iv_rulefogSystem=rulefogSystem
	{ $current=$iv_rulefogSystem.current; }
	EOF;

// Rule fogSystem
rulefogSystem returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFogSystemAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFogSystemAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFogSystemAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFogSystemRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.imta.semafor.FogDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRulefogArea
entryRulefogArea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFogAreaRule()); }
	iv_rulefogArea=rulefogArea
	{ $current=$iv_rulefogArea.current; }
	EOF;

// Rule fogArea
rulefogArea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getFogAreaAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getFogAreaAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFogAreaAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFogAreaRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.imta.semafor.FogDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='fogSystem'
		{
			newLeafNode(otherlv_3, grammarAccess.getFogAreaAccess().getFogSystemKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getFogAreaAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFogAreaRule());
					}
				}
				otherlv_5=RULE_ID
				{
					newLeafNode(otherlv_5, grammarAccess.getFogAreaAccess().getFogsystemFogSystemCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeTypeAccess().getNameKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeTypeAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeTypeAccess().getNameEStringParserRuleCall_2_0());
				}
				lv_name_2_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeTypeRule());
					}
					set(
						$current,
						"name",
						lv_name_2_0,
						"fr.imta.semafor.FogDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='type'
		{
			newLeafNode(otherlv_3, grammarAccess.getAttributeTypeAccess().getTypeKeyword_3());
		}
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getAttributeTypeAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeTypeAccess().getValueTypeEStringParserRuleCall_5_0());
				}
				lv_valueType_5_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeTypeRule());
					}
					set(
						$current,
						"valueType",
						lv_valueType_5_0,
						"fr.imta.semafor.FogDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_6='unitOfMeasurment'
			{
				newLeafNode(otherlv_6, grammarAccess.getAttributeTypeAccess().getUnitOfMeasurmentKeyword_6_0());
			}
			otherlv_7=':'
			{
				newLeafNode(otherlv_7, grammarAccess.getAttributeTypeAccess().getColonKeyword_6_1());
			}
			(
				otherlv_8='-'
				{
					newLeafNode(otherlv_8, grammarAccess.getAttributeTypeAccess().getHyphenMinusKeyword_6_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getAttributeTypeRule());
							}
						}
						otherlv_9=RULE_ID
						{
							newLeafNode(otherlv_9, grammarAccess.getAttributeTypeAccess().getUnitofmeasurmentUnitOfMeasurmentCrossReference_6_2_1_0());
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRulePhysicalNode
entryRulePhysicalNode returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalNodeRule()); }
	iv_rulePhysicalNode=rulePhysicalNode
	{ $current=$iv_rulePhysicalNode.current; }
	EOF;

// Rule PhysicalNode
rulePhysicalNode returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getPhysicalNodeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getPhysicalNodeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getPhysicalNodeAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getPhysicalNodeAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getPhysicalNodeAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicalNodeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5='fogArea'
		{
			newLeafNode(otherlv_5, grammarAccess.getPhysicalNodeAccess().getFogAreaKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getPhysicalNodeAccess().getColonKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhysicalNodeRule());
					}
				}
				otherlv_7=RULE_ID
				{
					newLeafNode(otherlv_7, grammarAccess.getPhysicalNodeAccess().getFogareaFogAreaCrossReference_5_0());
				}
			)
		)
		otherlv_8='tags'
		{
			newLeafNode(otherlv_8, grammarAccess.getPhysicalNodeAccess().getTagsKeyword_6());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getPhysicalNodeAccess().getColonKeyword_7());
		}
		(
			otherlv_10='-'
			{
				newLeafNode(otherlv_10, grammarAccess.getPhysicalNodeAccess().getHyphenMinusKeyword_8_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalNodeAccess().getTagsTagParserRuleCall_8_1_0());
					}
					lv_tags_11_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalNodeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_11_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_12='instanceOf'
		{
			newLeafNode(otherlv_12, grammarAccess.getPhysicalNodeAccess().getInstanceOfKeyword_9());
		}
		otherlv_13=':'
		{
			newLeafNode(otherlv_13, grammarAccess.getPhysicalNodeAccess().getColonKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getPhysicalNodeRule());
					}
				}
				otherlv_14=RULE_ID
				{
					newLeafNode(otherlv_14, grammarAccess.getPhysicalNodeAccess().getIsInstanceOfPhysicalNodeSpecificationCrossReference_11_0());
				}
			)
		)
		otherlv_15='status'
		{
			newLeafNode(otherlv_15, grammarAccess.getPhysicalNodeAccess().getStatusKeyword_12());
		}
		otherlv_16=':'
		{
			newLeafNode(otherlv_16, grammarAccess.getPhysicalNodeAccess().getColonKeyword_13());
		}
		otherlv_17='hosts'
		{
			newLeafNode(otherlv_17, grammarAccess.getPhysicalNodeAccess().getHostsKeyword_14());
		}
		otherlv_18=':'
		{
			newLeafNode(otherlv_18, grammarAccess.getPhysicalNodeAccess().getColonKeyword_15());
		}
		(
			otherlv_19='-'
			{
				newLeafNode(otherlv_19, grammarAccess.getPhysicalNodeAccess().getHyphenMinusKeyword_16_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getPhysicalNodeRule());
						}
					}
					otherlv_20=RULE_ID
					{
						newLeafNode(otherlv_20, grammarAccess.getPhysicalNodeAccess().getHostedVirtualNodesVirtualNodeCrossReference_16_1_0());
					}
				)
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalNodeAccess().getAttributesAttributeValueUnitParserRuleCall_17_0());
				}
				lv_attributes_21_0=ruleAttributeValueUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalNodeRule());
					}
					add(
						$current,
						"attributes",
						lv_attributes_21_0,
						"fr.imta.semafor.FogDsl.AttributeValueUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleAttributeValueUnit
entryRuleAttributeValueUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeValueUnitRule()); }
	iv_ruleAttributeValueUnit=ruleAttributeValueUnit
	{ $current=$iv_ruleAttributeValueUnit.current; }
	EOF;

// Rule AttributeValueUnit
ruleAttributeValueUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getAttributeValueUnitRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getAttributeValueUnitAccess().getInstanceOfAttributeTypeCrossReference_0_0());
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getAttributeValueUnitAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeValueUnitAccess().getValueValueParserRuleCall_2_0());
				}
				lv_value_2_0=ruleValue
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeValueUnitRule());
					}
					set(
						$current,
						"value",
						lv_value_2_0,
						"fr.imta.semafor.FogDsl.Value");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleApplication
entryRuleApplication returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getApplicationRule()); }
	iv_ruleApplication=ruleApplication
	{ $current=$iv_ruleApplication.current; }
	EOF;

// Rule Application
ruleApplication returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getApplicationAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getApplicationAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getApplicationAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getApplicationAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getApplicationAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getApplicationRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getApplicationAccess().getTagsKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getApplicationAccess().getColonKeyword_4());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationAccess().getTagsTagParserRuleCall_5_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getApplicationAccess().getSpecKeyword_6());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getApplicationAccess().getColonKeyword_7());
		}
		otherlv_11='services'
		{
			newLeafNode(otherlv_11, grammarAccess.getApplicationAccess().getServicesKeyword_8());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getApplicationAccess().getColonKeyword_9());
		}
		(
			otherlv_13='-'
			{
				newLeafNode(otherlv_13, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_10_0());
			}
			{
				newCompositeNode(grammarAccess.getApplicationAccess().getEStringParserRuleCall_10_1());
			}
			ruleEString
			{
				afterParserOrEnumRuleCall();
			}
			otherlv_15=':'
			{
				newLeafNode(otherlv_15, grammarAccess.getApplicationAccess().getColonKeyword_10_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationAccess().getServiceTypesSerivceTypeParserRuleCall_10_3_0());
					}
					lv_serviceTypes_16_0=ruleSerivceType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationRule());
						}
						add(
							$current,
							"serviceTypes",
							lv_serviceTypes_16_0,
							"fr.imta.semafor.FogDsl.SerivceType");
						afterParserOrEnumRuleCall();
					}
				)
			)?
		)*
		otherlv_17='connectors'
		{
			newLeafNode(otherlv_17, grammarAccess.getApplicationAccess().getConnectorsKeyword_11());
		}
		otherlv_18=':'
		{
			newLeafNode(otherlv_18, grammarAccess.getApplicationAccess().getColonKeyword_12());
		}
		(
			otherlv_19='-'
			{
				newLeafNode(otherlv_19, grammarAccess.getApplicationAccess().getHyphenMinusKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getApplicationAccess().getConnectortypesConnectorTypeParserRuleCall_13_1_0());
					}
					lv_connectortypes_20_0=ruleConnectorType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getApplicationRule());
						}
						add(
							$current,
							"connectortypes",
							lv_connectortypes_20_0,
							"fr.imta.semafor.FogDsl.ConnectorType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleConnectorType
entryRuleConnectorType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConnectorTypeRule()); }
	iv_ruleConnectorType=ruleConnectorType
	{ $current=$iv_ruleConnectorType.current; }
	EOF;

// Rule ConnectorType
ruleConnectorType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getConnectorTypeAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConnectorTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getConnectorTypeAccess().getColonKeyword_1());
		}
		otherlv_2='sourceServices'
		{
			newLeafNode(otherlv_2, grammarAccess.getConnectorTypeAccess().getSourceServicesKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getConnectorTypeAccess().getColonKeyword_3());
		}
		(
			otherlv_4='-'
			{
				newLeafNode(otherlv_4, grammarAccess.getConnectorTypeAccess().getHyphenMinusKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorTypeRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getConnectorTypeAccess().getSourceServicesServiceTypeCrossReference_4_1_0());
					}
				)
			)
		)*
		otherlv_6='targetServices'
		{
			newLeafNode(otherlv_6, grammarAccess.getConnectorTypeAccess().getTargetServicesKeyword_5());
		}
		otherlv_7=':'
		{
			newLeafNode(otherlv_7, grammarAccess.getConnectorTypeAccess().getColonKeyword_6());
		}
		(
			otherlv_8='-'
			{
				newLeafNode(otherlv_8, grammarAccess.getConnectorTypeAccess().getHyphenMinusKeyword_7_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConnectorTypeRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getConnectorTypeAccess().getTargetServicesServiceTypeCrossReference_7_1_0());
					}
				)
			)
		)*
		otherlv_10='constraints'
		{
			newLeafNode(otherlv_10, grammarAccess.getConnectorTypeAccess().getConstraintsKeyword_8());
		}
		otherlv_11=':'
		{
			newLeafNode(otherlv_11, grammarAccess.getConnectorTypeAccess().getColonKeyword_9());
		}
		(
			otherlv_12='-'
			{
				newLeafNode(otherlv_12, grammarAccess.getConnectorTypeAccess().getHyphenMinusKeyword_10_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConnectorTypeAccess().getConstraintsConstraintParserRuleCall_10_1_0());
					}
					lv_constraints_13_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConnectorTypeRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_13_0,
							"fr.imta.semafor.FogDsl.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSerivceType
entryRuleSerivceType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSerivceTypeRule()); }
	iv_ruleSerivceType=ruleSerivceType
	{ $current=$iv_ruleSerivceType.current; }
	EOF;

// Rule SerivceType
ruleSerivceType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getSerivceTypeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSerivceTypeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getSerivceTypeAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getSerivceTypeAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getSerivceTypeAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSerivceTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getSerivceTypeAccess().getTagsKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getSerivceTypeAccess().getColonKeyword_4());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSerivceTypeAccess().getTagsTagParserRuleCall_5_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getSerivceTypeAccess().getSpecKeyword_6());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getSerivceTypeAccess().getColonKeyword_7());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getSerivceTypeAccess().getConstraintsPortsConstraintParserRuleCall_8_0_0_0());
						}
						lv_constraints_11_0=rulePortsConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_11_0,
								"fr.imta.semafor.FogDsl.PortsConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_12='-'
					{
						newLeafNode(otherlv_12, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_8_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSerivceTypeAccess().getNetworkPortsNetworkPortParserRuleCall_8_0_1_1_0());
							}
							lv_networkPorts_13_0=ruleNetworkPort
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
								}
								add(
									$current,
									"networkPorts",
									lv_networkPorts_13_0,
									"fr.imta.semafor.FogDsl.NetworkPort");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			(
				otherlv_14='networkPorts'
				{
					newLeafNode(otherlv_14, grammarAccess.getSerivceTypeAccess().getNetworkPortsKeyword_8_1_0());
				}
				otherlv_15=':'
				{
					newLeafNode(otherlv_15, grammarAccess.getSerivceTypeAccess().getColonKeyword_8_1_1());
				}
				(
					otherlv_16='-'
					{
						newLeafNode(otherlv_16, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_8_1_2_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getSerivceTypeAccess().getNetworkPortsNetworkPortParserRuleCall_8_1_2_1_0());
							}
							lv_networkPorts_17_0=ruleNetworkPort
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
								}
								add(
									$current,
									"networkPorts",
									lv_networkPorts_17_0,
									"fr.imta.semafor.FogDsl.NetworkPort");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
		)
		otherlv_18='hostedOn'
		{
			newLeafNode(otherlv_18, grammarAccess.getSerivceTypeAccess().getHostedOnKeyword_9());
		}
		otherlv_19=':'
		{
			newLeafNode(otherlv_19, grammarAccess.getSerivceTypeAccess().getColonKeyword_10());
		}
		(
			otherlv_20='virtualNodes'
			{
				newLeafNode(otherlv_20, grammarAccess.getSerivceTypeAccess().getVirtualNodesKeyword_11_0());
			}
			otherlv_21=':'
			{
				newLeafNode(otherlv_21, grammarAccess.getSerivceTypeAccess().getColonKeyword_11_1());
			}
			(
				otherlv_22='-'
				{
					newLeafNode(otherlv_22, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_2_0());
				}
				{
					newCompositeNode(grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_2_1());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
			(
				otherlv_24='-'
				{
					newLeafNode(otherlv_24, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_11_3_0());
				}
				{
					newCompositeNode(grammarAccess.getSerivceTypeAccess().getEStringParserRuleCall_11_3_1());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)*
		)?
		(
			otherlv_26='softwarePacakge'
			{
				newLeafNode(otherlv_26, grammarAccess.getSerivceTypeAccess().getSoftwarePacakgeKeyword_12_0());
			}
			otherlv_27=':'
			{
				newLeafNode(otherlv_27, grammarAccess.getSerivceTypeAccess().getColonKeyword_12_1());
			}
			otherlv_28='-'
			{
				newLeafNode(otherlv_28, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_12_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSerivceTypeAccess().getImplementedBySoftwarePackageParserRuleCall_12_3_0());
					}
					lv_implementedBy_29_0=ruleSoftwarePackage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
						}
						add(
							$current,
							"implementedBy",
							lv_implementedBy_29_0,
							"fr.imta.semafor.FogDsl.SoftwarePackage");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_30='-'
				{
					newLeafNode(otherlv_30, grammarAccess.getSerivceTypeAccess().getHyphenMinusKeyword_12_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getSerivceTypeAccess().getImplementedBySoftwarePackageParserRuleCall_12_4_1_0());
						}
						lv_implementedBy_31_0=ruleSoftwarePackage
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
							}
							add(
								$current,
								"implementedBy",
								lv_implementedBy_31_0,
								"fr.imta.semafor.FogDsl.SoftwarePackage");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_32='constraints'
			{
				newLeafNode(otherlv_32, grammarAccess.getSerivceTypeAccess().getConstraintsKeyword_13_0());
			}
			otherlv_33=':'
			{
				newLeafNode(otherlv_33, grammarAccess.getSerivceTypeAccess().getColonKeyword_13_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSerivceTypeAccess().getConstraintsConstraintParserRuleCall_13_2_0());
					}
					lv_constraints_34_0=ruleConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSerivceTypeRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_34_0,
							"fr.imta.semafor.FogDsl.Constraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleSoftwarePackage
entryRuleSoftwarePackage returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSoftwarePackageRule()); }
	iv_ruleSoftwarePackage=ruleSoftwarePackage
	{ $current=$iv_ruleSoftwarePackage.current; }
	EOF;

// Rule SoftwarePackage
ruleSoftwarePackage returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getSoftwarePackageAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSoftwarePackageRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getSoftwarePackageAccess().getColonKeyword_1());
		}
		otherlv_2='command'
		{
			newLeafNode(otherlv_2, grammarAccess.getSoftwarePackageAccess().getCommandKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getSoftwarePackageAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSoftwarePackageAccess().getInstallStartScriptEStringParserRuleCall_4_0());
				}
				lv_installStartScript_4_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSoftwarePackageRule());
					}
					set(
						$current,
						"installStartScript",
						lv_installStartScript_4_0,
						"fr.imta.semafor.FogDsl.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='constraints'
		{
			newLeafNode(otherlv_5, grammarAccess.getSoftwarePackageAccess().getConstraintsKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getSoftwarePackageAccess().getColonKeyword_6());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getSoftwarePackageAccess().getHyphenMinusKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSoftwarePackageAccess().getConstraintsReplicasConstraintParserRuleCall_7_1_0());
					}
					lv_constraints_8_0=ruleReplicasConstraint
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSoftwarePackageRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_8_0,
							"fr.imta.semafor.FogDsl.ReplicasConstraint");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePortsConstraint
entryRulePortsConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortsConstraintRule()); }
	iv_rulePortsConstraint=rulePortsConstraint
	{ $current=$iv_rulePortsConstraint.current; }
	EOF;

// Rule PortsConstraint
rulePortsConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getPortsConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getPortsConstraintAccess().getExpressionPortsExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleportsExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortsConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.portsExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getPortsConstraintAccess().getColonKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPortsConstraintAccess().getExpressionMultiplicityExpressionParserRuleCall_3_0());
				}
				lv_expression_3_0=ruleMultiplicityExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPortsConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_3_0,
						"fr.imta.semafor.FogDsl.MultiplicityExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4=':'
		{
			newLeafNode(otherlv_4, grammarAccess.getPortsConstraintAccess().getColonKeyword_4());
		}
	)
;

// Entry rule entryRuleMultiplicityExpression
entryRuleMultiplicityExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMultiplicityExpressionRule()); }
	iv_ruleMultiplicityExpression=ruleMultiplicityExpression
	{ $current=$iv_ruleMultiplicityExpression.current; }
	EOF;

// Rule MultiplicityExpression
ruleMultiplicityExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getMultiplicityExpressionAccess().getMultiplicityOperatorMultiplicityOperatorEnumRuleCall_0());
			}
			lv_multiplicityOperator_0_0=ruleMultiplicityOperator
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getMultiplicityExpressionRule());
				}
				set(
					$current,
					"multiplicityOperator",
					lv_multiplicityOperator_0_0,
					"fr.imta.semafor.FogDsl.MultiplicityOperator");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleportsExpression
entryRuleportsExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPortsExpressionRule()); }
	iv_ruleportsExpression=ruleportsExpression
	{ $current=$iv_ruleportsExpression.current; }
	EOF;

// Rule portsExpression
ruleportsExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='networkPort'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getPortsExpressionAccess().getAttributeNameNetworkPortKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getPortsExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "networkPort");
			}
		)
	)
;

// Entry rule entryRuleNetworkPort
entryRuleNetworkPort returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkPortRule()); }
	iv_ruleNetworkPort=ruleNetworkPort
	{ $current=$iv_ruleNetworkPort.current; }
	EOF;

// Rule NetworkPort
ruleNetworkPort returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_portName_0_0=RULE_STRING
				{
					newLeafNode(lv_portName_0_0, grammarAccess.getNetworkPortAccess().getPortNameSTRINGTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetworkPortRule());
					}
					setWithLastConsumed(
						$current,
						"portName",
						lv_portName_0_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetworkPortAccess().getColonKeyword_1());
		}
		otherlv_2='protocol'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkPortAccess().getProtocolKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getNetworkPortAccess().getColonKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getNetworkPortAccess().getProtocolTransportProtocolEnumRuleCall_4_0());
				}
				lv_protocol_4_0=ruleTransportProtocol
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNetworkPortRule());
					}
					set(
						$current,
						"protocol",
						lv_protocol_4_0,
						"fr.imta.semafor.FogDsl.TransportProtocol");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5='portNumber'
		{
			newLeafNode(otherlv_5, grammarAccess.getNetworkPortAccess().getPortNumberKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getNetworkPortAccess().getColonKeyword_6());
		}
		(
			(
				lv_portNumber_7_0=RULE_INT
				{
					newLeafNode(lv_portNumber_7_0, grammarAccess.getNetworkPortAccess().getPortNumberINTTerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetworkPortRule());
					}
					setWithLastConsumed(
						$current,
						"portNumber",
						lv_portNumber_7_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_8='hostPort'
		{
			newLeafNode(otherlv_8, grammarAccess.getNetworkPortAccess().getHostPortKeyword_8());
		}
		otherlv_9=':'
		{
			newLeafNode(otherlv_9, grammarAccess.getNetworkPortAccess().getColonKeyword_9());
		}
		(
			(
				lv_hostPort_10_0=RULE_INT
				{
					newLeafNode(lv_hostPort_10_0, grammarAccess.getNetworkPortAccess().getHostPortINTTerminalRuleCall_10_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetworkPortRule());
					}
					setWithLastConsumed(
						$current,
						"hostPort",
						lv_hostPort_10_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleNetworkType
entryRuleNetworkType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkTypeRule()); }
	iv_ruleNetworkType=ruleNetworkType
	{ $current=$iv_ruleNetworkType.current; }
	EOF;

// Rule NetworkType
ruleNetworkType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getNetworkTypeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetworkTypeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getNetworkTypeAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getNetworkTypeAccess().getColonKeyword_2_1());
			}
			(
				(
					lv_name_4_0=RULE_ID
					{
						newLeafNode(lv_name_4_0, grammarAccess.getNetworkTypeAccess().getNameIDTerminalRuleCall_2_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNetworkTypeRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)?
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getNetworkTypeAccess().getTagsKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getNetworkTypeAccess().getColonKeyword_4());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getNetworkTypeAccess().getHyphenMinusKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkTypeAccess().getTagsTagParserRuleCall_5_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkTypeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getNetworkTypeAccess().getSpecKeyword_6());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getNetworkTypeAccess().getColonKeyword_7());
		}
		otherlv_11='constraints'
		{
			newLeafNode(otherlv_11, grammarAccess.getNetworkTypeAccess().getConstraintsKeyword_8());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getNetworkTypeAccess().getColonKeyword_9());
		}
		(
			otherlv_13='-'
			{
				newLeafNode(otherlv_13, grammarAccess.getNetworkTypeAccess().getHyphenMinusKeyword_10_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNetworkTypeAccess().getConstraintsConstraintParserRuleCall_10_1_0_0());
						}
						lv_constraints_14_1=ruleConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNetworkTypeRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_14_1,
								"fr.imta.semafor.FogDsl.Constraint");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getNetworkTypeAccess().getConstraintsNetworkClassConstraintParserRuleCall_10_1_0_1());
						}
						lv_constraints_14_2=rulenetworkClassConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNetworkTypeRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_14_2,
								"fr.imta.semafor.FogDsl.networkClassConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
	)
;

// Entry rule entryRuleConstraint
entryRuleConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstraintRule()); }
	iv_ruleConstraint=ruleConstraint
	{ $current=$iv_ruleConstraint.current; }
	EOF;

// Rule Constraint
ruleConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConstraintAccess().getExpressionAttributeExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleAttributeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.AttributeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstraintAccess().getColonKeyword_2());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_0_0_0());
						}
						lv_expression_3_1=ruleIntegerValueExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_3_1,
								"fr.imta.semafor.FogDsl.IntegerValueExpression");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getExpressionAttributeExpressionParserRuleCall_3_0_0_1());
						}
						lv_expression_3_2=ruleAttributeExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_3_2,
								"fr.imta.semafor.FogDsl.AttributeExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getConstraintAccess().getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0());
						}
						lv_operator_4_0=ruleComparaisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getConstraintRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"fr.imta.semafor.FogDsl.ComparaisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getConstraintAccess().getColonKeyword_3_1_1());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0_0());
							}
							lv_expression_6_1=ruleIntegerValueExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstraintRule());
								}
								add(
									$current,
									"expression",
									lv_expression_6_1,
									"fr.imta.semafor.FogDsl.IntegerValueExpression");
								afterParserOrEnumRuleCall();
							}
							    |
							{
								newCompositeNode(grammarAccess.getConstraintAccess().getExpressionAttributeExpressionParserRuleCall_3_1_2_0_1());
							}
							lv_expression_6_2=ruleAttributeExpression
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getConstraintRule());
								}
								add(
									$current,
									"expression",
									lv_expression_6_2,
									"fr.imta.semafor.FogDsl.AttributeExpression");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
		)
	)
;

// Entry rule entryRuleAttributeExpression
entryRuleAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeExpressionRule()); }
	iv_ruleAttributeExpression=ruleAttributeExpression
	{ $current=$iv_ruleAttributeExpression.current; }
	EOF;

// Rule AttributeExpression
ruleAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getAttributeExpressionAccess().getAttributeNameEStringParserRuleCall_0());
			}
			lv_attributeName_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getAttributeExpressionRule());
				}
				set(
					$current,
					"attributeName",
					lv_attributeName_0_0,
					"fr.imta.semafor.FogDsl.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNetworkLinksType
entryRuleNetworkLinksType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkLinksTypeRule()); }
	iv_ruleNetworkLinksType=ruleNetworkLinksType
	{ $current=$iv_ruleNetworkLinksType.current; }
	EOF;

// Rule NetworkLinksType
ruleNetworkLinksType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getNetworkLinksTypeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_1());
		}
		otherlv_2='id'
		{
			newLeafNode(otherlv_2, grammarAccess.getNetworkLinksTypeAccess().getIdKeyword_2());
		}
		otherlv_3=':'
		{
			newLeafNode(otherlv_3, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_3());
		}
		(
			(
				lv_name_4_0=RULE_ID
				{
					newLeafNode(lv_name_4_0, grammarAccess.getNetworkLinksTypeAccess().getNameIDTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNetworkLinksTypeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_4_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getNetworkLinksTypeAccess().getTagsKeyword_5());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_6());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getTagsTagParserRuleCall_7_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkLinksTypeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getNetworkLinksTypeAccess().getSpecKeyword_8());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_9());
		}
		otherlv_11='constraints'
		{
			newLeafNode(otherlv_11, grammarAccess.getNetworkLinksTypeAccess().getConstraintsKeyword_10());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_11());
		}
		(
			otherlv_13='-'
			{
				newLeafNode(otherlv_13, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_12_0());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getConstraintsConstraintParserRuleCall_12_1_0_0());
						}
						lv_constraints_14_1=ruleConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNetworkLinksTypeRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_14_1,
								"fr.imta.semafor.FogDsl.Constraint");
							afterParserOrEnumRuleCall();
						}
						    |
						{
							newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getConstraintsNetworkClassConstraintParserRuleCall_12_1_0_1());
						}
						lv_constraints_14_2=rulenetworkClassConstraint
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNetworkLinksTypeRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_14_2,
								"fr.imta.semafor.FogDsl.networkClassConstraint");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)*
		otherlv_15='networks'
		{
			newLeafNode(otherlv_15, grammarAccess.getNetworkLinksTypeAccess().getNetworksKeyword_13());
		}
		otherlv_16=':'
		{
			newLeafNode(otherlv_16, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_14());
		}
		(
			otherlv_17='sourceNetworks'
			{
				newLeafNode(otherlv_17, grammarAccess.getNetworkLinksTypeAccess().getSourceNetworksKeyword_15_0());
			}
			otherlv_18=':'
			{
				newLeafNode(otherlv_18, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_15_1());
			}
			(
				otherlv_19='-'
				{
					newLeafNode(otherlv_19, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_15_2_0());
				}
				{
					newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_15_2_1());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)*
		)?
		(
			otherlv_21='targetNetworks'
			{
				newLeafNode(otherlv_21, grammarAccess.getNetworkLinksTypeAccess().getTargetNetworksKeyword_16_0());
			}
			otherlv_22=':'
			{
				newLeafNode(otherlv_22, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_16_1());
			}
			(
				otherlv_23='-'
				{
					newLeafNode(otherlv_23, grammarAccess.getNetworkLinksTypeAccess().getHyphenMinusKeyword_16_2_0());
				}
				{
					newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_16_2_1());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)*
		)?
		(
			otherlv_25='sourceNode'
			{
				newLeafNode(otherlv_25, grammarAccess.getNetworkLinksTypeAccess().getSourceNodeKeyword_17_0());
			}
			otherlv_26=':'
			{
				newLeafNode(otherlv_26, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_17_1());
			}
			{
				newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_17_2());
			}
			ruleEString
			{
				afterParserOrEnumRuleCall();
			}
		)?
		(
			otherlv_28='targetNode'
			{
				newLeafNode(otherlv_28, grammarAccess.getNetworkLinksTypeAccess().getTargetNodeKeyword_18_0());
			}
			otherlv_29=':'
			{
				newLeafNode(otherlv_29, grammarAccess.getNetworkLinksTypeAccess().getColonKeyword_18_1());
			}
			{
				newCompositeNode(grammarAccess.getNetworkLinksTypeAccess().getEStringParserRuleCall_18_2());
			}
			ruleEString
			{
				afterParserOrEnumRuleCall();
			}
		)?
	)
;

// Entry rule entryRulenetworkClassConstraint
entryRulenetworkClassConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkClassConstraintRule()); }
	iv_rulenetworkClassConstraint=rulenetworkClassConstraint
	{ $current=$iv_rulenetworkClassConstraint.current; }
	EOF;

// Rule networkClassConstraint
rulenetworkClassConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkClassConstraintAccess().getExpressionNetworkClassExpressionParserRuleCall_0_0_0());
					}
					lv_expression_0_0=ruleNetworkClassExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkClassConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_0_0,
							"fr.imta.semafor.FogDsl.NetworkClassExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getNetworkClassConstraintAccess().getColonKeyword_0_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkClassConstraintAccess().getExpressionNetworkClassEnumExpressionParserRuleCall_0_2_0());
					}
					lv_expression_2_0=ruleNetworkClassEnumExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkClassConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_2_0,
							"fr.imta.semafor.FogDsl.NetworkClassEnumExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
		    |
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkClassConstraintAccess().getOperatorComparaisonOperatorEnumRuleCall_1_0_0());
					}
					lv_operator_3_0=ruleComparaisonOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkClassConstraintRule());
						}
						set(
							$current,
							"operator",
							lv_operator_3_0,
							"fr.imta.semafor.FogDsl.ComparaisonOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_4=':'
			{
				newLeafNode(otherlv_4, grammarAccess.getNetworkClassConstraintAccess().getColonKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNetworkClassConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_1_2_0());
					}
					lv_expression_5_0=ruleIntegerValueExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNetworkClassConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_5_0,
							"fr.imta.semafor.FogDsl.IntegerValueExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleNetworkClassEnumExpression
entryRuleNetworkClassEnumExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkClassEnumExpressionRule()); }
	iv_ruleNetworkClassEnumExpression=ruleNetworkClassEnumExpression
	{ $current=$iv_ruleNetworkClassEnumExpression.current; }
	EOF;

// Rule NetworkClassEnumExpression
ruleNetworkClassEnumExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getNetworkClassEnumExpressionAccess().getValueNetworkClassEnumEnumRuleCall_0());
			}
			lv_value_0_0=ruleNetworkClassEnum
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getNetworkClassEnumExpressionRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"fr.imta.semafor.FogDsl.NetworkClassEnum");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleNetworkClassExpression
entryRuleNetworkClassExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNetworkClassExpressionRule()); }
	iv_ruleNetworkClassExpression=ruleNetworkClassExpression
	{ $current=$iv_ruleNetworkClassExpression.current; }
	EOF;

// Rule NetworkClassExpression
ruleNetworkClassExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='networkClass'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getNetworkClassExpressionAccess().getAttributeNameNetworkClassKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getNetworkClassExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "networkClass");
			}
		)
	)
;

// Entry rule entryRulebandwidthExpression
entryRulebandwidthExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBandwidthExpressionRule()); }
	iv_rulebandwidthExpression=rulebandwidthExpression
	{ $current=$iv_rulebandwidthExpression.current; }
	EOF;

// Rule bandwidthExpression
rulebandwidthExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='bandwidth'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getBandwidthExpressionAccess().getAttributeNameBandwidthKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBandwidthExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "bandwidth");
			}
		)
	)
;

// Entry rule entryRulerangeExpression
entryRulerangeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangeExpressionRule()); }
	iv_rulerangeExpression=rulerangeExpression
	{ $current=$iv_rulerangeExpression.current; }
	EOF;

// Rule rangeExpression
rulerangeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0=':'
		{
			newLeafNode(otherlv_0, grammarAccess.getRangeExpressionAccess().getColonKeyword_0());
		}
		(
			(
				lv_expression_1_0='['
				{
					newLeafNode(lv_expression_1_0, grammarAccess.getRangeExpressionAccess().getExpressionLeftSquareBracketKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRangeExpressionRule());
					}
					setWithLastConsumed($current, "expression", lv_expression_1_0, "[");
				}
			)
		)
		{
			newCompositeNode(grammarAccess.getRangeExpressionAccess().getEStringParserRuleCall_2());
		}
		ruleEString
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRangeExpressionAccess().getCommaKeyword_3());
		}
		{
			newCompositeNode(grammarAccess.getRangeExpressionAccess().getEStringParserRuleCall_4());
		}
		ruleEString
		{
			afterParserOrEnumRuleCall();
		}
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getRangeExpressionAccess().getRightSquareBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleipRangeExpression
entryRuleipRangeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIpRangeExpressionRule()); }
	iv_ruleipRangeExpression=ruleipRangeExpression
	{ $current=$iv_ruleipRangeExpression.current; }
	EOF;

// Rule ipRangeExpression
ruleipRangeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='ipRange'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getIpRangeExpressionAccess().getAttributeNameIpRangeKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIpRangeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "ipRange");
			}
		)
	)
;

// Entry rule entryRuleVirtualNodeType
entryRuleVirtualNodeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVirtualNodeTypeRule()); }
	iv_ruleVirtualNodeType=ruleVirtualNodeType
	{ $current=$iv_ruleVirtualNodeType.current; }
	EOF;

// Rule VirtualNodeType
ruleVirtualNodeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='metadata'
		{
			newLeafNode(otherlv_0, grammarAccess.getVirtualNodeTypeAccess().getMetadataKeyword_0());
		}
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_1());
		}
		(
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getVirtualNodeTypeAccess().getIdKeyword_2_0());
			}
			otherlv_3=':'
			{
				newLeafNode(otherlv_3, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getNameEStringParserRuleCall_2_2_0());
					}
					lv_name_4_0=ruleEString
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
						}
						set(
							$current,
							"name",
							lv_name_4_0,
							"fr.imta.semafor.FogDsl.EString");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5='tags'
		{
			newLeafNode(otherlv_5, grammarAccess.getVirtualNodeTypeAccess().getTagsKeyword_3());
		}
		otherlv_6=':'
		{
			newLeafNode(otherlv_6, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_4());
		}
		(
			otherlv_7='-'
			{
				newLeafNode(otherlv_7, grammarAccess.getVirtualNodeTypeAccess().getHyphenMinusKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getTagsTagParserRuleCall_5_1_0());
					}
					lv_tags_8_0=ruleTag
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
						}
						add(
							$current,
							"tags",
							lv_tags_8_0,
							"fr.imta.semafor.FogDsl.Tag");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getVirtualNodeTypeAccess().getSpecKeyword_6());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_7());
		}
		(
			otherlv_11='image'
			{
				newLeafNode(otherlv_11, grammarAccess.getVirtualNodeTypeAccess().getImageKeyword_8_0());
			}
			otherlv_12=':'
			{
				newLeafNode(otherlv_12, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_8_1());
			}
			(
				(
					lv_imageName_13_0=RULE_ID
					{
						newLeafNode(lv_imageName_13_0, grammarAccess.getVirtualNodeTypeAccess().getImageNameIDTerminalRuleCall_8_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVirtualNodeTypeRule());
						}
						setWithLastConsumed(
							$current,
							"imageName",
							lv_imageName_13_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
		)
		(
			otherlv_14='imageRegistry'
			{
				newLeafNode(otherlv_14, grammarAccess.getVirtualNodeTypeAccess().getImageRegistryKeyword_9_0());
			}
			otherlv_15=':'
			{
				newLeafNode(otherlv_15, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_9_1());
			}
			(
				(
					lv_imageRegistry_16_0=RULE_ID
					{
						newLeafNode(lv_imageRegistry_16_0, grammarAccess.getVirtualNodeTypeAccess().getImageRegistryIDTerminalRuleCall_9_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVirtualNodeTypeRule());
						}
						setWithLastConsumed(
							$current,
							"imageRegistry",
							lv_imageRegistry_16_0,
							"org.eclipse.xtext.common.Terminals.ID");
					}
				)
			)
			(
				otherlv_17='.'
				{
					newLeafNode(otherlv_17, grammarAccess.getVirtualNodeTypeAccess().getFullStopKeyword_9_3_0());
				}
				this_ID_18=RULE_ID
				{
					newLeafNode(this_ID_18, grammarAccess.getVirtualNodeTypeAccess().getIDTerminalRuleCall_9_3_1());
				}
			)*
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getReplicasReplicasConstraintParserRuleCall_10_0());
				}
				lv_replicas_19_0=ruleReplicasConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
					}
					add(
						$current,
						"replicas",
						lv_replicas_19_0,
						"fr.imta.semafor.FogDsl.ReplicasConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_20='physicalResources'
		{
			newLeafNode(otherlv_20, grammarAccess.getVirtualNodeTypeAccess().getPhysicalResourcesKeyword_11());
		}
		otherlv_21=':'
		{
			newLeafNode(otherlv_21, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_12());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getConstraintsCpuConstraintParserRuleCall_13_0());
				}
				lv_constraints_22_0=ruleCpuConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_22_0,
						"fr.imta.semafor.FogDsl.CpuConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getConstraintsMemoryConsraintParserRuleCall_14_0());
				}
				lv_constraints_23_0=ruleMemoryConsraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_23_0,
						"fr.imta.semafor.FogDsl.MemoryConsraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getConstraintsDiskConstraintParserRuleCall_15_0());
				}
				lv_constraints_24_0=rulediskConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_24_0,
						"fr.imta.semafor.FogDsl.diskConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getConstraintsConstraintParserRuleCall_16_0());
				}
				lv_constraints_25_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_25_0,
						"fr.imta.semafor.FogDsl.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			otherlv_26='hostingNode'
			{
				newLeafNode(otherlv_26, grammarAccess.getVirtualNodeTypeAccess().getHostingNodeKeyword_17_0());
			}
			otherlv_27=':'
			{
				newLeafNode(otherlv_27, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_17_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getHostingNodeVirtualNodeTypeParserRuleCall_17_2_0());
					}
					lv_hostingNode_28_0=ruleVirtualNodeType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
						}
						set(
							$current,
							"hostingNode",
							lv_hostingNode_28_0,
							"fr.imta.semafor.FogDsl.VirtualNodeType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_29='networkLinks'
		{
			newLeafNode(otherlv_29, grammarAccess.getVirtualNodeTypeAccess().getNetworkLinksKeyword_18());
		}
		otherlv_30=':'
		{
			newLeafNode(otherlv_30, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_19());
		}
		otherlv_31='downloadLink'
		{
			newLeafNode(otherlv_31, grammarAccess.getVirtualNodeTypeAccess().getDownloadLinkKeyword_20());
		}
		otherlv_32=':'
		{
			newLeafNode(otherlv_32, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_21());
		}
		(
			otherlv_33='-'
			{
				newLeafNode(otherlv_33, grammarAccess.getVirtualNodeTypeAccess().getHyphenMinusKeyword_22_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getDownloadLinkNetworkLinksTypeParserRuleCall_22_1_0());
					}
					lv_downloadLink_34_0=ruleNetworkLinksType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
						}
						add(
							$current,
							"downloadLink",
							lv_downloadLink_34_0,
							"fr.imta.semafor.FogDsl.NetworkLinksType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_35='uploadLink'
		{
			newLeafNode(otherlv_35, grammarAccess.getVirtualNodeTypeAccess().getUploadLinkKeyword_23());
		}
		otherlv_36=':'
		{
			newLeafNode(otherlv_36, grammarAccess.getVirtualNodeTypeAccess().getColonKeyword_24());
		}
		(
			otherlv_37='-'
			{
				newLeafNode(otherlv_37, grammarAccess.getVirtualNodeTypeAccess().getHyphenMinusKeyword_25_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVirtualNodeTypeAccess().getUploadLinkNetworkLinksTypeParserRuleCall_25_1_0());
					}
					lv_uploadLink_38_0=ruleNetworkLinksType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVirtualNodeTypeRule());
						}
						add(
							$current,
							"uploadLink",
							lv_uploadLink_38_0,
							"fr.imta.semafor.FogDsl.NetworkLinksType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePhysicalNodeType
entryRulePhysicalNodeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPhysicalNodeTypeRule()); }
	iv_rulePhysicalNodeType=rulePhysicalNodeType
	{ $current=$iv_rulePhysicalNodeType.current; }
	EOF;

// Rule PhysicalNodeType
rulePhysicalNodeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='metadata'
			{
				newLeafNode(otherlv_0, grammarAccess.getPhysicalNodeTypeAccess().getMetadataKeyword_0_0());
			}
			otherlv_1=':'
			{
				newLeafNode(otherlv_1, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_1());
			}
			(
				otherlv_2='id'
				{
					newLeafNode(otherlv_2, grammarAccess.getPhysicalNodeTypeAccess().getIdKeyword_0_2_0());
				}
				otherlv_3=':'
				{
					newLeafNode(otherlv_3, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_2_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getNameEStringParserRuleCall_0_2_2_0());
						}
						lv_name_4_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
							}
							set(
								$current,
								"name",
								lv_name_4_0,
								"fr.imta.semafor.FogDsl.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)?
			otherlv_5='tags'
			{
				newLeafNode(otherlv_5, grammarAccess.getPhysicalNodeTypeAccess().getTagsKeyword_0_3());
			}
			otherlv_6=':'
			{
				newLeafNode(otherlv_6, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_0_4());
			}
			(
				otherlv_7='-'
				{
					newLeafNode(otherlv_7, grammarAccess.getPhysicalNodeTypeAccess().getHyphenMinusKeyword_0_5_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getTagsTagParserRuleCall_0_5_1_0());
						}
						lv_tags_8_0=ruleTag
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
							}
							add(
								$current,
								"tags",
								lv_tags_8_0,
								"fr.imta.semafor.FogDsl.Tag");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_9='Spec'
		{
			newLeafNode(otherlv_9, grammarAccess.getPhysicalNodeTypeAccess().getSpecKeyword_1());
		}
		otherlv_10=':'
		{
			newLeafNode(otherlv_10, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_2());
		}
		otherlv_11='physicalResources'
		{
			newLeafNode(otherlv_11, grammarAccess.getPhysicalNodeTypeAccess().getPhysicalResourcesKeyword_3());
		}
		otherlv_12=':'
		{
			newLeafNode(otherlv_12, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getConstraintsCpuConstraintParserRuleCall_5_0());
				}
				lv_constraints_13_0=ruleCpuConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_13_0,
						"fr.imta.semafor.FogDsl.CpuConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getConstraintsMemoryConsraintParserRuleCall_6_0());
				}
				lv_constraints_14_0=ruleMemoryConsraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_14_0,
						"fr.imta.semafor.FogDsl.MemoryConsraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getConstraintsDiskConstraintParserRuleCall_7_0());
				}
				lv_constraints_15_0=rulediskConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_15_0,
						"fr.imta.semafor.FogDsl.diskConstraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		(
			(
				{
					newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getConstraintsConstraintParserRuleCall_8_0());
				}
				lv_constraints_16_0=ruleConstraint
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
					}
					add(
						$current,
						"constraints",
						lv_constraints_16_0,
						"fr.imta.semafor.FogDsl.Constraint");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_17='networkLinks'
		{
			newLeafNode(otherlv_17, grammarAccess.getPhysicalNodeTypeAccess().getNetworkLinksKeyword_9());
		}
		otherlv_18=':'
		{
			newLeafNode(otherlv_18, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_10());
		}
		otherlv_19='downloadLink'
		{
			newLeafNode(otherlv_19, grammarAccess.getPhysicalNodeTypeAccess().getDownloadLinkKeyword_11());
		}
		otherlv_20=':'
		{
			newLeafNode(otherlv_20, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_12());
		}
		(
			otherlv_21='-'
			{
				newLeafNode(otherlv_21, grammarAccess.getPhysicalNodeTypeAccess().getHyphenMinusKeyword_13_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getDownloadLinkNetworkLinksTypeParserRuleCall_13_1_0());
					}
					lv_downloadLink_22_0=ruleNetworkLinksType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
						}
						add(
							$current,
							"downloadLink",
							lv_downloadLink_22_0,
							"fr.imta.semafor.FogDsl.NetworkLinksType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_23='uploadLink'
		{
			newLeafNode(otherlv_23, grammarAccess.getPhysicalNodeTypeAccess().getUploadLinkKeyword_14());
		}
		otherlv_24=':'
		{
			newLeafNode(otherlv_24, grammarAccess.getPhysicalNodeTypeAccess().getColonKeyword_15());
		}
		(
			otherlv_25='-'
			{
				newLeafNode(otherlv_25, grammarAccess.getPhysicalNodeTypeAccess().getHyphenMinusKeyword_16_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getPhysicalNodeTypeAccess().getUploadLinkNetworkLinksTypeParserRuleCall_16_1_0());
					}
					lv_uploadLink_26_0=ruleNetworkLinksType
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getPhysicalNodeTypeRule());
						}
						add(
							$current,
							"uploadLink",
							lv_uploadLink_26_0,
							"fr.imta.semafor.FogDsl.NetworkLinksType");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleReplicasConstraint
entryRuleReplicasConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReplicasConstraintRule()); }
	iv_ruleReplicasConstraint=ruleReplicasConstraint
	{ $current=$iv_ruleReplicasConstraint.current; }
	EOF;

// Rule ReplicasConstraint
ruleReplicasConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getReplicasConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReplicasConstraintAccess().getExpressionReplicasAttributeExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleReplicasAttributeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReplicasConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.ReplicasAttributeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getReplicasConstraintAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getReplicasConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_0_0());
					}
					lv_expression_3_0=ruleIntegerValueExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getReplicasConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_3_0,
							"fr.imta.semafor.FogDsl.IntegerValueExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getReplicasConstraintAccess().getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0());
						}
						lv_operator_4_0=ruleComparaisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReplicasConstraintRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"fr.imta.semafor.FogDsl.ComparaisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getReplicasConstraintAccess().getColonKeyword_3_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getReplicasConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0());
						}
						lv_expression_6_0=ruleIntegerValueExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getReplicasConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_6_0,
								"fr.imta.semafor.FogDsl.IntegerValueExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleCustomExpression
entryRuleCustomExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCustomExpressionRule()); }
	iv_ruleCustomExpression=ruleCustomExpression
	{ $current=$iv_ruleCustomExpression.current; }
	EOF;

// Rule CustomExpression
ruleCustomExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_expression_0_0=RULE_STRING
			{
				newLeafNode(lv_expression_0_0, grammarAccess.getCustomExpressionAccess().getExpressionSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCustomExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"expression",
					lv_expression_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRulediskConstraint
entryRulediskConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskConstraintRule()); }
	iv_rulediskConstraint=rulediskConstraint
	{ $current=$iv_rulediskConstraint.current; }
	EOF;

// Rule diskConstraint
rulediskConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getDiskConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getDiskConstraintAccess().getExpressionDiskAttributeExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleDiskAttributeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDiskConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.DiskAttributeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getDiskConstraintAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getDiskConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_0_0());
					}
					lv_expression_3_0=ruleIntegerValueExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getDiskConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_3_0,
							"fr.imta.semafor.FogDsl.IntegerValueExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getDiskConstraintAccess().getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0());
						}
						lv_operator_4_0=ruleComparaisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDiskConstraintRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"fr.imta.semafor.FogDsl.ComparaisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getDiskConstraintAccess().getColonKeyword_3_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getDiskConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0());
						}
						lv_expression_6_0=ruleIntegerValueExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getDiskConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_6_0,
								"fr.imta.semafor.FogDsl.IntegerValueExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleMemoryConsraint
entryRuleMemoryConsraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryConsraintRule()); }
	iv_ruleMemoryConsraint=ruleMemoryConsraint
	{ $current=$iv_ruleMemoryConsraint.current; }
	EOF;

// Rule MemoryConsraint
ruleMemoryConsraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getMemoryConsraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getMemoryConsraintAccess().getExpressionMemoryAttributeExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleMemoryAttributeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMemoryConsraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.MemoryAttributeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getMemoryConsraintAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getMemoryConsraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_0_0());
					}
					lv_expression_3_0=ruleIntegerValueExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getMemoryConsraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_3_0,
							"fr.imta.semafor.FogDsl.IntegerValueExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getMemoryConsraintAccess().getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0());
						}
						lv_operator_4_0=ruleComparaisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMemoryConsraintRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"fr.imta.semafor.FogDsl.ComparaisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getMemoryConsraintAccess().getColonKeyword_3_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getMemoryConsraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0());
						}
						lv_expression_6_0=ruleIntegerValueExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getMemoryConsraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_6_0,
								"fr.imta.semafor.FogDsl.IntegerValueExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleCpuConstraint
entryRuleCpuConstraint returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCpuConstraintRule()); }
	iv_ruleCpuConstraint=ruleCpuConstraint
	{ $current=$iv_ruleCpuConstraint.current; }
	EOF;

// Rule CpuConstraint
ruleCpuConstraint returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getCpuConstraintAccess().getConstraintAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getCpuConstraintAccess().getExpressionCpuAttributeExpressionParserRuleCall_1_0());
				}
				lv_expression_1_0=ruleCpuAttributeExpression
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCpuConstraintRule());
					}
					add(
						$current,
						"expression",
						lv_expression_1_0,
						"fr.imta.semafor.FogDsl.CpuAttributeExpression");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_2=':'
		{
			newLeafNode(otherlv_2, grammarAccess.getCpuConstraintAccess().getColonKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getCpuConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_0_0());
					}
					lv_expression_3_0=ruleIntegerValueExpression
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getCpuConstraintRule());
						}
						add(
							$current,
							"expression",
							lv_expression_3_0,
							"fr.imta.semafor.FogDsl.IntegerValueExpression");
						afterParserOrEnumRuleCall();
					}
				)
			)
			    |
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getCpuConstraintAccess().getOperatorComparaisonOperatorEnumRuleCall_3_1_0_0());
						}
						lv_operator_4_0=ruleComparaisonOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCpuConstraintRule());
							}
							set(
								$current,
								"operator",
								lv_operator_4_0,
								"fr.imta.semafor.FogDsl.ComparaisonOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=':'
				{
					newLeafNode(otherlv_5, grammarAccess.getCpuConstraintAccess().getColonKeyword_3_1_1());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getCpuConstraintAccess().getExpressionIntegerValueExpressionParserRuleCall_3_1_2_0());
						}
						lv_expression_6_0=ruleIntegerValueExpression
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getCpuConstraintRule());
							}
							add(
								$current,
								"expression",
								lv_expression_6_0,
								"fr.imta.semafor.FogDsl.IntegerValueExpression");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
		)
	)
;

// Entry rule entryRuleIntegerValueExpression
entryRuleIntegerValueExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIntegerValueExpressionRule()); }
	iv_ruleIntegerValueExpression=ruleIntegerValueExpression
	{ $current=$iv_ruleIntegerValueExpression.current; }
	EOF;

// Rule IntegerValueExpression
ruleIntegerValueExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_value_0_0=RULE_INT
			{
				newLeafNode(lv_value_0_0, grammarAccess.getIntegerValueExpressionAccess().getValueINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getIntegerValueExpressionRule());
				}
				setWithLastConsumed(
					$current,
					"value",
					lv_value_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleReplicasAttributeExpression
entryRuleReplicasAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReplicasAttributeExpressionRule()); }
	iv_ruleReplicasAttributeExpression=ruleReplicasAttributeExpression
	{ $current=$iv_ruleReplicasAttributeExpression.current; }
	EOF;

// Rule ReplicasAttributeExpression
ruleReplicasAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='replicas'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getReplicasAttributeExpressionAccess().getAttributeNameReplicasKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getReplicasAttributeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "replicas");
			}
		)
	)
;

// Entry rule entryRuleRuntimesAttributeExpression
entryRuleRuntimesAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuntimesAttributeExpressionRule()); }
	iv_ruleRuntimesAttributeExpression=ruleRuntimesAttributeExpression
	{ $current=$iv_ruleRuntimesAttributeExpression.current; }
	EOF;

// Rule RuntimesAttributeExpression
ruleRuntimesAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='runtimes'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getRuntimesAttributeExpressionAccess().getAttributeNameRuntimesKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRuntimesAttributeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "runtimes");
			}
		)
	)
;

// Entry rule entryRuleDiskAttributeExpression
entryRuleDiskAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDiskAttributeExpressionRule()); }
	iv_ruleDiskAttributeExpression=ruleDiskAttributeExpression
	{ $current=$iv_ruleDiskAttributeExpression.current; }
	EOF;

// Rule DiskAttributeExpression
ruleDiskAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='diskStorage'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getDiskAttributeExpressionAccess().getAttributeNameDiskStorageKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getDiskAttributeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "diskStorage");
			}
		)
	)
;

// Entry rule entryRuleMemoryAttributeExpression
entryRuleMemoryAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMemoryAttributeExpressionRule()); }
	iv_ruleMemoryAttributeExpression=ruleMemoryAttributeExpression
	{ $current=$iv_ruleMemoryAttributeExpression.current; }
	EOF;

// Rule MemoryAttributeExpression
ruleMemoryAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='memory'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getMemoryAttributeExpressionAccess().getAttributeNameMemoryKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getMemoryAttributeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "memory");
			}
		)
	)
;

// Entry rule entryRuleCpuAttributeExpression
entryRuleCpuAttributeExpression returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCpuAttributeExpressionRule()); }
	iv_ruleCpuAttributeExpression=ruleCpuAttributeExpression
	{ $current=$iv_ruleCpuAttributeExpression.current; }
	EOF;

// Rule CpuAttributeExpression
ruleCpuAttributeExpression returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_attributeName_0_0='CpuCores'
			{
				newLeafNode(lv_attributeName_0_0, grammarAccess.getCpuAttributeExpressionAccess().getAttributeNameCpuCoresKeyword_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getCpuAttributeExpressionRule());
				}
				setWithLastConsumed($current, "attributeName", lv_attributeName_0_0, "CpuCores");
			}
		)
	)
;

// Entry rule entryRuleValue
entryRuleValue returns [String current=null]:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	iv_ruleValue=ruleValue
	{ $current=$iv_ruleValue.current.getText(); }
	EOF;

// Rule Value
ruleValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getValueAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getValueAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleTag
entryRuleTag returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTagRule()); }
	iv_ruleTag=ruleTag
	{ $current=$iv_ruleTag.current; }
	EOF;

// Rule Tag
ruleTag returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_key_0_0=RULE_ID
				{
					newLeafNode(lv_key_0_0, grammarAccess.getTagAccess().getKeyIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"key",
						lv_key_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getTagAccess().getColonKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_ID
				{
					newLeafNode(lv_value_2_0, grammarAccess.getTagAccess().getValueIDTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTagRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule MultiplicityOperator
ruleMultiplicityOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='allOf'
			{
				$current = grammarAccess.getMultiplicityOperatorAccess().getAllOfEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getMultiplicityOperatorAccess().getAllOfEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='anyOf'
			{
				$current = grammarAccess.getMultiplicityOperatorAccess().getAllOfEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getMultiplicityOperatorAccess().getAllOfEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='exclusivelyOneOf'
			{
				$current = grammarAccess.getMultiplicityOperatorAccess().getExclusivelyOneOfEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getMultiplicityOperatorAccess().getExclusivelyOneOfEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule TransportProtocol
ruleTransportProtocol returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='TCP'
			{
				$current = grammarAccess.getTransportProtocolAccess().getTCPEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getTransportProtocolAccess().getTCPEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='UDP'
			{
				$current = grammarAccess.getTransportProtocolAccess().getUDPEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getTransportProtocolAccess().getUDPEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule NetworkClassEnum
ruleNetworkClassEnum returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Ethernet'
			{
				$current = grammarAccess.getNetworkClassEnumAccess().getEthernetEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNetworkClassEnumAccess().getEthernetEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Wifi'
			{
				$current = grammarAccess.getNetworkClassEnumAccess().getWifiEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNetworkClassEnumAccess().getWifiEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Bluetooth'
			{
				$current = grammarAccess.getNetworkClassEnumAccess().getBluetoothEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNetworkClassEnumAccess().getBluetoothEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule ComparaisonOperator
ruleComparaisonOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Lesser'
			{
				$current = grammarAccess.getComparaisonOperatorAccess().getLesserEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getComparaisonOperatorAccess().getLesserEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Greater'
			{
				$current = grammarAccess.getComparaisonOperatorAccess().getGreaterEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getComparaisonOperatorAccess().getGreaterEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Equal'
			{
				$current = grammarAccess.getComparaisonOperatorAccess().getEqualEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getComparaisonOperatorAccess().getEqualEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='LesserOrEqual'
			{
				$current = grammarAccess.getComparaisonOperatorAccess().getLesserOrEqualEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getComparaisonOperatorAccess().getLesserOrEqualEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='GreaterOrEqual'
			{
				$current = grammarAccess.getComparaisonOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getComparaisonOperatorAccess().getGreaterOrEqualEnumLiteralDeclaration_4());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
